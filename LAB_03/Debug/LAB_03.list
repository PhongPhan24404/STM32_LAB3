
LAB_03.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000030f4  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000024  08003200  08003200  00013200  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08003224  08003224  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  08003224  08003224  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08003224  08003224  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08003224  08003224  00013224  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08003228  08003228  00013228  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  0800322c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000f0  2000006c  08003298  0002006c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000015c  08003298  0002015c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000906e  00000000  00000000  00020095  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000017ec  00000000  00000000  00029103  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000a98  00000000  00000000  0002a8f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000009d0  00000000  00000000  0002b388  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000164db  00000000  00000000  0002bd58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000a328  00000000  00000000  00042233  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00082419  00000000  00000000  0004c55b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000ce974  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002b08  00000000  00000000  000ce9c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000006c 	.word	0x2000006c
 8000128:	00000000 	.word	0x00000000
 800012c:	080031e8 	.word	0x080031e8

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000070 	.word	0x20000070
 8000148:	080031e8 	.word	0x080031e8

0800014c <isButtonPressed>:
 * @brief Kiểm tra nếu nút được nhấn.
 *
 * @param index Chỉ số của nút nhấn.
 * @return 1 nếu nút được nhấn, 0 nếu không.
 */
int isButtonPressed(int index){
 800014c:	b480      	push	{r7}
 800014e:	b083      	sub	sp, #12
 8000150:	af00      	add	r7, sp, #0
 8000152:	6078      	str	r0, [r7, #4]
    if(button_flag[index] == 1){
 8000154:	4a09      	ldr	r2, [pc, #36]	; (800017c <isButtonPressed+0x30>)
 8000156:	687b      	ldr	r3, [r7, #4]
 8000158:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800015c:	2b01      	cmp	r3, #1
 800015e:	d106      	bne.n	800016e <isButtonPressed+0x22>
        button_flag[index] = 0; // Đặt lại cờ sau khi kiểm tra
 8000160:	4a06      	ldr	r2, [pc, #24]	; (800017c <isButtonPressed+0x30>)
 8000162:	687b      	ldr	r3, [r7, #4]
 8000164:	2100      	movs	r1, #0
 8000166:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        return 1;
 800016a:	2301      	movs	r3, #1
 800016c:	e000      	b.n	8000170 <isButtonPressed+0x24>
    }
    return 0;
 800016e:	2300      	movs	r3, #0
}
 8000170:	4618      	mov	r0, r3
 8000172:	370c      	adds	r7, #12
 8000174:	46bd      	mov	sp, r7
 8000176:	bc80      	pop	{r7}
 8000178:	4770      	bx	lr
 800017a:	bf00      	nop
 800017c:	20000088 	.word	0x20000088

08000180 <subKeyProcess>:
/**
 * @brief Xử lý sự kiện khi nút nhấn được phát hiện.
 *
 * @param index Chỉ số của nút nhấn.
 */
void subKeyProcess(int index){
 8000180:	b480      	push	{r7}
 8000182:	b083      	sub	sp, #12
 8000184:	af00      	add	r7, sp, #0
 8000186:	6078      	str	r0, [r7, #4]
    button_flag[index] = 1; // Đặt cờ trạng thái nút nhấn
 8000188:	4a04      	ldr	r2, [pc, #16]	; (800019c <subKeyProcess+0x1c>)
 800018a:	687b      	ldr	r3, [r7, #4]
 800018c:	2101      	movs	r1, #1
 800018e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 8000192:	bf00      	nop
 8000194:	370c      	adds	r7, #12
 8000196:	46bd      	mov	sp, r7
 8000198:	bc80      	pop	{r7}
 800019a:	4770      	bx	lr
 800019c:	20000088 	.word	0x20000088

080001a0 <getKeyInput>:

/**
 * @brief Đọc trạng thái nút nhấn và cập nhật trạng thái.
 */
void getKeyInput(){
 80001a0:	b580      	push	{r7, lr}
 80001a2:	b082      	sub	sp, #8
 80001a4:	af00      	add	r7, sp, #0
    for (int i = 0; i < NUM_BUTTON; i++) {
 80001a6:	2300      	movs	r3, #0
 80001a8:	607b      	str	r3, [r7, #4]
 80001aa:	e073      	b.n	8000294 <getKeyInput+0xf4>
        KeyReg2[i] = KeyReg1[i];
 80001ac:	4a3d      	ldr	r2, [pc, #244]	; (80002a4 <getKeyInput+0x104>)
 80001ae:	687b      	ldr	r3, [r7, #4]
 80001b0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001b4:	493c      	ldr	r1, [pc, #240]	; (80002a8 <getKeyInput+0x108>)
 80001b6:	687b      	ldr	r3, [r7, #4]
 80001b8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        KeyReg1[i] = KeyReg0[i];
 80001bc:	4a3b      	ldr	r2, [pc, #236]	; (80002ac <getKeyInput+0x10c>)
 80001be:	687b      	ldr	r3, [r7, #4]
 80001c0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001c4:	4937      	ldr	r1, [pc, #220]	; (80002a4 <getKeyInput+0x104>)
 80001c6:	687b      	ldr	r3, [r7, #4]
 80001c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        KeyReg0[i] = HAL_GPIO_ReadPin(GPIOA, BUTTON[i]); // Đọc trạng thái nút nhấn
 80001cc:	4a38      	ldr	r2, [pc, #224]	; (80002b0 <getKeyInput+0x110>)
 80001ce:	687b      	ldr	r3, [r7, #4]
 80001d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80001d4:	b29b      	uxth	r3, r3
 80001d6:	4619      	mov	r1, r3
 80001d8:	4836      	ldr	r0, [pc, #216]	; (80002b4 <getKeyInput+0x114>)
 80001da:	f001 ffd9 	bl	8002190 <HAL_GPIO_ReadPin>
 80001de:	4603      	mov	r3, r0
 80001e0:	4619      	mov	r1, r3
 80001e2:	4a32      	ldr	r2, [pc, #200]	; (80002ac <getKeyInput+0x10c>)
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

        if ((KeyReg1[i] == KeyReg0[i]) && (KeyReg1[i] == KeyReg2[i])) {
 80001ea:	4a2e      	ldr	r2, [pc, #184]	; (80002a4 <getKeyInput+0x104>)
 80001ec:	687b      	ldr	r3, [r7, #4]
 80001ee:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80001f2:	492e      	ldr	r1, [pc, #184]	; (80002ac <getKeyInput+0x10c>)
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80001fa:	429a      	cmp	r2, r3
 80001fc:	d147      	bne.n	800028e <getKeyInput+0xee>
 80001fe:	4a29      	ldr	r2, [pc, #164]	; (80002a4 <getKeyInput+0x104>)
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000206:	4928      	ldr	r1, [pc, #160]	; (80002a8 <getKeyInput+0x108>)
 8000208:	687b      	ldr	r3, [r7, #4]
 800020a:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800020e:	429a      	cmp	r2, r3
 8000210:	d13d      	bne.n	800028e <getKeyInput+0xee>
            if (KeyReg2[i] != KeyReg3[i]) {
 8000212:	4a25      	ldr	r2, [pc, #148]	; (80002a8 <getKeyInput+0x108>)
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800021a:	4927      	ldr	r1, [pc, #156]	; (80002b8 <getKeyInput+0x118>)
 800021c:	687b      	ldr	r3, [r7, #4]
 800021e:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8000222:	429a      	cmp	r2, r3
 8000224:	d016      	beq.n	8000254 <getKeyInput+0xb4>
                KeyReg3[i] = KeyReg2[i];
 8000226:	4a20      	ldr	r2, [pc, #128]	; (80002a8 <getKeyInput+0x108>)
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800022e:	4922      	ldr	r1, [pc, #136]	; (80002b8 <getKeyInput+0x118>)
 8000230:	687b      	ldr	r3, [r7, #4]
 8000232:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

                if (KeyReg3[i] == PRESSED_STATE) {
 8000236:	4a20      	ldr	r2, [pc, #128]	; (80002b8 <getKeyInput+0x118>)
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800023e:	2b00      	cmp	r3, #0
 8000240:	d125      	bne.n	800028e <getKeyInput+0xee>
                    TimeOutForKeyPress[i] = 200; // Đặt thời gian chờ khi nhấn
 8000242:	4a1e      	ldr	r2, [pc, #120]	; (80002bc <getKeyInput+0x11c>)
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	21c8      	movs	r1, #200	; 0xc8
 8000248:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    subKeyProcess(i); // Xử lý nút nhấn
 800024c:	6878      	ldr	r0, [r7, #4]
 800024e:	f7ff ff97 	bl	8000180 <subKeyProcess>
 8000252:	e01c      	b.n	800028e <getKeyInput+0xee>
                }

            } else {
                TimeOutForKeyPress[i]--;
 8000254:	4a19      	ldr	r2, [pc, #100]	; (80002bc <getKeyInput+0x11c>)
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800025c:	1e5a      	subs	r2, r3, #1
 800025e:	4917      	ldr	r1, [pc, #92]	; (80002bc <getKeyInput+0x11c>)
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
                if (TimeOutForKeyPress[i] == 0) {
 8000266:	4a15      	ldr	r2, [pc, #84]	; (80002bc <getKeyInput+0x11c>)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800026e:	2b00      	cmp	r3, #0
 8000270:	d10d      	bne.n	800028e <getKeyInput+0xee>
                    TimeOutForKeyPress[i] = 200; // Đặt lại thời gian chờ
 8000272:	4a12      	ldr	r2, [pc, #72]	; (80002bc <getKeyInput+0x11c>)
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	21c8      	movs	r1, #200	; 0xc8
 8000278:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    if (KeyReg3[i] == PRESSED_STATE) {
 800027c:	4a0e      	ldr	r2, [pc, #56]	; (80002b8 <getKeyInput+0x118>)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000284:	2b00      	cmp	r3, #0
 8000286:	d102      	bne.n	800028e <getKeyInput+0xee>
                        subKeyProcess(i); // Xử lý nút nhấn
 8000288:	6878      	ldr	r0, [r7, #4]
 800028a:	f7ff ff79 	bl	8000180 <subKeyProcess>
    for (int i = 0; i < NUM_BUTTON; i++) {
 800028e:	687b      	ldr	r3, [r7, #4]
 8000290:	3301      	adds	r3, #1
 8000292:	607b      	str	r3, [r7, #4]
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	2b02      	cmp	r3, #2
 8000298:	dd88      	ble.n	80001ac <getKeyInput+0xc>
                    }
                }
            }
        }
    }
}
 800029a:	bf00      	nop
 800029c:	bf00      	nop
 800029e:	3708      	adds	r7, #8
 80002a0:	46bd      	mov	sp, r7
 80002a2:	bd80      	pop	{r7, pc}
 80002a4:	2000000c 	.word	0x2000000c
 80002a8:	20000018 	.word	0x20000018
 80002ac:	20000000 	.word	0x20000000
 80002b0:	20000030 	.word	0x20000030
 80002b4:	40010800 	.word	0x40010800
 80002b8:	20000024 	.word	0x20000024
 80002bc:	2000003c 	.word	0x2000003c

080002c0 <toggleAllRed>:
/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */

// light setup:

void toggleAllRed(){
 80002c0:	b580      	push	{r7, lr}
 80002c2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, YELLOWB, GPIO_PIN_RESET);
 80002c4:	2200      	movs	r2, #0
 80002c6:	2140      	movs	r1, #64	; 0x40
 80002c8:	480d      	ldr	r0, [pc, #52]	; (8000300 <toggleAllRed+0x40>)
 80002ca:	f001 ff78 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENB, GPIO_PIN_RESET);
 80002ce:	2200      	movs	r2, #0
 80002d0:	2180      	movs	r1, #128	; 0x80
 80002d2:	480b      	ldr	r0, [pc, #44]	; (8000300 <toggleAllRed+0x40>)
 80002d4:	f001 ff73 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWA, GPIO_PIN_RESET);
 80002d8:	2200      	movs	r2, #0
 80002da:	2104      	movs	r1, #4
 80002dc:	4808      	ldr	r0, [pc, #32]	; (8000300 <toggleAllRed+0x40>)
 80002de:	f001 ff6e 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENA, GPIO_PIN_RESET);
 80002e2:	2200      	movs	r2, #0
 80002e4:	2108      	movs	r1, #8
 80002e6:	4806      	ldr	r0, [pc, #24]	; (8000300 <toggleAllRed+0x40>)
 80002e8:	f001 ff69 	bl	80021be <HAL_GPIO_WritePin>

	HAL_GPIO_TogglePin(GPIOA, REDA);
 80002ec:	2102      	movs	r1, #2
 80002ee:	4804      	ldr	r0, [pc, #16]	; (8000300 <toggleAllRed+0x40>)
 80002f0:	f001 ff7d 	bl	80021ee <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(GPIOA, REDB);
 80002f4:	2110      	movs	r1, #16
 80002f6:	4802      	ldr	r0, [pc, #8]	; (8000300 <toggleAllRed+0x40>)
 80002f8:	f001 ff79 	bl	80021ee <HAL_GPIO_TogglePin>
}
 80002fc:	bf00      	nop
 80002fe:	bd80      	pop	{r7, pc}
 8000300:	40010800 	.word	0x40010800

08000304 <toggleAllGreen>:

void toggleAllGreen(){
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, YELLOWB, GPIO_PIN_RESET);
 8000308:	2200      	movs	r2, #0
 800030a:	2140      	movs	r1, #64	; 0x40
 800030c:	480d      	ldr	r0, [pc, #52]	; (8000344 <toggleAllGreen+0x40>)
 800030e:	f001 ff56 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, REDB, GPIO_PIN_RESET);
 8000312:	2200      	movs	r2, #0
 8000314:	2110      	movs	r1, #16
 8000316:	480b      	ldr	r0, [pc, #44]	; (8000344 <toggleAllGreen+0x40>)
 8000318:	f001 ff51 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWA, GPIO_PIN_RESET);
 800031c:	2200      	movs	r2, #0
 800031e:	2104      	movs	r1, #4
 8000320:	4808      	ldr	r0, [pc, #32]	; (8000344 <toggleAllGreen+0x40>)
 8000322:	f001 ff4c 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, REDA, GPIO_PIN_RESET);
 8000326:	2200      	movs	r2, #0
 8000328:	2102      	movs	r1, #2
 800032a:	4806      	ldr	r0, [pc, #24]	; (8000344 <toggleAllGreen+0x40>)
 800032c:	f001 ff47 	bl	80021be <HAL_GPIO_WritePin>

	HAL_GPIO_TogglePin(GPIOA, GREENA);
 8000330:	2108      	movs	r1, #8
 8000332:	4804      	ldr	r0, [pc, #16]	; (8000344 <toggleAllGreen+0x40>)
 8000334:	f001 ff5b 	bl	80021ee <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(GPIOA, GREENB);
 8000338:	2180      	movs	r1, #128	; 0x80
 800033a:	4802      	ldr	r0, [pc, #8]	; (8000344 <toggleAllGreen+0x40>)
 800033c:	f001 ff57 	bl	80021ee <HAL_GPIO_TogglePin>
}
 8000340:	bf00      	nop
 8000342:	bd80      	pop	{r7, pc}
 8000344:	40010800 	.word	0x40010800

08000348 <toggleAllYellow>:

void toggleAllYellow(){
 8000348:	b580      	push	{r7, lr}
 800034a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, GREENB, GPIO_PIN_RESET);
 800034c:	2200      	movs	r2, #0
 800034e:	2180      	movs	r1, #128	; 0x80
 8000350:	480d      	ldr	r0, [pc, #52]	; (8000388 <toggleAllYellow+0x40>)
 8000352:	f001 ff34 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, REDB, GPIO_PIN_RESET);
 8000356:	2200      	movs	r2, #0
 8000358:	2110      	movs	r1, #16
 800035a:	480b      	ldr	r0, [pc, #44]	; (8000388 <toggleAllYellow+0x40>)
 800035c:	f001 ff2f 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENA, GPIO_PIN_RESET);
 8000360:	2200      	movs	r2, #0
 8000362:	2108      	movs	r1, #8
 8000364:	4808      	ldr	r0, [pc, #32]	; (8000388 <toggleAllYellow+0x40>)
 8000366:	f001 ff2a 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, REDA, GPIO_PIN_RESET);
 800036a:	2200      	movs	r2, #0
 800036c:	2102      	movs	r1, #2
 800036e:	4806      	ldr	r0, [pc, #24]	; (8000388 <toggleAllYellow+0x40>)
 8000370:	f001 ff25 	bl	80021be <HAL_GPIO_WritePin>

	HAL_GPIO_TogglePin(GPIOA, YELLOWA);
 8000374:	2104      	movs	r1, #4
 8000376:	4804      	ldr	r0, [pc, #16]	; (8000388 <toggleAllYellow+0x40>)
 8000378:	f001 ff39 	bl	80021ee <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(GPIOA, YELLOWB);
 800037c:	2140      	movs	r1, #64	; 0x40
 800037e:	4802      	ldr	r0, [pc, #8]	; (8000388 <toggleAllYellow+0x40>)
 8000380:	f001 ff35 	bl	80021ee <HAL_GPIO_TogglePin>
}
 8000384:	bf00      	nop
 8000386:	bd80      	pop	{r7, pc}
 8000388:	40010800 	.word	0x40010800

0800038c <setRedAGreenB>:

void setRedAGreenB()
{
 800038c:	b580      	push	{r7, lr}
 800038e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, REDA, GPIO_PIN_SET);
 8000390:	2201      	movs	r2, #1
 8000392:	2102      	movs	r1, #2
 8000394:	480e      	ldr	r0, [pc, #56]	; (80003d0 <setRedAGreenB+0x44>)
 8000396:	f001 ff12 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWA, GPIO_PIN_RESET);
 800039a:	2200      	movs	r2, #0
 800039c:	2104      	movs	r1, #4
 800039e:	480c      	ldr	r0, [pc, #48]	; (80003d0 <setRedAGreenB+0x44>)
 80003a0:	f001 ff0d 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENA, GPIO_PIN_RESET);
 80003a4:	2200      	movs	r2, #0
 80003a6:	2108      	movs	r1, #8
 80003a8:	4809      	ldr	r0, [pc, #36]	; (80003d0 <setRedAGreenB+0x44>)
 80003aa:	f001 ff08 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, REDB, GPIO_PIN_RESET);
 80003ae:	2200      	movs	r2, #0
 80003b0:	2110      	movs	r1, #16
 80003b2:	4807      	ldr	r0, [pc, #28]	; (80003d0 <setRedAGreenB+0x44>)
 80003b4:	f001 ff03 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWB, GPIO_PIN_RESET);
 80003b8:	2200      	movs	r2, #0
 80003ba:	2140      	movs	r1, #64	; 0x40
 80003bc:	4804      	ldr	r0, [pc, #16]	; (80003d0 <setRedAGreenB+0x44>)
 80003be:	f001 fefe 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENB, GPIO_PIN_SET);
 80003c2:	2201      	movs	r2, #1
 80003c4:	2180      	movs	r1, #128	; 0x80
 80003c6:	4802      	ldr	r0, [pc, #8]	; (80003d0 <setRedAGreenB+0x44>)
 80003c8:	f001 fef9 	bl	80021be <HAL_GPIO_WritePin>
}
 80003cc:	bf00      	nop
 80003ce:	bd80      	pop	{r7, pc}
 80003d0:	40010800 	.word	0x40010800

080003d4 <setRedAYellowB>:

void setRedAYellowB()
{
 80003d4:	b580      	push	{r7, lr}
 80003d6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, REDA, GPIO_PIN_SET);
 80003d8:	2201      	movs	r2, #1
 80003da:	2102      	movs	r1, #2
 80003dc:	480e      	ldr	r0, [pc, #56]	; (8000418 <setRedAYellowB+0x44>)
 80003de:	f001 feee 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWA, GPIO_PIN_RESET);
 80003e2:	2200      	movs	r2, #0
 80003e4:	2104      	movs	r1, #4
 80003e6:	480c      	ldr	r0, [pc, #48]	; (8000418 <setRedAYellowB+0x44>)
 80003e8:	f001 fee9 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENA, GPIO_PIN_RESET);
 80003ec:	2200      	movs	r2, #0
 80003ee:	2108      	movs	r1, #8
 80003f0:	4809      	ldr	r0, [pc, #36]	; (8000418 <setRedAYellowB+0x44>)
 80003f2:	f001 fee4 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, REDB, GPIO_PIN_RESET);
 80003f6:	2200      	movs	r2, #0
 80003f8:	2110      	movs	r1, #16
 80003fa:	4807      	ldr	r0, [pc, #28]	; (8000418 <setRedAYellowB+0x44>)
 80003fc:	f001 fedf 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWB, GPIO_PIN_SET);
 8000400:	2201      	movs	r2, #1
 8000402:	2140      	movs	r1, #64	; 0x40
 8000404:	4804      	ldr	r0, [pc, #16]	; (8000418 <setRedAYellowB+0x44>)
 8000406:	f001 feda 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENB, GPIO_PIN_RESET);
 800040a:	2200      	movs	r2, #0
 800040c:	2180      	movs	r1, #128	; 0x80
 800040e:	4802      	ldr	r0, [pc, #8]	; (8000418 <setRedAYellowB+0x44>)
 8000410:	f001 fed5 	bl	80021be <HAL_GPIO_WritePin>
}
 8000414:	bf00      	nop
 8000416:	bd80      	pop	{r7, pc}
 8000418:	40010800 	.word	0x40010800

0800041c <setGreenARedB>:

void setGreenARedB()
{
 800041c:	b580      	push	{r7, lr}
 800041e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, REDA, GPIO_PIN_RESET);
 8000420:	2200      	movs	r2, #0
 8000422:	2102      	movs	r1, #2
 8000424:	480e      	ldr	r0, [pc, #56]	; (8000460 <setGreenARedB+0x44>)
 8000426:	f001 feca 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWA, GPIO_PIN_RESET);
 800042a:	2200      	movs	r2, #0
 800042c:	2104      	movs	r1, #4
 800042e:	480c      	ldr	r0, [pc, #48]	; (8000460 <setGreenARedB+0x44>)
 8000430:	f001 fec5 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENA, GPIO_PIN_SET);
 8000434:	2201      	movs	r2, #1
 8000436:	2108      	movs	r1, #8
 8000438:	4809      	ldr	r0, [pc, #36]	; (8000460 <setGreenARedB+0x44>)
 800043a:	f001 fec0 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, REDB, GPIO_PIN_SET);
 800043e:	2201      	movs	r2, #1
 8000440:	2110      	movs	r1, #16
 8000442:	4807      	ldr	r0, [pc, #28]	; (8000460 <setGreenARedB+0x44>)
 8000444:	f001 febb 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWB, GPIO_PIN_RESET);
 8000448:	2200      	movs	r2, #0
 800044a:	2140      	movs	r1, #64	; 0x40
 800044c:	4804      	ldr	r0, [pc, #16]	; (8000460 <setGreenARedB+0x44>)
 800044e:	f001 feb6 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENB, GPIO_PIN_RESET);
 8000452:	2200      	movs	r2, #0
 8000454:	2180      	movs	r1, #128	; 0x80
 8000456:	4802      	ldr	r0, [pc, #8]	; (8000460 <setGreenARedB+0x44>)
 8000458:	f001 feb1 	bl	80021be <HAL_GPIO_WritePin>
}
 800045c:	bf00      	nop
 800045e:	bd80      	pop	{r7, pc}
 8000460:	40010800 	.word	0x40010800

08000464 <setYellowARedB>:

void setYellowARedB()
{
 8000464:	b580      	push	{r7, lr}
 8000466:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(GPIOA, REDA, GPIO_PIN_RESET);
 8000468:	2200      	movs	r2, #0
 800046a:	2102      	movs	r1, #2
 800046c:	480e      	ldr	r0, [pc, #56]	; (80004a8 <setYellowARedB+0x44>)
 800046e:	f001 fea6 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWA, GPIO_PIN_SET);
 8000472:	2201      	movs	r2, #1
 8000474:	2104      	movs	r1, #4
 8000476:	480c      	ldr	r0, [pc, #48]	; (80004a8 <setYellowARedB+0x44>)
 8000478:	f001 fea1 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENA, GPIO_PIN_RESET);
 800047c:	2200      	movs	r2, #0
 800047e:	2108      	movs	r1, #8
 8000480:	4809      	ldr	r0, [pc, #36]	; (80004a8 <setYellowARedB+0x44>)
 8000482:	f001 fe9c 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, REDB, GPIO_PIN_SET);
 8000486:	2201      	movs	r2, #1
 8000488:	2110      	movs	r1, #16
 800048a:	4807      	ldr	r0, [pc, #28]	; (80004a8 <setYellowARedB+0x44>)
 800048c:	f001 fe97 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, YELLOWB, GPIO_PIN_RESET);
 8000490:	2200      	movs	r2, #0
 8000492:	2140      	movs	r1, #64	; 0x40
 8000494:	4804      	ldr	r0, [pc, #16]	; (80004a8 <setYellowARedB+0x44>)
 8000496:	f001 fe92 	bl	80021be <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GREENB, GPIO_PIN_RESET);
 800049a:	2200      	movs	r2, #0
 800049c:	2180      	movs	r1, #128	; 0x80
 800049e:	4802      	ldr	r0, [pc, #8]	; (80004a8 <setYellowARedB+0x44>)
 80004a0:	f001 fe8d 	bl	80021be <HAL_GPIO_WritePin>
}
 80004a4:	bf00      	nop
 80004a6:	bd80      	pop	{r7, pc}
 80004a8:	40010800 	.word	0x40010800

080004ac <display7SEG_horizontal>:
	HAL_GPIO_WritePin(GPIOA, YELLOWA, GPIO_PIN_RESET);
	HAL_GPIO_WritePin(GPIOA, REDA, GPIO_PIN_RESET);
}

void display7SEG_horizontal(int num)
{
 80004ac:	b580      	push	{r7, lr}
 80004ae:	b082      	sub	sp, #8
 80004b0:	af00      	add	r7, sp, #0
 80004b2:	6078      	str	r0, [r7, #4]
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	2b09      	cmp	r3, #9
 80004b8:	f200 8180 	bhi.w	80007bc <display7SEG_horizontal+0x310>
 80004bc:	a201      	add	r2, pc, #4	; (adr r2, 80004c4 <display7SEG_horizontal+0x18>)
 80004be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004c2:	bf00      	nop
 80004c4:	080004ed 	.word	0x080004ed
 80004c8:	08000535 	.word	0x08000535
 80004cc:	0800057d 	.word	0x0800057d
 80004d0:	080005c5 	.word	0x080005c5
 80004d4:	0800060d 	.word	0x0800060d
 80004d8:	08000655 	.word	0x08000655
 80004dc:	0800069d 	.word	0x0800069d
 80004e0:	080006e5 	.word	0x080006e5
 80004e4:	0800072d 	.word	0x0800072d
 80004e8:	08000775 	.word	0x08000775
	switch(num){
	  case 0:
		  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_RESET);
 80004ec:	2200      	movs	r2, #0
 80004ee:	2101      	movs	r1, #1
 80004f0:	48b4      	ldr	r0, [pc, #720]	; (80007c4 <display7SEG_horizontal+0x318>)
 80004f2:	f001 fe64 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_RESET);
 80004f6:	2200      	movs	r2, #0
 80004f8:	2102      	movs	r1, #2
 80004fa:	48b2      	ldr	r0, [pc, #712]	; (80007c4 <display7SEG_horizontal+0x318>)
 80004fc:	f001 fe5f 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 8000500:	2200      	movs	r2, #0
 8000502:	2104      	movs	r1, #4
 8000504:	48af      	ldr	r0, [pc, #700]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000506:	f001 fe5a 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_RESET);
 800050a:	2200      	movs	r2, #0
 800050c:	2108      	movs	r1, #8
 800050e:	48ad      	ldr	r0, [pc, #692]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000510:	f001 fe55 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_RESET);
 8000514:	2200      	movs	r2, #0
 8000516:	2110      	movs	r1, #16
 8000518:	48aa      	ldr	r0, [pc, #680]	; (80007c4 <display7SEG_horizontal+0x318>)
 800051a:	f001 fe50 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_RESET);
 800051e:	2200      	movs	r2, #0
 8000520:	2120      	movs	r1, #32
 8000522:	48a8      	ldr	r0, [pc, #672]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000524:	f001 fe4b 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_SET);
 8000528:	2201      	movs	r2, #1
 800052a:	2140      	movs	r1, #64	; 0x40
 800052c:	48a5      	ldr	r0, [pc, #660]	; (80007c4 <display7SEG_horizontal+0x318>)
 800052e:	f001 fe46 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000532:	e143      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 1:
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_SET);
 8000534:	2201      	movs	r2, #1
 8000536:	2101      	movs	r1, #1
 8000538:	48a2      	ldr	r0, [pc, #648]	; (80007c4 <display7SEG_horizontal+0x318>)
 800053a:	f001 fe40 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_RESET);
 800053e:	2200      	movs	r2, #0
 8000540:	2102      	movs	r1, #2
 8000542:	48a0      	ldr	r0, [pc, #640]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000544:	f001 fe3b 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 8000548:	2200      	movs	r2, #0
 800054a:	2104      	movs	r1, #4
 800054c:	489d      	ldr	r0, [pc, #628]	; (80007c4 <display7SEG_horizontal+0x318>)
 800054e:	f001 fe36 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_SET);
 8000552:	2201      	movs	r2, #1
 8000554:	2108      	movs	r1, #8
 8000556:	489b      	ldr	r0, [pc, #620]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000558:	f001 fe31 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_SET);
 800055c:	2201      	movs	r2, #1
 800055e:	2110      	movs	r1, #16
 8000560:	4898      	ldr	r0, [pc, #608]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000562:	f001 fe2c 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_SET);
 8000566:	2201      	movs	r2, #1
 8000568:	2120      	movs	r1, #32
 800056a:	4896      	ldr	r0, [pc, #600]	; (80007c4 <display7SEG_horizontal+0x318>)
 800056c:	f001 fe27 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_SET);
 8000570:	2201      	movs	r2, #1
 8000572:	2140      	movs	r1, #64	; 0x40
 8000574:	4893      	ldr	r0, [pc, #588]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000576:	f001 fe22 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 800057a:	e11f      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 2:
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_RESET);
 800057c:	2200      	movs	r2, #0
 800057e:	2101      	movs	r1, #1
 8000580:	4890      	ldr	r0, [pc, #576]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000582:	f001 fe1c 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_RESET);
 8000586:	2200      	movs	r2, #0
 8000588:	2102      	movs	r1, #2
 800058a:	488e      	ldr	r0, [pc, #568]	; (80007c4 <display7SEG_horizontal+0x318>)
 800058c:	f001 fe17 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_SET);
 8000590:	2201      	movs	r2, #1
 8000592:	2104      	movs	r1, #4
 8000594:	488b      	ldr	r0, [pc, #556]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000596:	f001 fe12 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_RESET);
 800059a:	2200      	movs	r2, #0
 800059c:	2108      	movs	r1, #8
 800059e:	4889      	ldr	r0, [pc, #548]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005a0:	f001 fe0d 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_RESET);
 80005a4:	2200      	movs	r2, #0
 80005a6:	2110      	movs	r1, #16
 80005a8:	4886      	ldr	r0, [pc, #536]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005aa:	f001 fe08 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_SET);
 80005ae:	2201      	movs	r2, #1
 80005b0:	2120      	movs	r1, #32
 80005b2:	4884      	ldr	r0, [pc, #528]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005b4:	f001 fe03 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_RESET);
 80005b8:	2200      	movs	r2, #0
 80005ba:	2140      	movs	r1, #64	; 0x40
 80005bc:	4881      	ldr	r0, [pc, #516]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005be:	f001 fdfe 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 80005c2:	e0fb      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 3:
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_RESET);
 80005c4:	2200      	movs	r2, #0
 80005c6:	2101      	movs	r1, #1
 80005c8:	487e      	ldr	r0, [pc, #504]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005ca:	f001 fdf8 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_RESET);
 80005ce:	2200      	movs	r2, #0
 80005d0:	2102      	movs	r1, #2
 80005d2:	487c      	ldr	r0, [pc, #496]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005d4:	f001 fdf3 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 80005d8:	2200      	movs	r2, #0
 80005da:	2104      	movs	r1, #4
 80005dc:	4879      	ldr	r0, [pc, #484]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005de:	f001 fdee 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_RESET);
 80005e2:	2200      	movs	r2, #0
 80005e4:	2108      	movs	r1, #8
 80005e6:	4877      	ldr	r0, [pc, #476]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005e8:	f001 fde9 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_SET);
 80005ec:	2201      	movs	r2, #1
 80005ee:	2110      	movs	r1, #16
 80005f0:	4874      	ldr	r0, [pc, #464]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005f2:	f001 fde4 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_SET);
 80005f6:	2201      	movs	r2, #1
 80005f8:	2120      	movs	r1, #32
 80005fa:	4872      	ldr	r0, [pc, #456]	; (80007c4 <display7SEG_horizontal+0x318>)
 80005fc:	f001 fddf 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_RESET);
 8000600:	2200      	movs	r2, #0
 8000602:	2140      	movs	r1, #64	; 0x40
 8000604:	486f      	ldr	r0, [pc, #444]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000606:	f001 fdda 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 800060a:	e0d7      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 4:
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_SET);
 800060c:	2201      	movs	r2, #1
 800060e:	2101      	movs	r1, #1
 8000610:	486c      	ldr	r0, [pc, #432]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000612:	f001 fdd4 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_RESET);
 8000616:	2200      	movs	r2, #0
 8000618:	2102      	movs	r1, #2
 800061a:	486a      	ldr	r0, [pc, #424]	; (80007c4 <display7SEG_horizontal+0x318>)
 800061c:	f001 fdcf 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 8000620:	2200      	movs	r2, #0
 8000622:	2104      	movs	r1, #4
 8000624:	4867      	ldr	r0, [pc, #412]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000626:	f001 fdca 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_SET);
 800062a:	2201      	movs	r2, #1
 800062c:	2108      	movs	r1, #8
 800062e:	4865      	ldr	r0, [pc, #404]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000630:	f001 fdc5 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_SET);
 8000634:	2201      	movs	r2, #1
 8000636:	2110      	movs	r1, #16
 8000638:	4862      	ldr	r0, [pc, #392]	; (80007c4 <display7SEG_horizontal+0x318>)
 800063a:	f001 fdc0 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_RESET);
 800063e:	2200      	movs	r2, #0
 8000640:	2120      	movs	r1, #32
 8000642:	4860      	ldr	r0, [pc, #384]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000644:	f001 fdbb 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_RESET);
 8000648:	2200      	movs	r2, #0
 800064a:	2140      	movs	r1, #64	; 0x40
 800064c:	485d      	ldr	r0, [pc, #372]	; (80007c4 <display7SEG_horizontal+0x318>)
 800064e:	f001 fdb6 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000652:	e0b3      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 5:
		  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_RESET);
 8000654:	2200      	movs	r2, #0
 8000656:	2101      	movs	r1, #1
 8000658:	485a      	ldr	r0, [pc, #360]	; (80007c4 <display7SEG_horizontal+0x318>)
 800065a:	f001 fdb0 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_SET);
 800065e:	2201      	movs	r2, #1
 8000660:	2102      	movs	r1, #2
 8000662:	4858      	ldr	r0, [pc, #352]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000664:	f001 fdab 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 8000668:	2200      	movs	r2, #0
 800066a:	2104      	movs	r1, #4
 800066c:	4855      	ldr	r0, [pc, #340]	; (80007c4 <display7SEG_horizontal+0x318>)
 800066e:	f001 fda6 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_RESET);
 8000672:	2200      	movs	r2, #0
 8000674:	2108      	movs	r1, #8
 8000676:	4853      	ldr	r0, [pc, #332]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000678:	f001 fda1 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_SET);
 800067c:	2201      	movs	r2, #1
 800067e:	2110      	movs	r1, #16
 8000680:	4850      	ldr	r0, [pc, #320]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000682:	f001 fd9c 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_RESET);
 8000686:	2200      	movs	r2, #0
 8000688:	2120      	movs	r1, #32
 800068a:	484e      	ldr	r0, [pc, #312]	; (80007c4 <display7SEG_horizontal+0x318>)
 800068c:	f001 fd97 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_RESET);
 8000690:	2200      	movs	r2, #0
 8000692:	2140      	movs	r1, #64	; 0x40
 8000694:	484b      	ldr	r0, [pc, #300]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000696:	f001 fd92 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 800069a:	e08f      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 6:
		  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_RESET);
 800069c:	2200      	movs	r2, #0
 800069e:	2101      	movs	r1, #1
 80006a0:	4848      	ldr	r0, [pc, #288]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006a2:	f001 fd8c 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_SET);
 80006a6:	2201      	movs	r2, #1
 80006a8:	2102      	movs	r1, #2
 80006aa:	4846      	ldr	r0, [pc, #280]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006ac:	f001 fd87 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 80006b0:	2200      	movs	r2, #0
 80006b2:	2104      	movs	r1, #4
 80006b4:	4843      	ldr	r0, [pc, #268]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006b6:	f001 fd82 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_RESET);
 80006ba:	2200      	movs	r2, #0
 80006bc:	2110      	movs	r1, #16
 80006be:	4841      	ldr	r0, [pc, #260]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006c0:	f001 fd7d 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_RESET);
 80006c4:	2200      	movs	r2, #0
 80006c6:	2108      	movs	r1, #8
 80006c8:	483e      	ldr	r0, [pc, #248]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006ca:	f001 fd78 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_RESET);
 80006ce:	2200      	movs	r2, #0
 80006d0:	2120      	movs	r1, #32
 80006d2:	483c      	ldr	r0, [pc, #240]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006d4:	f001 fd73 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_RESET);
 80006d8:	2200      	movs	r2, #0
 80006da:	2140      	movs	r1, #64	; 0x40
 80006dc:	4839      	ldr	r0, [pc, #228]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006de:	f001 fd6e 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 80006e2:	e06b      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 7:
		  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_RESET);
 80006e4:	2200      	movs	r2, #0
 80006e6:	2101      	movs	r1, #1
 80006e8:	4836      	ldr	r0, [pc, #216]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006ea:	f001 fd68 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_RESET);
 80006ee:	2200      	movs	r2, #0
 80006f0:	2102      	movs	r1, #2
 80006f2:	4834      	ldr	r0, [pc, #208]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006f4:	f001 fd63 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 80006f8:	2200      	movs	r2, #0
 80006fa:	2104      	movs	r1, #4
 80006fc:	4831      	ldr	r0, [pc, #196]	; (80007c4 <display7SEG_horizontal+0x318>)
 80006fe:	f001 fd5e 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_SET);
 8000702:	2201      	movs	r2, #1
 8000704:	2108      	movs	r1, #8
 8000706:	482f      	ldr	r0, [pc, #188]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000708:	f001 fd59 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_SET);
 800070c:	2201      	movs	r2, #1
 800070e:	2110      	movs	r1, #16
 8000710:	482c      	ldr	r0, [pc, #176]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000712:	f001 fd54 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_SET);
 8000716:	2201      	movs	r2, #1
 8000718:	2120      	movs	r1, #32
 800071a:	482a      	ldr	r0, [pc, #168]	; (80007c4 <display7SEG_horizontal+0x318>)
 800071c:	f001 fd4f 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_SET);
 8000720:	2201      	movs	r2, #1
 8000722:	2140      	movs	r1, #64	; 0x40
 8000724:	4827      	ldr	r0, [pc, #156]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000726:	f001 fd4a 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 800072a:	e047      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 8:
		  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_RESET);
 800072c:	2200      	movs	r2, #0
 800072e:	2101      	movs	r1, #1
 8000730:	4824      	ldr	r0, [pc, #144]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000732:	f001 fd44 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_RESET);
 8000736:	2200      	movs	r2, #0
 8000738:	2102      	movs	r1, #2
 800073a:	4822      	ldr	r0, [pc, #136]	; (80007c4 <display7SEG_horizontal+0x318>)
 800073c:	f001 fd3f 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 8000740:	2200      	movs	r2, #0
 8000742:	2104      	movs	r1, #4
 8000744:	481f      	ldr	r0, [pc, #124]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000746:	f001 fd3a 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_RESET);
 800074a:	2200      	movs	r2, #0
 800074c:	2108      	movs	r1, #8
 800074e:	481d      	ldr	r0, [pc, #116]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000750:	f001 fd35 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_RESET);
 8000754:	2200      	movs	r2, #0
 8000756:	2110      	movs	r1, #16
 8000758:	481a      	ldr	r0, [pc, #104]	; (80007c4 <display7SEG_horizontal+0x318>)
 800075a:	f001 fd30 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_RESET);
 800075e:	2200      	movs	r2, #0
 8000760:	2120      	movs	r1, #32
 8000762:	4818      	ldr	r0, [pc, #96]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000764:	f001 fd2b 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_RESET);
 8000768:	2200      	movs	r2, #0
 800076a:	2140      	movs	r1, #64	; 0x40
 800076c:	4815      	ldr	r0, [pc, #84]	; (80007c4 <display7SEG_horizontal+0x318>)
 800076e:	f001 fd26 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000772:	e023      	b.n	80007bc <display7SEG_horizontal+0x310>
	  case 9:
		  HAL_GPIO_WritePin(GPIOB, SEG1_0, GPIO_PIN_RESET);
 8000774:	2200      	movs	r2, #0
 8000776:	2101      	movs	r1, #1
 8000778:	4812      	ldr	r0, [pc, #72]	; (80007c4 <display7SEG_horizontal+0x318>)
 800077a:	f001 fd20 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_1, GPIO_PIN_RESET);
 800077e:	2200      	movs	r2, #0
 8000780:	2102      	movs	r1, #2
 8000782:	4810      	ldr	r0, [pc, #64]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000784:	f001 fd1b 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_2, GPIO_PIN_RESET);
 8000788:	2200      	movs	r2, #0
 800078a:	2104      	movs	r1, #4
 800078c:	480d      	ldr	r0, [pc, #52]	; (80007c4 <display7SEG_horizontal+0x318>)
 800078e:	f001 fd16 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_3, GPIO_PIN_RESET);
 8000792:	2200      	movs	r2, #0
 8000794:	2108      	movs	r1, #8
 8000796:	480b      	ldr	r0, [pc, #44]	; (80007c4 <display7SEG_horizontal+0x318>)
 8000798:	f001 fd11 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_4, GPIO_PIN_SET);
 800079c:	2201      	movs	r2, #1
 800079e:	2110      	movs	r1, #16
 80007a0:	4808      	ldr	r0, [pc, #32]	; (80007c4 <display7SEG_horizontal+0x318>)
 80007a2:	f001 fd0c 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_5, GPIO_PIN_RESET);
 80007a6:	2200      	movs	r2, #0
 80007a8:	2120      	movs	r1, #32
 80007aa:	4806      	ldr	r0, [pc, #24]	; (80007c4 <display7SEG_horizontal+0x318>)
 80007ac:	f001 fd07 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG1_6, GPIO_PIN_RESET);
 80007b0:	2200      	movs	r2, #0
 80007b2:	2140      	movs	r1, #64	; 0x40
 80007b4:	4803      	ldr	r0, [pc, #12]	; (80007c4 <display7SEG_horizontal+0x318>)
 80007b6:	f001 fd02 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 80007ba:	bf00      	nop

	}
}
 80007bc:	bf00      	nop
 80007be:	3708      	adds	r7, #8
 80007c0:	46bd      	mov	sp, r7
 80007c2:	bd80      	pop	{r7, pc}
 80007c4:	40010c00 	.word	0x40010c00

080007c8 <display7SEG_vertical>:

void display7SEG_vertical(int num)
{
 80007c8:	b580      	push	{r7, lr}
 80007ca:	b082      	sub	sp, #8
 80007cc:	af00      	add	r7, sp, #0
 80007ce:	6078      	str	r0, [r7, #4]
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	2b09      	cmp	r3, #9
 80007d4:	f200 81bc 	bhi.w	8000b50 <display7SEG_vertical+0x388>
 80007d8:	a201      	add	r2, pc, #4	; (adr r2, 80007e0 <display7SEG_vertical+0x18>)
 80007da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80007de:	bf00      	nop
 80007e0:	08000809 	.word	0x08000809
 80007e4:	0800085d 	.word	0x0800085d
 80007e8:	080008b1 	.word	0x080008b1
 80007ec:	08000905 	.word	0x08000905
 80007f0:	08000959 	.word	0x08000959
 80007f4:	080009ad 	.word	0x080009ad
 80007f8:	08000a01 	.word	0x08000a01
 80007fc:	08000a55 	.word	0x08000a55
 8000800:	08000aa9 	.word	0x08000aa9
 8000804:	08000afd 	.word	0x08000afd
	switch(num){
	  case 0:
		  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_RESET);
 8000808:	2200      	movs	r2, #0
 800080a:	2180      	movs	r1, #128	; 0x80
 800080c:	48d2      	ldr	r0, [pc, #840]	; (8000b58 <display7SEG_vertical+0x390>)
 800080e:	f001 fcd6 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_RESET);
 8000812:	2200      	movs	r2, #0
 8000814:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000818:	48cf      	ldr	r0, [pc, #828]	; (8000b58 <display7SEG_vertical+0x390>)
 800081a:	f001 fcd0 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 800081e:	2200      	movs	r2, #0
 8000820:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000824:	48cc      	ldr	r0, [pc, #816]	; (8000b58 <display7SEG_vertical+0x390>)
 8000826:	f001 fcca 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_RESET);
 800082a:	2200      	movs	r2, #0
 800082c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000830:	48c9      	ldr	r0, [pc, #804]	; (8000b58 <display7SEG_vertical+0x390>)
 8000832:	f001 fcc4 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_RESET);
 8000836:	2200      	movs	r2, #0
 8000838:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800083c:	48c6      	ldr	r0, [pc, #792]	; (8000b58 <display7SEG_vertical+0x390>)
 800083e:	f001 fcbe 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_RESET);
 8000842:	2200      	movs	r2, #0
 8000844:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000848:	48c3      	ldr	r0, [pc, #780]	; (8000b58 <display7SEG_vertical+0x390>)
 800084a:	f001 fcb8 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_SET);
 800084e:	2201      	movs	r2, #1
 8000850:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000854:	48c0      	ldr	r0, [pc, #768]	; (8000b58 <display7SEG_vertical+0x390>)
 8000856:	f001 fcb2 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 800085a:	e179      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 1:
		  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_SET);
 800085c:	2201      	movs	r2, #1
 800085e:	2180      	movs	r1, #128	; 0x80
 8000860:	48bd      	ldr	r0, [pc, #756]	; (8000b58 <display7SEG_vertical+0x390>)
 8000862:	f001 fcac 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_RESET);
 8000866:	2200      	movs	r2, #0
 8000868:	f44f 7180 	mov.w	r1, #256	; 0x100
 800086c:	48ba      	ldr	r0, [pc, #744]	; (8000b58 <display7SEG_vertical+0x390>)
 800086e:	f001 fca6 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 8000872:	2200      	movs	r2, #0
 8000874:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000878:	48b7      	ldr	r0, [pc, #732]	; (8000b58 <display7SEG_vertical+0x390>)
 800087a:	f001 fca0 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_SET);
 800087e:	2201      	movs	r2, #1
 8000880:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000884:	48b4      	ldr	r0, [pc, #720]	; (8000b58 <display7SEG_vertical+0x390>)
 8000886:	f001 fc9a 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_SET);
 800088a:	2201      	movs	r2, #1
 800088c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000890:	48b1      	ldr	r0, [pc, #708]	; (8000b58 <display7SEG_vertical+0x390>)
 8000892:	f001 fc94 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_SET);
 8000896:	2201      	movs	r2, #1
 8000898:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800089c:	48ae      	ldr	r0, [pc, #696]	; (8000b58 <display7SEG_vertical+0x390>)
 800089e:	f001 fc8e 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_SET);
 80008a2:	2201      	movs	r2, #1
 80008a4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80008a8:	48ab      	ldr	r0, [pc, #684]	; (8000b58 <display7SEG_vertical+0x390>)
 80008aa:	f001 fc88 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 80008ae:	e14f      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 2:
		  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_RESET);
 80008b0:	2200      	movs	r2, #0
 80008b2:	2180      	movs	r1, #128	; 0x80
 80008b4:	48a8      	ldr	r0, [pc, #672]	; (8000b58 <display7SEG_vertical+0x390>)
 80008b6:	f001 fc82 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_RESET);
 80008ba:	2200      	movs	r2, #0
 80008bc:	f44f 7180 	mov.w	r1, #256	; 0x100
 80008c0:	48a5      	ldr	r0, [pc, #660]	; (8000b58 <display7SEG_vertical+0x390>)
 80008c2:	f001 fc7c 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_SET);
 80008c6:	2201      	movs	r2, #1
 80008c8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80008cc:	48a2      	ldr	r0, [pc, #648]	; (8000b58 <display7SEG_vertical+0x390>)
 80008ce:	f001 fc76 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_RESET);
 80008d2:	2200      	movs	r2, #0
 80008d4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80008d8:	489f      	ldr	r0, [pc, #636]	; (8000b58 <display7SEG_vertical+0x390>)
 80008da:	f001 fc70 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_RESET);
 80008de:	2200      	movs	r2, #0
 80008e0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80008e4:	489c      	ldr	r0, [pc, #624]	; (8000b58 <display7SEG_vertical+0x390>)
 80008e6:	f001 fc6a 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_SET);
 80008ea:	2201      	movs	r2, #1
 80008ec:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80008f0:	4899      	ldr	r0, [pc, #612]	; (8000b58 <display7SEG_vertical+0x390>)
 80008f2:	f001 fc64 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_RESET);
 80008f6:	2200      	movs	r2, #0
 80008f8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80008fc:	4896      	ldr	r0, [pc, #600]	; (8000b58 <display7SEG_vertical+0x390>)
 80008fe:	f001 fc5e 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000902:	e125      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 3:
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_RESET);
 8000904:	2200      	movs	r2, #0
 8000906:	2180      	movs	r1, #128	; 0x80
 8000908:	4893      	ldr	r0, [pc, #588]	; (8000b58 <display7SEG_vertical+0x390>)
 800090a:	f001 fc58 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_RESET);
 800090e:	2200      	movs	r2, #0
 8000910:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000914:	4890      	ldr	r0, [pc, #576]	; (8000b58 <display7SEG_vertical+0x390>)
 8000916:	f001 fc52 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 800091a:	2200      	movs	r2, #0
 800091c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000920:	488d      	ldr	r0, [pc, #564]	; (8000b58 <display7SEG_vertical+0x390>)
 8000922:	f001 fc4c 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_RESET);
 8000926:	2200      	movs	r2, #0
 8000928:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800092c:	488a      	ldr	r0, [pc, #552]	; (8000b58 <display7SEG_vertical+0x390>)
 800092e:	f001 fc46 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_SET);
 8000932:	2201      	movs	r2, #1
 8000934:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000938:	4887      	ldr	r0, [pc, #540]	; (8000b58 <display7SEG_vertical+0x390>)
 800093a:	f001 fc40 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_SET);
 800093e:	2201      	movs	r2, #1
 8000940:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000944:	4884      	ldr	r0, [pc, #528]	; (8000b58 <display7SEG_vertical+0x390>)
 8000946:	f001 fc3a 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_RESET);
 800094a:	2200      	movs	r2, #0
 800094c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000950:	4881      	ldr	r0, [pc, #516]	; (8000b58 <display7SEG_vertical+0x390>)
 8000952:	f001 fc34 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000956:	e0fb      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 4:
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_SET);
 8000958:	2201      	movs	r2, #1
 800095a:	2180      	movs	r1, #128	; 0x80
 800095c:	487e      	ldr	r0, [pc, #504]	; (8000b58 <display7SEG_vertical+0x390>)
 800095e:	f001 fc2e 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_RESET);
 8000962:	2200      	movs	r2, #0
 8000964:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000968:	487b      	ldr	r0, [pc, #492]	; (8000b58 <display7SEG_vertical+0x390>)
 800096a:	f001 fc28 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 800096e:	2200      	movs	r2, #0
 8000970:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000974:	4878      	ldr	r0, [pc, #480]	; (8000b58 <display7SEG_vertical+0x390>)
 8000976:	f001 fc22 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_SET);
 800097a:	2201      	movs	r2, #1
 800097c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000980:	4875      	ldr	r0, [pc, #468]	; (8000b58 <display7SEG_vertical+0x390>)
 8000982:	f001 fc1c 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_SET);
 8000986:	2201      	movs	r2, #1
 8000988:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800098c:	4872      	ldr	r0, [pc, #456]	; (8000b58 <display7SEG_vertical+0x390>)
 800098e:	f001 fc16 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_RESET);
 8000992:	2200      	movs	r2, #0
 8000994:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000998:	486f      	ldr	r0, [pc, #444]	; (8000b58 <display7SEG_vertical+0x390>)
 800099a:	f001 fc10 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_RESET);
 800099e:	2200      	movs	r2, #0
 80009a0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009a4:	486c      	ldr	r0, [pc, #432]	; (8000b58 <display7SEG_vertical+0x390>)
 80009a6:	f001 fc0a 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 80009aa:	e0d1      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 5:
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_RESET);
 80009ac:	2200      	movs	r2, #0
 80009ae:	2180      	movs	r1, #128	; 0x80
 80009b0:	4869      	ldr	r0, [pc, #420]	; (8000b58 <display7SEG_vertical+0x390>)
 80009b2:	f001 fc04 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_SET);
 80009b6:	2201      	movs	r2, #1
 80009b8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80009bc:	4866      	ldr	r0, [pc, #408]	; (8000b58 <display7SEG_vertical+0x390>)
 80009be:	f001 fbfe 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 80009c2:	2200      	movs	r2, #0
 80009c4:	f44f 7100 	mov.w	r1, #512	; 0x200
 80009c8:	4863      	ldr	r0, [pc, #396]	; (8000b58 <display7SEG_vertical+0x390>)
 80009ca:	f001 fbf8 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_RESET);
 80009ce:	2200      	movs	r2, #0
 80009d0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80009d4:	4860      	ldr	r0, [pc, #384]	; (8000b58 <display7SEG_vertical+0x390>)
 80009d6:	f001 fbf2 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_SET);
 80009da:	2201      	movs	r2, #1
 80009dc:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80009e0:	485d      	ldr	r0, [pc, #372]	; (8000b58 <display7SEG_vertical+0x390>)
 80009e2:	f001 fbec 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_RESET);
 80009e6:	2200      	movs	r2, #0
 80009e8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80009ec:	485a      	ldr	r0, [pc, #360]	; (8000b58 <display7SEG_vertical+0x390>)
 80009ee:	f001 fbe6 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_RESET);
 80009f2:	2200      	movs	r2, #0
 80009f4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009f8:	4857      	ldr	r0, [pc, #348]	; (8000b58 <display7SEG_vertical+0x390>)
 80009fa:	f001 fbe0 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 80009fe:	e0a7      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 6:
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_RESET);
 8000a00:	2200      	movs	r2, #0
 8000a02:	2180      	movs	r1, #128	; 0x80
 8000a04:	4854      	ldr	r0, [pc, #336]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a06:	f001 fbda 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_SET);
 8000a0a:	2201      	movs	r2, #1
 8000a0c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000a10:	4851      	ldr	r0, [pc, #324]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a12:	f001 fbd4 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 8000a16:	2200      	movs	r2, #0
 8000a18:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000a1c:	484e      	ldr	r0, [pc, #312]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a1e:	f001 fbce 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_RESET);
 8000a22:	2200      	movs	r2, #0
 8000a24:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000a28:	484b      	ldr	r0, [pc, #300]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a2a:	f001 fbc8 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_RESET);
 8000a2e:	2200      	movs	r2, #0
 8000a30:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000a34:	4848      	ldr	r0, [pc, #288]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a36:	f001 fbc2 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_RESET);
 8000a3a:	2200      	movs	r2, #0
 8000a3c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000a40:	4845      	ldr	r0, [pc, #276]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a42:	f001 fbbc 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_RESET);
 8000a46:	2200      	movs	r2, #0
 8000a48:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000a4c:	4842      	ldr	r0, [pc, #264]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a4e:	f001 fbb6 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000a52:	e07d      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 7:
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_RESET);
 8000a54:	2200      	movs	r2, #0
 8000a56:	2180      	movs	r1, #128	; 0x80
 8000a58:	483f      	ldr	r0, [pc, #252]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a5a:	f001 fbb0 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_RESET);
 8000a5e:	2200      	movs	r2, #0
 8000a60:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000a64:	483c      	ldr	r0, [pc, #240]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a66:	f001 fbaa 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 8000a6a:	2200      	movs	r2, #0
 8000a6c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000a70:	4839      	ldr	r0, [pc, #228]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a72:	f001 fba4 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_SET);
 8000a76:	2201      	movs	r2, #1
 8000a78:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000a7c:	4836      	ldr	r0, [pc, #216]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a7e:	f001 fb9e 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_SET);
 8000a82:	2201      	movs	r2, #1
 8000a84:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000a88:	4833      	ldr	r0, [pc, #204]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a8a:	f001 fb98 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_SET);
 8000a8e:	2201      	movs	r2, #1
 8000a90:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000a94:	4830      	ldr	r0, [pc, #192]	; (8000b58 <display7SEG_vertical+0x390>)
 8000a96:	f001 fb92 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_SET);
 8000a9a:	2201      	movs	r2, #1
 8000a9c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000aa0:	482d      	ldr	r0, [pc, #180]	; (8000b58 <display7SEG_vertical+0x390>)
 8000aa2:	f001 fb8c 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000aa6:	e053      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 8:
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_RESET);
 8000aa8:	2200      	movs	r2, #0
 8000aaa:	2180      	movs	r1, #128	; 0x80
 8000aac:	482a      	ldr	r0, [pc, #168]	; (8000b58 <display7SEG_vertical+0x390>)
 8000aae:	f001 fb86 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_RESET);
 8000ab2:	2200      	movs	r2, #0
 8000ab4:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000ab8:	4827      	ldr	r0, [pc, #156]	; (8000b58 <display7SEG_vertical+0x390>)
 8000aba:	f001 fb80 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 8000abe:	2200      	movs	r2, #0
 8000ac0:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000ac4:	4824      	ldr	r0, [pc, #144]	; (8000b58 <display7SEG_vertical+0x390>)
 8000ac6:	f001 fb7a 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_RESET);
 8000aca:	2200      	movs	r2, #0
 8000acc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000ad0:	4821      	ldr	r0, [pc, #132]	; (8000b58 <display7SEG_vertical+0x390>)
 8000ad2:	f001 fb74 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_RESET);
 8000ad6:	2200      	movs	r2, #0
 8000ad8:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000adc:	481e      	ldr	r0, [pc, #120]	; (8000b58 <display7SEG_vertical+0x390>)
 8000ade:	f001 fb6e 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_RESET);
 8000ae2:	2200      	movs	r2, #0
 8000ae4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ae8:	481b      	ldr	r0, [pc, #108]	; (8000b58 <display7SEG_vertical+0x390>)
 8000aea:	f001 fb68 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_RESET);
 8000aee:	2200      	movs	r2, #0
 8000af0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000af4:	4818      	ldr	r0, [pc, #96]	; (8000b58 <display7SEG_vertical+0x390>)
 8000af6:	f001 fb62 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000afa:	e029      	b.n	8000b50 <display7SEG_vertical+0x388>
	  case 9:
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_0, GPIO_PIN_RESET);
 8000afc:	2200      	movs	r2, #0
 8000afe:	2180      	movs	r1, #128	; 0x80
 8000b00:	4815      	ldr	r0, [pc, #84]	; (8000b58 <display7SEG_vertical+0x390>)
 8000b02:	f001 fb5c 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_1, GPIO_PIN_RESET);
 8000b06:	2200      	movs	r2, #0
 8000b08:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000b0c:	4812      	ldr	r0, [pc, #72]	; (8000b58 <display7SEG_vertical+0x390>)
 8000b0e:	f001 fb56 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_2, GPIO_PIN_RESET);
 8000b12:	2200      	movs	r2, #0
 8000b14:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000b18:	480f      	ldr	r0, [pc, #60]	; (8000b58 <display7SEG_vertical+0x390>)
 8000b1a:	f001 fb50 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_3, GPIO_PIN_RESET);
 8000b1e:	2200      	movs	r2, #0
 8000b20:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000b24:	480c      	ldr	r0, [pc, #48]	; (8000b58 <display7SEG_vertical+0x390>)
 8000b26:	f001 fb4a 	bl	80021be <HAL_GPIO_WritePin>
	  	  HAL_GPIO_WritePin(GPIOB, SEG2_4, GPIO_PIN_SET);
 8000b2a:	2201      	movs	r2, #1
 8000b2c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000b30:	4809      	ldr	r0, [pc, #36]	; (8000b58 <display7SEG_vertical+0x390>)
 8000b32:	f001 fb44 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_5, GPIO_PIN_RESET);
 8000b36:	2200      	movs	r2, #0
 8000b38:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000b3c:	4806      	ldr	r0, [pc, #24]	; (8000b58 <display7SEG_vertical+0x390>)
 8000b3e:	f001 fb3e 	bl	80021be <HAL_GPIO_WritePin>
		  HAL_GPIO_WritePin(GPIOB, SEG2_6, GPIO_PIN_RESET);
 8000b42:	2200      	movs	r2, #0
 8000b44:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000b48:	4803      	ldr	r0, [pc, #12]	; (8000b58 <display7SEG_vertical+0x390>)
 8000b4a:	f001 fb38 	bl	80021be <HAL_GPIO_WritePin>
		  break;
 8000b4e:	bf00      	nop

	}
}
 8000b50:	bf00      	nop
 8000b52:	3708      	adds	r7, #8
 8000b54:	46bd      	mov	sp, r7
 8000b56:	bd80      	pop	{r7, pc}
 8000b58:	40010c00 	.word	0x40010c00

08000b5c <update7SEG>:

void update7SEG(int indexBuffer){
 8000b5c:	b580      	push	{r7, lr}
 8000b5e:	b082      	sub	sp, #8
 8000b60:	af00      	add	r7, sp, #0
 8000b62:	6078      	str	r0, [r7, #4]
	switch(indexBuffer){
 8000b64:	687b      	ldr	r3, [r7, #4]
 8000b66:	2b00      	cmp	r3, #0
 8000b68:	d003      	beq.n	8000b72 <update7SEG+0x16>
 8000b6a:	687b      	ldr	r3, [r7, #4]
 8000b6c:	2b01      	cmp	r3, #1
 8000b6e:	d019      	beq.n	8000ba4 <update7SEG+0x48>
		HAL_GPIO_WritePin(GPIOA, EN2, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GPIOA, EN3, GPIO_PIN_RESET);
		break;

	default:
		break;
 8000b70:	e031      	b.n	8000bd6 <update7SEG+0x7a>
		HAL_GPIO_WritePin(GPIOA, EN0, GPIO_PIN_RESET);
 8000b72:	2200      	movs	r2, #0
 8000b74:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000b78:	4819      	ldr	r0, [pc, #100]	; (8000be0 <update7SEG+0x84>)
 8000b7a:	f001 fb20 	bl	80021be <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, EN1, GPIO_PIN_SET);
 8000b7e:	2201      	movs	r2, #1
 8000b80:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000b84:	4816      	ldr	r0, [pc, #88]	; (8000be0 <update7SEG+0x84>)
 8000b86:	f001 fb1a 	bl	80021be <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, EN2, GPIO_PIN_RESET);
 8000b8a:	2200      	movs	r2, #0
 8000b8c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000b90:	4813      	ldr	r0, [pc, #76]	; (8000be0 <update7SEG+0x84>)
 8000b92:	f001 fb14 	bl	80021be <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, EN3, GPIO_PIN_SET);
 8000b96:	2201      	movs	r2, #1
 8000b98:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000b9c:	4810      	ldr	r0, [pc, #64]	; (8000be0 <update7SEG+0x84>)
 8000b9e:	f001 fb0e 	bl	80021be <HAL_GPIO_WritePin>
		break;
 8000ba2:	e018      	b.n	8000bd6 <update7SEG+0x7a>
		HAL_GPIO_WritePin(GPIOA, EN0, GPIO_PIN_SET);
 8000ba4:	2201      	movs	r2, #1
 8000ba6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000baa:	480d      	ldr	r0, [pc, #52]	; (8000be0 <update7SEG+0x84>)
 8000bac:	f001 fb07 	bl	80021be <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, EN1, GPIO_PIN_RESET);
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000bb6:	480a      	ldr	r0, [pc, #40]	; (8000be0 <update7SEG+0x84>)
 8000bb8:	f001 fb01 	bl	80021be <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, EN2, GPIO_PIN_SET);
 8000bbc:	2201      	movs	r2, #1
 8000bbe:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000bc2:	4807      	ldr	r0, [pc, #28]	; (8000be0 <update7SEG+0x84>)
 8000bc4:	f001 fafb 	bl	80021be <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOA, EN3, GPIO_PIN_RESET);
 8000bc8:	2200      	movs	r2, #0
 8000bca:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000bce:	4804      	ldr	r0, [pc, #16]	; (8000be0 <update7SEG+0x84>)
 8000bd0:	f001 faf5 	bl	80021be <HAL_GPIO_WritePin>
		break;
 8000bd4:	bf00      	nop
	}
}
 8000bd6:	bf00      	nop
 8000bd8:	3708      	adds	r7, #8
 8000bda:	46bd      	mov	sp, r7
 8000bdc:	bd80      	pop	{r7, pc}
 8000bde:	bf00      	nop
 8000be0:	40010800 	.word	0x40010800

08000be4 <updateBuffer>:
/**
 * @brief Cập nhật buffer hiển thị LED 7 đoạn.
 * Hàm  chia thời gian thành các phần hàng chục và đơn vị rồi lưu vào mảng `led_buffer`.
 */
void updateBuffer()
{
 8000be4:	b480      	push	{r7}
 8000be6:	af00      	add	r7, sp, #0
    led_buffer[0] = TIME_RED / 10;
 8000be8:	4b27      	ldr	r3, [pc, #156]	; (8000c88 <updateBuffer+0xa4>)
 8000bea:	681b      	ldr	r3, [r3, #0]
 8000bec:	4a27      	ldr	r2, [pc, #156]	; (8000c8c <updateBuffer+0xa8>)
 8000bee:	fb82 1203 	smull	r1, r2, r2, r3
 8000bf2:	1092      	asrs	r2, r2, #2
 8000bf4:	17db      	asrs	r3, r3, #31
 8000bf6:	1ad3      	subs	r3, r2, r3
 8000bf8:	4a25      	ldr	r2, [pc, #148]	; (8000c90 <updateBuffer+0xac>)
 8000bfa:	6013      	str	r3, [r2, #0]
    led_buffer[1] = TIME_RED % 10;
 8000bfc:	4b22      	ldr	r3, [pc, #136]	; (8000c88 <updateBuffer+0xa4>)
 8000bfe:	6819      	ldr	r1, [r3, #0]
 8000c00:	4b22      	ldr	r3, [pc, #136]	; (8000c8c <updateBuffer+0xa8>)
 8000c02:	fb83 2301 	smull	r2, r3, r3, r1
 8000c06:	109a      	asrs	r2, r3, #2
 8000c08:	17cb      	asrs	r3, r1, #31
 8000c0a:	1ad2      	subs	r2, r2, r3
 8000c0c:	4613      	mov	r3, r2
 8000c0e:	009b      	lsls	r3, r3, #2
 8000c10:	4413      	add	r3, r2
 8000c12:	005b      	lsls	r3, r3, #1
 8000c14:	1aca      	subs	r2, r1, r3
 8000c16:	4b1e      	ldr	r3, [pc, #120]	; (8000c90 <updateBuffer+0xac>)
 8000c18:	605a      	str	r2, [r3, #4]
    led_buffer[2] = TIME_GREEN / 10;
 8000c1a:	4b1e      	ldr	r3, [pc, #120]	; (8000c94 <updateBuffer+0xb0>)
 8000c1c:	681b      	ldr	r3, [r3, #0]
 8000c1e:	4a1b      	ldr	r2, [pc, #108]	; (8000c8c <updateBuffer+0xa8>)
 8000c20:	fb82 1203 	smull	r1, r2, r2, r3
 8000c24:	1092      	asrs	r2, r2, #2
 8000c26:	17db      	asrs	r3, r3, #31
 8000c28:	1ad3      	subs	r3, r2, r3
 8000c2a:	4a19      	ldr	r2, [pc, #100]	; (8000c90 <updateBuffer+0xac>)
 8000c2c:	6093      	str	r3, [r2, #8]
    led_buffer[3] = TIME_GREEN % 10;
 8000c2e:	4b19      	ldr	r3, [pc, #100]	; (8000c94 <updateBuffer+0xb0>)
 8000c30:	6819      	ldr	r1, [r3, #0]
 8000c32:	4b16      	ldr	r3, [pc, #88]	; (8000c8c <updateBuffer+0xa8>)
 8000c34:	fb83 2301 	smull	r2, r3, r3, r1
 8000c38:	109a      	asrs	r2, r3, #2
 8000c3a:	17cb      	asrs	r3, r1, #31
 8000c3c:	1ad2      	subs	r2, r2, r3
 8000c3e:	4613      	mov	r3, r2
 8000c40:	009b      	lsls	r3, r3, #2
 8000c42:	4413      	add	r3, r2
 8000c44:	005b      	lsls	r3, r3, #1
 8000c46:	1aca      	subs	r2, r1, r3
 8000c48:	4b11      	ldr	r3, [pc, #68]	; (8000c90 <updateBuffer+0xac>)
 8000c4a:	60da      	str	r2, [r3, #12]
    led_buffer[4] = TIME_YELLOW / 10;
 8000c4c:	4b12      	ldr	r3, [pc, #72]	; (8000c98 <updateBuffer+0xb4>)
 8000c4e:	681b      	ldr	r3, [r3, #0]
 8000c50:	4a0e      	ldr	r2, [pc, #56]	; (8000c8c <updateBuffer+0xa8>)
 8000c52:	fb82 1203 	smull	r1, r2, r2, r3
 8000c56:	1092      	asrs	r2, r2, #2
 8000c58:	17db      	asrs	r3, r3, #31
 8000c5a:	1ad3      	subs	r3, r2, r3
 8000c5c:	4a0c      	ldr	r2, [pc, #48]	; (8000c90 <updateBuffer+0xac>)
 8000c5e:	6113      	str	r3, [r2, #16]
    led_buffer[5] = TIME_YELLOW % 10;
 8000c60:	4b0d      	ldr	r3, [pc, #52]	; (8000c98 <updateBuffer+0xb4>)
 8000c62:	6819      	ldr	r1, [r3, #0]
 8000c64:	4b09      	ldr	r3, [pc, #36]	; (8000c8c <updateBuffer+0xa8>)
 8000c66:	fb83 2301 	smull	r2, r3, r3, r1
 8000c6a:	109a      	asrs	r2, r3, #2
 8000c6c:	17cb      	asrs	r3, r1, #31
 8000c6e:	1ad2      	subs	r2, r2, r3
 8000c70:	4613      	mov	r3, r2
 8000c72:	009b      	lsls	r3, r3, #2
 8000c74:	4413      	add	r3, r2
 8000c76:	005b      	lsls	r3, r3, #1
 8000c78:	1aca      	subs	r2, r1, r3
 8000c7a:	4b05      	ldr	r3, [pc, #20]	; (8000c90 <updateBuffer+0xac>)
 8000c7c:	615a      	str	r2, [r3, #20]
}
 8000c7e:	bf00      	nop
 8000c80:	46bd      	mov	sp, r7
 8000c82:	bc80      	pop	{r7}
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop
 8000c88:	20000050 	.word	0x20000050
 8000c8c:	66666667 	.word	0x66666667
 8000c90:	200000a8 	.word	0x200000a8
 8000c94:	20000058 	.word	0x20000058
 8000c98:	20000054 	.word	0x20000054

08000c9c <countdown7SEG>:
/**
 * @brief Thực hiện đếm ngược cho các giá trị trong `led_buffer`.
 * Hàm  xử lý đếm ngược cho từng cặp giá trị (hàng chục và đơn vị)
 * và đặt lại thời gian khi giá trị đếm ngược về 0.
 */
void countdown7SEG() {
 8000c9c:	b480      	push	{r7}
 8000c9e:	b083      	sub	sp, #12
 8000ca0:	af00      	add	r7, sp, #0
    int i;
    for (i = 0; i < 6; i += 2) {
 8000ca2:	2300      	movs	r3, #0
 8000ca4:	607b      	str	r3, [r7, #4]
 8000ca6:	e081      	b.n	8000dac <countdown7SEG+0x110>
        if (led_buffer[i + 1] < 0 && led_buffer[i] > 0) {
 8000ca8:	687b      	ldr	r3, [r7, #4]
 8000caa:	3301      	adds	r3, #1
 8000cac:	4a44      	ldr	r2, [pc, #272]	; (8000dc0 <countdown7SEG+0x124>)
 8000cae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	da14      	bge.n	8000ce0 <countdown7SEG+0x44>
 8000cb6:	4a42      	ldr	r2, [pc, #264]	; (8000dc0 <countdown7SEG+0x124>)
 8000cb8:	687b      	ldr	r3, [r7, #4]
 8000cba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000cbe:	2b00      	cmp	r3, #0
 8000cc0:	dd0e      	ble.n	8000ce0 <countdown7SEG+0x44>
            led_buffer[i + 1] = 9;
 8000cc2:	687b      	ldr	r3, [r7, #4]
 8000cc4:	3301      	adds	r3, #1
 8000cc6:	4a3e      	ldr	r2, [pc, #248]	; (8000dc0 <countdown7SEG+0x124>)
 8000cc8:	2109      	movs	r1, #9
 8000cca:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            led_buffer[i]--;
 8000cce:	4a3c      	ldr	r2, [pc, #240]	; (8000dc0 <countdown7SEG+0x124>)
 8000cd0:	687b      	ldr	r3, [r7, #4]
 8000cd2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000cd6:	1e5a      	subs	r2, r3, #1
 8000cd8:	4939      	ldr	r1, [pc, #228]	; (8000dc0 <countdown7SEG+0x124>)
 8000cda:	687b      	ldr	r3, [r7, #4]
 8000cdc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        }
        if (led_buffer[i] == 0 && led_buffer[i + 1] == 0) {
 8000ce0:	4a37      	ldr	r2, [pc, #220]	; (8000dc0 <countdown7SEG+0x124>)
 8000ce2:	687b      	ldr	r3, [r7, #4]
 8000ce4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000ce8:	2b00      	cmp	r3, #0
 8000cea:	d15c      	bne.n	8000da6 <countdown7SEG+0x10a>
 8000cec:	687b      	ldr	r3, [r7, #4]
 8000cee:	3301      	adds	r3, #1
 8000cf0:	4a33      	ldr	r2, [pc, #204]	; (8000dc0 <countdown7SEG+0x124>)
 8000cf2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000cf6:	2b00      	cmp	r3, #0
 8000cf8:	d155      	bne.n	8000da6 <countdown7SEG+0x10a>
            if (i == 0) { // Đèn đỏ
 8000cfa:	687b      	ldr	r3, [r7, #4]
 8000cfc:	2b00      	cmp	r3, #0
 8000cfe:	d119      	bne.n	8000d34 <countdown7SEG+0x98>
                led_buffer[0] = TIME_RED / 10;
 8000d00:	4b30      	ldr	r3, [pc, #192]	; (8000dc4 <countdown7SEG+0x128>)
 8000d02:	681b      	ldr	r3, [r3, #0]
 8000d04:	4a30      	ldr	r2, [pc, #192]	; (8000dc8 <countdown7SEG+0x12c>)
 8000d06:	fb82 1203 	smull	r1, r2, r2, r3
 8000d0a:	1092      	asrs	r2, r2, #2
 8000d0c:	17db      	asrs	r3, r3, #31
 8000d0e:	1ad3      	subs	r3, r2, r3
 8000d10:	4a2b      	ldr	r2, [pc, #172]	; (8000dc0 <countdown7SEG+0x124>)
 8000d12:	6013      	str	r3, [r2, #0]
                led_buffer[1] = TIME_RED % 10;
 8000d14:	4b2b      	ldr	r3, [pc, #172]	; (8000dc4 <countdown7SEG+0x128>)
 8000d16:	6819      	ldr	r1, [r3, #0]
 8000d18:	4b2b      	ldr	r3, [pc, #172]	; (8000dc8 <countdown7SEG+0x12c>)
 8000d1a:	fb83 2301 	smull	r2, r3, r3, r1
 8000d1e:	109a      	asrs	r2, r3, #2
 8000d20:	17cb      	asrs	r3, r1, #31
 8000d22:	1ad2      	subs	r2, r2, r3
 8000d24:	4613      	mov	r3, r2
 8000d26:	009b      	lsls	r3, r3, #2
 8000d28:	4413      	add	r3, r2
 8000d2a:	005b      	lsls	r3, r3, #1
 8000d2c:	1aca      	subs	r2, r1, r3
 8000d2e:	4b24      	ldr	r3, [pc, #144]	; (8000dc0 <countdown7SEG+0x124>)
 8000d30:	605a      	str	r2, [r3, #4]
 8000d32:	e038      	b.n	8000da6 <countdown7SEG+0x10a>
            } else if (i == 2) { // Đèn xanh
 8000d34:	687b      	ldr	r3, [r7, #4]
 8000d36:	2b02      	cmp	r3, #2
 8000d38:	d119      	bne.n	8000d6e <countdown7SEG+0xd2>
                led_buffer[2] = TIME_GREEN / 10;
 8000d3a:	4b24      	ldr	r3, [pc, #144]	; (8000dcc <countdown7SEG+0x130>)
 8000d3c:	681b      	ldr	r3, [r3, #0]
 8000d3e:	4a22      	ldr	r2, [pc, #136]	; (8000dc8 <countdown7SEG+0x12c>)
 8000d40:	fb82 1203 	smull	r1, r2, r2, r3
 8000d44:	1092      	asrs	r2, r2, #2
 8000d46:	17db      	asrs	r3, r3, #31
 8000d48:	1ad3      	subs	r3, r2, r3
 8000d4a:	4a1d      	ldr	r2, [pc, #116]	; (8000dc0 <countdown7SEG+0x124>)
 8000d4c:	6093      	str	r3, [r2, #8]
                led_buffer[3] = TIME_GREEN % 10;
 8000d4e:	4b1f      	ldr	r3, [pc, #124]	; (8000dcc <countdown7SEG+0x130>)
 8000d50:	6819      	ldr	r1, [r3, #0]
 8000d52:	4b1d      	ldr	r3, [pc, #116]	; (8000dc8 <countdown7SEG+0x12c>)
 8000d54:	fb83 2301 	smull	r2, r3, r3, r1
 8000d58:	109a      	asrs	r2, r3, #2
 8000d5a:	17cb      	asrs	r3, r1, #31
 8000d5c:	1ad2      	subs	r2, r2, r3
 8000d5e:	4613      	mov	r3, r2
 8000d60:	009b      	lsls	r3, r3, #2
 8000d62:	4413      	add	r3, r2
 8000d64:	005b      	lsls	r3, r3, #1
 8000d66:	1aca      	subs	r2, r1, r3
 8000d68:	4b15      	ldr	r3, [pc, #84]	; (8000dc0 <countdown7SEG+0x124>)
 8000d6a:	60da      	str	r2, [r3, #12]
 8000d6c:	e01b      	b.n	8000da6 <countdown7SEG+0x10a>
            } else if (i == 4) { // Đèn vàng
 8000d6e:	687b      	ldr	r3, [r7, #4]
 8000d70:	2b04      	cmp	r3, #4
 8000d72:	d118      	bne.n	8000da6 <countdown7SEG+0x10a>
                led_buffer[4] = TIME_YELLOW / 10;
 8000d74:	4b16      	ldr	r3, [pc, #88]	; (8000dd0 <countdown7SEG+0x134>)
 8000d76:	681b      	ldr	r3, [r3, #0]
 8000d78:	4a13      	ldr	r2, [pc, #76]	; (8000dc8 <countdown7SEG+0x12c>)
 8000d7a:	fb82 1203 	smull	r1, r2, r2, r3
 8000d7e:	1092      	asrs	r2, r2, #2
 8000d80:	17db      	asrs	r3, r3, #31
 8000d82:	1ad3      	subs	r3, r2, r3
 8000d84:	4a0e      	ldr	r2, [pc, #56]	; (8000dc0 <countdown7SEG+0x124>)
 8000d86:	6113      	str	r3, [r2, #16]
                led_buffer[5] = TIME_YELLOW % 10;
 8000d88:	4b11      	ldr	r3, [pc, #68]	; (8000dd0 <countdown7SEG+0x134>)
 8000d8a:	6819      	ldr	r1, [r3, #0]
 8000d8c:	4b0e      	ldr	r3, [pc, #56]	; (8000dc8 <countdown7SEG+0x12c>)
 8000d8e:	fb83 2301 	smull	r2, r3, r3, r1
 8000d92:	109a      	asrs	r2, r3, #2
 8000d94:	17cb      	asrs	r3, r1, #31
 8000d96:	1ad2      	subs	r2, r2, r3
 8000d98:	4613      	mov	r3, r2
 8000d9a:	009b      	lsls	r3, r3, #2
 8000d9c:	4413      	add	r3, r2
 8000d9e:	005b      	lsls	r3, r3, #1
 8000da0:	1aca      	subs	r2, r1, r3
 8000da2:	4b07      	ldr	r3, [pc, #28]	; (8000dc0 <countdown7SEG+0x124>)
 8000da4:	615a      	str	r2, [r3, #20]
    for (i = 0; i < 6; i += 2) {
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	3302      	adds	r3, #2
 8000daa:	607b      	str	r3, [r7, #4]
 8000dac:	687b      	ldr	r3, [r7, #4]
 8000dae:	2b05      	cmp	r3, #5
 8000db0:	f77f af7a 	ble.w	8000ca8 <countdown7SEG+0xc>
            }
        }
    }
}
 8000db4:	bf00      	nop
 8000db6:	bf00      	nop
 8000db8:	370c      	adds	r7, #12
 8000dba:	46bd      	mov	sp, r7
 8000dbc:	bc80      	pop	{r7}
 8000dbe:	4770      	bx	lr
 8000dc0:	200000a8 	.word	0x200000a8
 8000dc4:	20000050 	.word	0x20000050
 8000dc8:	66666667 	.word	0x66666667
 8000dcc:	20000058 	.word	0x20000058
 8000dd0:	20000054 	.word	0x20000054

08000dd4 <led7SEG_YR>:
/**
 * @brief Điều khiển hiển thị và logic đèn đỏ, vàng (hệ thống 7 đoạn).
 * Hàm  thực hiện việc đếm ngược và cập nhật hiển thị cho đèn đỏ và vàng
 * trong hệ thống đèn 7 đoạn dựa trên trạng thái hệ thống.
 */
void led7SEG_YR() {
 8000dd4:	b580      	push	{r7, lr}
 8000dd6:	af00      	add	r7, sp, #0
    switch (status_system) {
 8000dd8:	4b28      	ldr	r3, [pc, #160]	; (8000e7c <led7SEG_YR+0xa8>)
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	2b02      	cmp	r3, #2
 8000dde:	d029      	beq.n	8000e34 <led7SEG_YR+0x60>
 8000de0:	2b02      	cmp	r3, #2
 8000de2:	dc49      	bgt.n	8000e78 <led7SEG_YR+0xa4>
 8000de4:	2b00      	cmp	r3, #0
 8000de6:	d002      	beq.n	8000dee <led7SEG_YR+0x1a>
 8000de8:	2b01      	cmp	r3, #1
 8000dea:	d00a      	beq.n	8000e02 <led7SEG_YR+0x2e>
                led_buffer[5]--;
                status_system = 0;
            }
            break;
    }
}
 8000dec:	e044      	b.n	8000e78 <led7SEG_YR+0xa4>
            countdown7SEG();
 8000dee:	f7ff ff55 	bl	8000c9c <countdown7SEG>
            setTimer1(500);
 8000df2:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000df6:	f000 fcc3 	bl	8001780 <setTimer1>
            status_system = 1;
 8000dfa:	4b20      	ldr	r3, [pc, #128]	; (8000e7c <led7SEG_YR+0xa8>)
 8000dfc:	2201      	movs	r2, #1
 8000dfe:	601a      	str	r2, [r3, #0]
            break;
 8000e00:	e03a      	b.n	8000e78 <led7SEG_YR+0xa4>
            update7SEG(0);
 8000e02:	2000      	movs	r0, #0
 8000e04:	f7ff feaa 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(led_buffer[4]); // Hàng chục đèn vàng
 8000e08:	4b1d      	ldr	r3, [pc, #116]	; (8000e80 <led7SEG_YR+0xac>)
 8000e0a:	691b      	ldr	r3, [r3, #16]
 8000e0c:	4618      	mov	r0, r3
 8000e0e:	f7ff fb4d 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(led_buffer[0]); // Hàng chục đèn đỏ
 8000e12:	4b1b      	ldr	r3, [pc, #108]	; (8000e80 <led7SEG_YR+0xac>)
 8000e14:	681b      	ldr	r3, [r3, #0]
 8000e16:	4618      	mov	r0, r3
 8000e18:	f7ff fcd6 	bl	80007c8 <display7SEG_vertical>
            if (timer_flag1 == 1) {
 8000e1c:	4b19      	ldr	r3, [pc, #100]	; (8000e84 <led7SEG_YR+0xb0>)
 8000e1e:	681b      	ldr	r3, [r3, #0]
 8000e20:	2b01      	cmp	r3, #1
 8000e22:	d126      	bne.n	8000e72 <led7SEG_YR+0x9e>
                status_system = 2;
 8000e24:	4b15      	ldr	r3, [pc, #84]	; (8000e7c <led7SEG_YR+0xa8>)
 8000e26:	2202      	movs	r2, #2
 8000e28:	601a      	str	r2, [r3, #0]
                setTimer1(500);
 8000e2a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e2e:	f000 fca7 	bl	8001780 <setTimer1>
            break;
 8000e32:	e01e      	b.n	8000e72 <led7SEG_YR+0x9e>
            update7SEG(1);
 8000e34:	2001      	movs	r0, #1
 8000e36:	f7ff fe91 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(led_buffer[5]); // Hàng đơn vị đèn vàng
 8000e3a:	4b11      	ldr	r3, [pc, #68]	; (8000e80 <led7SEG_YR+0xac>)
 8000e3c:	695b      	ldr	r3, [r3, #20]
 8000e3e:	4618      	mov	r0, r3
 8000e40:	f7ff fb34 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(led_buffer[1]); // Hàng đơn vị đèn đỏ
 8000e44:	4b0e      	ldr	r3, [pc, #56]	; (8000e80 <led7SEG_YR+0xac>)
 8000e46:	685b      	ldr	r3, [r3, #4]
 8000e48:	4618      	mov	r0, r3
 8000e4a:	f7ff fcbd 	bl	80007c8 <display7SEG_vertical>
            if (timer_flag1 == 1) {
 8000e4e:	4b0d      	ldr	r3, [pc, #52]	; (8000e84 <led7SEG_YR+0xb0>)
 8000e50:	681b      	ldr	r3, [r3, #0]
 8000e52:	2b01      	cmp	r3, #1
 8000e54:	d10f      	bne.n	8000e76 <led7SEG_YR+0xa2>
                led_buffer[1]--;
 8000e56:	4b0a      	ldr	r3, [pc, #40]	; (8000e80 <led7SEG_YR+0xac>)
 8000e58:	685b      	ldr	r3, [r3, #4]
 8000e5a:	3b01      	subs	r3, #1
 8000e5c:	4a08      	ldr	r2, [pc, #32]	; (8000e80 <led7SEG_YR+0xac>)
 8000e5e:	6053      	str	r3, [r2, #4]
                led_buffer[5]--;
 8000e60:	4b07      	ldr	r3, [pc, #28]	; (8000e80 <led7SEG_YR+0xac>)
 8000e62:	695b      	ldr	r3, [r3, #20]
 8000e64:	3b01      	subs	r3, #1
 8000e66:	4a06      	ldr	r2, [pc, #24]	; (8000e80 <led7SEG_YR+0xac>)
 8000e68:	6153      	str	r3, [r2, #20]
                status_system = 0;
 8000e6a:	4b04      	ldr	r3, [pc, #16]	; (8000e7c <led7SEG_YR+0xa8>)
 8000e6c:	2200      	movs	r2, #0
 8000e6e:	601a      	str	r2, [r3, #0]
            break;
 8000e70:	e001      	b.n	8000e76 <led7SEG_YR+0xa2>
            break;
 8000e72:	bf00      	nop
 8000e74:	e000      	b.n	8000e78 <led7SEG_YR+0xa4>
            break;
 8000e76:	bf00      	nop
}
 8000e78:	bf00      	nop
 8000e7a:	bd80      	pop	{r7, pc}
 8000e7c:	20000094 	.word	0x20000094
 8000e80:	200000a8 	.word	0x200000a8
 8000e84:	200000c0 	.word	0x200000c0

08000e88 <led7SEG_GR>:
/**
 * @brief Điều khiển hiển thị và logic đèn đỏ, xanh (hệ thống 7 đoạn).
 * Hàm  thực hiện việc đếm ngược và cập nhật hiển thị cho đèn đỏ và xanh
 * trong hệ thống đèn 7 đoạn dựa trên trạng thái hệ thống.
 */
void led7SEG_GR() {
 8000e88:	b580      	push	{r7, lr}
 8000e8a:	af00      	add	r7, sp, #0
    switch (status_system) {
 8000e8c:	4b28      	ldr	r3, [pc, #160]	; (8000f30 <led7SEG_GR+0xa8>)
 8000e8e:	681b      	ldr	r3, [r3, #0]
 8000e90:	2b02      	cmp	r3, #2
 8000e92:	d029      	beq.n	8000ee8 <led7SEG_GR+0x60>
 8000e94:	2b02      	cmp	r3, #2
 8000e96:	dc49      	bgt.n	8000f2c <led7SEG_GR+0xa4>
 8000e98:	2b00      	cmp	r3, #0
 8000e9a:	d002      	beq.n	8000ea2 <led7SEG_GR+0x1a>
 8000e9c:	2b01      	cmp	r3, #1
 8000e9e:	d00a      	beq.n	8000eb6 <led7SEG_GR+0x2e>
                led_buffer[3]--; // Giảm đèn xanh
                status_system = 0;
            }
            break;
    }
}
 8000ea0:	e044      	b.n	8000f2c <led7SEG_GR+0xa4>
            countdown7SEG();
 8000ea2:	f7ff fefb 	bl	8000c9c <countdown7SEG>
            setTimer1(500);
 8000ea6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000eaa:	f000 fc69 	bl	8001780 <setTimer1>
            status_system = 1;
 8000eae:	4b20      	ldr	r3, [pc, #128]	; (8000f30 <led7SEG_GR+0xa8>)
 8000eb0:	2201      	movs	r2, #1
 8000eb2:	601a      	str	r2, [r3, #0]
            break;
 8000eb4:	e03a      	b.n	8000f2c <led7SEG_GR+0xa4>
            update7SEG(0);
 8000eb6:	2000      	movs	r0, #0
 8000eb8:	f7ff fe50 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(led_buffer[2]); // Hàng chục đèn xanh
 8000ebc:	4b1d      	ldr	r3, [pc, #116]	; (8000f34 <led7SEG_GR+0xac>)
 8000ebe:	689b      	ldr	r3, [r3, #8]
 8000ec0:	4618      	mov	r0, r3
 8000ec2:	f7ff faf3 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(led_buffer[0]); // Hàng chục đèn đỏ
 8000ec6:	4b1b      	ldr	r3, [pc, #108]	; (8000f34 <led7SEG_GR+0xac>)
 8000ec8:	681b      	ldr	r3, [r3, #0]
 8000eca:	4618      	mov	r0, r3
 8000ecc:	f7ff fc7c 	bl	80007c8 <display7SEG_vertical>
            if (timer_flag1 == 1) {
 8000ed0:	4b19      	ldr	r3, [pc, #100]	; (8000f38 <led7SEG_GR+0xb0>)
 8000ed2:	681b      	ldr	r3, [r3, #0]
 8000ed4:	2b01      	cmp	r3, #1
 8000ed6:	d126      	bne.n	8000f26 <led7SEG_GR+0x9e>
                status_system = 2;
 8000ed8:	4b15      	ldr	r3, [pc, #84]	; (8000f30 <led7SEG_GR+0xa8>)
 8000eda:	2202      	movs	r2, #2
 8000edc:	601a      	str	r2, [r3, #0]
                setTimer1(500);
 8000ede:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000ee2:	f000 fc4d 	bl	8001780 <setTimer1>
            break;
 8000ee6:	e01e      	b.n	8000f26 <led7SEG_GR+0x9e>
            update7SEG(1);
 8000ee8:	2001      	movs	r0, #1
 8000eea:	f7ff fe37 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(led_buffer[3]); // Hàng đơn vị đèn xanh
 8000eee:	4b11      	ldr	r3, [pc, #68]	; (8000f34 <led7SEG_GR+0xac>)
 8000ef0:	68db      	ldr	r3, [r3, #12]
 8000ef2:	4618      	mov	r0, r3
 8000ef4:	f7ff fada 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(led_buffer[1]); // Hàng đơn vị đèn đỏ
 8000ef8:	4b0e      	ldr	r3, [pc, #56]	; (8000f34 <led7SEG_GR+0xac>)
 8000efa:	685b      	ldr	r3, [r3, #4]
 8000efc:	4618      	mov	r0, r3
 8000efe:	f7ff fc63 	bl	80007c8 <display7SEG_vertical>
            if (timer_flag1 == 1) {
 8000f02:	4b0d      	ldr	r3, [pc, #52]	; (8000f38 <led7SEG_GR+0xb0>)
 8000f04:	681b      	ldr	r3, [r3, #0]
 8000f06:	2b01      	cmp	r3, #1
 8000f08:	d10f      	bne.n	8000f2a <led7SEG_GR+0xa2>
                led_buffer[1]--; // Giảm đèn đỏ
 8000f0a:	4b0a      	ldr	r3, [pc, #40]	; (8000f34 <led7SEG_GR+0xac>)
 8000f0c:	685b      	ldr	r3, [r3, #4]
 8000f0e:	3b01      	subs	r3, #1
 8000f10:	4a08      	ldr	r2, [pc, #32]	; (8000f34 <led7SEG_GR+0xac>)
 8000f12:	6053      	str	r3, [r2, #4]
                led_buffer[3]--; // Giảm đèn xanh
 8000f14:	4b07      	ldr	r3, [pc, #28]	; (8000f34 <led7SEG_GR+0xac>)
 8000f16:	68db      	ldr	r3, [r3, #12]
 8000f18:	3b01      	subs	r3, #1
 8000f1a:	4a06      	ldr	r2, [pc, #24]	; (8000f34 <led7SEG_GR+0xac>)
 8000f1c:	60d3      	str	r3, [r2, #12]
                status_system = 0;
 8000f1e:	4b04      	ldr	r3, [pc, #16]	; (8000f30 <led7SEG_GR+0xa8>)
 8000f20:	2200      	movs	r2, #0
 8000f22:	601a      	str	r2, [r3, #0]
            break;
 8000f24:	e001      	b.n	8000f2a <led7SEG_GR+0xa2>
            break;
 8000f26:	bf00      	nop
 8000f28:	e000      	b.n	8000f2c <led7SEG_GR+0xa4>
            break;
 8000f2a:	bf00      	nop
}
 8000f2c:	bf00      	nop
 8000f2e:	bd80      	pop	{r7, pc}
 8000f30:	20000094 	.word	0x20000094
 8000f34:	200000a8 	.word	0x200000a8
 8000f38:	200000c0 	.word	0x200000c0

08000f3c <led7SEG_RY>:
/**
 * @brief Điều khiển hiển thị và logic đèn đỏ, vàng (hệ thống 7 đoạn).
 * Hàm  thực hiện việc đếm ngược và cập nhật hiển thị cho đèn đỏ và vàng
 * trong hệ thống đèn 7 đoạn dựa trên trạng thái hệ thống.
 */
void led7SEG_RY() {
 8000f3c:	b580      	push	{r7, lr}
 8000f3e:	af00      	add	r7, sp, #0
    switch (status_system) {
 8000f40:	4b28      	ldr	r3, [pc, #160]	; (8000fe4 <led7SEG_RY+0xa8>)
 8000f42:	681b      	ldr	r3, [r3, #0]
 8000f44:	2b02      	cmp	r3, #2
 8000f46:	d029      	beq.n	8000f9c <led7SEG_RY+0x60>
 8000f48:	2b02      	cmp	r3, #2
 8000f4a:	dc49      	bgt.n	8000fe0 <led7SEG_RY+0xa4>
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d002      	beq.n	8000f56 <led7SEG_RY+0x1a>
 8000f50:	2b01      	cmp	r3, #1
 8000f52:	d00a      	beq.n	8000f6a <led7SEG_RY+0x2e>
                led_buffer[5]--; // Giảm đèn vàng
                status_system = 0;
            }
            break;
    }
}
 8000f54:	e044      	b.n	8000fe0 <led7SEG_RY+0xa4>
            countdown7SEG();
 8000f56:	f7ff fea1 	bl	8000c9c <countdown7SEG>
            setTimer1(500);
 8000f5a:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000f5e:	f000 fc0f 	bl	8001780 <setTimer1>
            status_system = 1;
 8000f62:	4b20      	ldr	r3, [pc, #128]	; (8000fe4 <led7SEG_RY+0xa8>)
 8000f64:	2201      	movs	r2, #1
 8000f66:	601a      	str	r2, [r3, #0]
            break;
 8000f68:	e03a      	b.n	8000fe0 <led7SEG_RY+0xa4>
            update7SEG(0);
 8000f6a:	2000      	movs	r0, #0
 8000f6c:	f7ff fdf6 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(led_buffer[0]); // Hàng chục đèn đỏ
 8000f70:	4b1d      	ldr	r3, [pc, #116]	; (8000fe8 <led7SEG_RY+0xac>)
 8000f72:	681b      	ldr	r3, [r3, #0]
 8000f74:	4618      	mov	r0, r3
 8000f76:	f7ff fa99 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(led_buffer[4]); // Hàng chục đèn vàng
 8000f7a:	4b1b      	ldr	r3, [pc, #108]	; (8000fe8 <led7SEG_RY+0xac>)
 8000f7c:	691b      	ldr	r3, [r3, #16]
 8000f7e:	4618      	mov	r0, r3
 8000f80:	f7ff fc22 	bl	80007c8 <display7SEG_vertical>
            if (timer_flag1 == 1) {
 8000f84:	4b19      	ldr	r3, [pc, #100]	; (8000fec <led7SEG_RY+0xb0>)
 8000f86:	681b      	ldr	r3, [r3, #0]
 8000f88:	2b01      	cmp	r3, #1
 8000f8a:	d126      	bne.n	8000fda <led7SEG_RY+0x9e>
                status_system = 2;
 8000f8c:	4b15      	ldr	r3, [pc, #84]	; (8000fe4 <led7SEG_RY+0xa8>)
 8000f8e:	2202      	movs	r2, #2
 8000f90:	601a      	str	r2, [r3, #0]
                setTimer1(500);
 8000f92:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000f96:	f000 fbf3 	bl	8001780 <setTimer1>
            break;
 8000f9a:	e01e      	b.n	8000fda <led7SEG_RY+0x9e>
            update7SEG(1);
 8000f9c:	2001      	movs	r0, #1
 8000f9e:	f7ff fddd 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(led_buffer[1]); // Hàng đơn vị đèn đỏ
 8000fa2:	4b11      	ldr	r3, [pc, #68]	; (8000fe8 <led7SEG_RY+0xac>)
 8000fa4:	685b      	ldr	r3, [r3, #4]
 8000fa6:	4618      	mov	r0, r3
 8000fa8:	f7ff fa80 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(led_buffer[5]); // Hàng đơn vị đèn vàng
 8000fac:	4b0e      	ldr	r3, [pc, #56]	; (8000fe8 <led7SEG_RY+0xac>)
 8000fae:	695b      	ldr	r3, [r3, #20]
 8000fb0:	4618      	mov	r0, r3
 8000fb2:	f7ff fc09 	bl	80007c8 <display7SEG_vertical>
            if (timer_flag1 == 1) {
 8000fb6:	4b0d      	ldr	r3, [pc, #52]	; (8000fec <led7SEG_RY+0xb0>)
 8000fb8:	681b      	ldr	r3, [r3, #0]
 8000fba:	2b01      	cmp	r3, #1
 8000fbc:	d10f      	bne.n	8000fde <led7SEG_RY+0xa2>
                led_buffer[1]--; // Giảm đèn đỏ
 8000fbe:	4b0a      	ldr	r3, [pc, #40]	; (8000fe8 <led7SEG_RY+0xac>)
 8000fc0:	685b      	ldr	r3, [r3, #4]
 8000fc2:	3b01      	subs	r3, #1
 8000fc4:	4a08      	ldr	r2, [pc, #32]	; (8000fe8 <led7SEG_RY+0xac>)
 8000fc6:	6053      	str	r3, [r2, #4]
                led_buffer[5]--; // Giảm đèn vàng
 8000fc8:	4b07      	ldr	r3, [pc, #28]	; (8000fe8 <led7SEG_RY+0xac>)
 8000fca:	695b      	ldr	r3, [r3, #20]
 8000fcc:	3b01      	subs	r3, #1
 8000fce:	4a06      	ldr	r2, [pc, #24]	; (8000fe8 <led7SEG_RY+0xac>)
 8000fd0:	6153      	str	r3, [r2, #20]
                status_system = 0;
 8000fd2:	4b04      	ldr	r3, [pc, #16]	; (8000fe4 <led7SEG_RY+0xa8>)
 8000fd4:	2200      	movs	r2, #0
 8000fd6:	601a      	str	r2, [r3, #0]
            break;
 8000fd8:	e001      	b.n	8000fde <led7SEG_RY+0xa2>
            break;
 8000fda:	bf00      	nop
 8000fdc:	e000      	b.n	8000fe0 <led7SEG_RY+0xa4>
            break;
 8000fde:	bf00      	nop
}
 8000fe0:	bf00      	nop
 8000fe2:	bd80      	pop	{r7, pc}
 8000fe4:	20000094 	.word	0x20000094
 8000fe8:	200000a8 	.word	0x200000a8
 8000fec:	200000c0 	.word	0x200000c0

08000ff0 <led7SEG_RG>:
/**
 * @brief Điều khiển hiển thị và logic đèn đỏ, xanh (hệ thống 7 đoạn).
 * Hàm  thực hiện việc đếm ngược và cập nhật hiển thị cho đèn đỏ và xanh
 * trong hệ thống đèn 7 đoạn dựa trên trạng thái hệ thống.
 */
void led7SEG_RG() {
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	af00      	add	r7, sp, #0
    switch (status_system) {
 8000ff4:	4b28      	ldr	r3, [pc, #160]	; (8001098 <led7SEG_RG+0xa8>)
 8000ff6:	681b      	ldr	r3, [r3, #0]
 8000ff8:	2b02      	cmp	r3, #2
 8000ffa:	d029      	beq.n	8001050 <led7SEG_RG+0x60>
 8000ffc:	2b02      	cmp	r3, #2
 8000ffe:	dc49      	bgt.n	8001094 <led7SEG_RG+0xa4>
 8001000:	2b00      	cmp	r3, #0
 8001002:	d002      	beq.n	800100a <led7SEG_RG+0x1a>
 8001004:	2b01      	cmp	r3, #1
 8001006:	d00a      	beq.n	800101e <led7SEG_RG+0x2e>
                led_buffer[3]--; // Giảm đèn xanh
                status_system = 0;
            }
            break;
    }
}
 8001008:	e044      	b.n	8001094 <led7SEG_RG+0xa4>
            countdown7SEG();
 800100a:	f7ff fe47 	bl	8000c9c <countdown7SEG>
            setTimer1(500);
 800100e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001012:	f000 fbb5 	bl	8001780 <setTimer1>
            status_system = 1;
 8001016:	4b20      	ldr	r3, [pc, #128]	; (8001098 <led7SEG_RG+0xa8>)
 8001018:	2201      	movs	r2, #1
 800101a:	601a      	str	r2, [r3, #0]
            break;
 800101c:	e03a      	b.n	8001094 <led7SEG_RG+0xa4>
            update7SEG(0);
 800101e:	2000      	movs	r0, #0
 8001020:	f7ff fd9c 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(led_buffer[0]); // Hàng chục đèn đỏ
 8001024:	4b1d      	ldr	r3, [pc, #116]	; (800109c <led7SEG_RG+0xac>)
 8001026:	681b      	ldr	r3, [r3, #0]
 8001028:	4618      	mov	r0, r3
 800102a:	f7ff fa3f 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(led_buffer[2]); // Hàng chục đèn xanh
 800102e:	4b1b      	ldr	r3, [pc, #108]	; (800109c <led7SEG_RG+0xac>)
 8001030:	689b      	ldr	r3, [r3, #8]
 8001032:	4618      	mov	r0, r3
 8001034:	f7ff fbc8 	bl	80007c8 <display7SEG_vertical>
            if (timer_flag1 == 1) {
 8001038:	4b19      	ldr	r3, [pc, #100]	; (80010a0 <led7SEG_RG+0xb0>)
 800103a:	681b      	ldr	r3, [r3, #0]
 800103c:	2b01      	cmp	r3, #1
 800103e:	d126      	bne.n	800108e <led7SEG_RG+0x9e>
                status_system = 2;
 8001040:	4b15      	ldr	r3, [pc, #84]	; (8001098 <led7SEG_RG+0xa8>)
 8001042:	2202      	movs	r2, #2
 8001044:	601a      	str	r2, [r3, #0]
                setTimer1(500);
 8001046:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800104a:	f000 fb99 	bl	8001780 <setTimer1>
            break;
 800104e:	e01e      	b.n	800108e <led7SEG_RG+0x9e>
            update7SEG(1);
 8001050:	2001      	movs	r0, #1
 8001052:	f7ff fd83 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(led_buffer[1]); // Hàng đơn vị đèn đỏ
 8001056:	4b11      	ldr	r3, [pc, #68]	; (800109c <led7SEG_RG+0xac>)
 8001058:	685b      	ldr	r3, [r3, #4]
 800105a:	4618      	mov	r0, r3
 800105c:	f7ff fa26 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(led_buffer[3]); // Hàng đơn vị đèn xanh
 8001060:	4b0e      	ldr	r3, [pc, #56]	; (800109c <led7SEG_RG+0xac>)
 8001062:	68db      	ldr	r3, [r3, #12]
 8001064:	4618      	mov	r0, r3
 8001066:	f7ff fbaf 	bl	80007c8 <display7SEG_vertical>
            if (timer_flag1 == 1) {
 800106a:	4b0d      	ldr	r3, [pc, #52]	; (80010a0 <led7SEG_RG+0xb0>)
 800106c:	681b      	ldr	r3, [r3, #0]
 800106e:	2b01      	cmp	r3, #1
 8001070:	d10f      	bne.n	8001092 <led7SEG_RG+0xa2>
                led_buffer[1]--; // Giảm đèn đỏ
 8001072:	4b0a      	ldr	r3, [pc, #40]	; (800109c <led7SEG_RG+0xac>)
 8001074:	685b      	ldr	r3, [r3, #4]
 8001076:	3b01      	subs	r3, #1
 8001078:	4a08      	ldr	r2, [pc, #32]	; (800109c <led7SEG_RG+0xac>)
 800107a:	6053      	str	r3, [r2, #4]
                led_buffer[3]--; // Giảm đèn xanh
 800107c:	4b07      	ldr	r3, [pc, #28]	; (800109c <led7SEG_RG+0xac>)
 800107e:	68db      	ldr	r3, [r3, #12]
 8001080:	3b01      	subs	r3, #1
 8001082:	4a06      	ldr	r2, [pc, #24]	; (800109c <led7SEG_RG+0xac>)
 8001084:	60d3      	str	r3, [r2, #12]
                status_system = 0;
 8001086:	4b04      	ldr	r3, [pc, #16]	; (8001098 <led7SEG_RG+0xa8>)
 8001088:	2200      	movs	r2, #0
 800108a:	601a      	str	r2, [r3, #0]
            break;
 800108c:	e001      	b.n	8001092 <led7SEG_RG+0xa2>
            break;
 800108e:	bf00      	nop
 8001090:	e000      	b.n	8001094 <led7SEG_RG+0xa4>
            break;
 8001092:	bf00      	nop
}
 8001094:	bf00      	nop
 8001096:	bd80      	pop	{r7, pc}
 8001098:	20000094 	.word	0x20000094
 800109c:	200000a8 	.word	0x200000a8
 80010a0:	200000c0 	.word	0x200000c0

080010a4 <display7SEG>:
/**
 * @brief Hiển thị LED 7 đoạn dựa trên trạng thái hiện tại.
 * Hàm  sẽ gọi các hàm tương ứng để điều khiển hiển thị đèn
 * theo các trạng thái khác nhau.
 */
void display7SEG(){
 80010a4:	b580      	push	{r7, lr}
 80010a6:	af00      	add	r7, sp, #0
    switch(status){
 80010a8:	4b0f      	ldr	r3, [pc, #60]	; (80010e8 <display7SEG+0x44>)
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	3b06      	subs	r3, #6
 80010ae:	2b03      	cmp	r3, #3
 80010b0:	d816      	bhi.n	80010e0 <display7SEG+0x3c>
 80010b2:	a201      	add	r2, pc, #4	; (adr r2, 80010b8 <display7SEG+0x14>)
 80010b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80010b8:	080010c9 	.word	0x080010c9
 80010bc:	080010cf 	.word	0x080010cf
 80010c0:	080010d5 	.word	0x080010d5
 80010c4:	080010db 	.word	0x080010db
        case RED_GREEN:
            led7SEG_RG();
 80010c8:	f7ff ff92 	bl	8000ff0 <led7SEG_RG>
            break;
 80010cc:	e009      	b.n	80010e2 <display7SEG+0x3e>
        case RED_YELLOW:
            led7SEG_RY();
 80010ce:	f7ff ff35 	bl	8000f3c <led7SEG_RY>
            break;
 80010d2:	e006      	b.n	80010e2 <display7SEG+0x3e>
        case GREEN_RED:
            led7SEG_GR();
 80010d4:	f7ff fed8 	bl	8000e88 <led7SEG_GR>
            break;
 80010d8:	e003      	b.n	80010e2 <display7SEG+0x3e>
        case YELLOW_RED:
            led7SEG_YR();
 80010da:	f7ff fe7b 	bl	8000dd4 <led7SEG_YR>
            break;
 80010de:	e000      	b.n	80010e2 <display7SEG+0x3e>
        default:
            break;
 80010e0:	bf00      	nop
    }
}
 80010e2:	bf00      	nop
 80010e4:	bd80      	pop	{r7, pc}
 80010e6:	bf00      	nop
 80010e8:	20000048 	.word	0x20000048

080010ec <fsm_automatic>:
 * @brief Điều khiển trạng thái tự động của hệ thống.
 * Hàm  thực hiện việc chuyển đổi trạng thái hệ thống và điều khiển
 * thời gian cho các đèn dựa trên trạng thái hiện tại.
 */
void fsm_automatic()
{
 80010ec:	b580      	push	{r7, lr}
 80010ee:	af00      	add	r7, sp, #0
    switch (status){
 80010f0:	4b56      	ldr	r3, [pc, #344]	; (800124c <fsm_automatic+0x160>)
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	3b06      	subs	r3, #6
 80010f6:	2b04      	cmp	r3, #4
 80010f8:	f200 809c 	bhi.w	8001234 <fsm_automatic+0x148>
 80010fc:	a201      	add	r2, pc, #4	; (adr r2, 8001104 <fsm_automatic+0x18>)
 80010fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001102:	bf00      	nop
 8001104:	08001145 	.word	0x08001145
 8001108:	08001181 	.word	0x08001181
 800110c:	080011bd 	.word	0x080011bd
 8001110:	080011f9 	.word	0x080011f9
 8001114:	08001119 	.word	0x08001119
        case MOD_INIT:
            status = RED_GREEN; // Chuyển sang trạng thái đèn đỏ - xanh
 8001118:	4b4c      	ldr	r3, [pc, #304]	; (800124c <fsm_automatic+0x160>)
 800111a:	2206      	movs	r2, #6
 800111c:	601a      	str	r2, [r3, #0]
            setTimer6(TIME_RED*1000); // Đặt thời gian cho đèn đỏ
 800111e:	4b4c      	ldr	r3, [pc, #304]	; (8001250 <fsm_automatic+0x164>)
 8001120:	681b      	ldr	r3, [r3, #0]
 8001122:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001126:	fb02 f303 	mul.w	r3, r2, r3
 800112a:	4618      	mov	r0, r3
 800112c:	f000 fb90 	bl	8001850 <setTimer6>
            setTimer2(TIME_GREEN*1000); // Đặt thời gian cho đèn xanh
 8001130:	4b48      	ldr	r3, [pc, #288]	; (8001254 <fsm_automatic+0x168>)
 8001132:	681b      	ldr	r3, [r3, #0]
 8001134:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001138:	fb02 f303 	mul.w	r3, r2, r3
 800113c:	4618      	mov	r0, r3
 800113e:	f000 fb39 	bl	80017b4 <setTimer2>
            break;
 8001142:	e080      	b.n	8001246 <fsm_automatic+0x15a>
        case RED_GREEN:
            display7SEG(); // Hiển thị LED 7 đoạn cho trạng thái hiện tại
 8001144:	f7ff ffae 	bl	80010a4 <display7SEG>
            setRedAGreenB(); // Thiết lập đèn đỏ và xanh
 8001148:	f7ff f920 	bl	800038c <setRedAGreenB>
            if(timer_flag2 == 1){
 800114c:	4b42      	ldr	r3, [pc, #264]	; (8001258 <fsm_automatic+0x16c>)
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	2b01      	cmp	r3, #1
 8001152:	d171      	bne.n	8001238 <fsm_automatic+0x14c>
                status = RED_YELLOW; // Chuyển sang trạng thái đèn đỏ - vàng
 8001154:	4b3d      	ldr	r3, [pc, #244]	; (800124c <fsm_automatic+0x160>)
 8001156:	2207      	movs	r2, #7
 8001158:	601a      	str	r2, [r3, #0]
                setTimer6(TIME_RED*1000); // Đặt lại thời gian cho đèn đỏ
 800115a:	4b3d      	ldr	r3, [pc, #244]	; (8001250 <fsm_automatic+0x164>)
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001162:	fb02 f303 	mul.w	r3, r2, r3
 8001166:	4618      	mov	r0, r3
 8001168:	f000 fb72 	bl	8001850 <setTimer6>
                setTimer2(TIME_YELLOW*1000); // Đặt thời gian cho đèn vàng
 800116c:	4b3b      	ldr	r3, [pc, #236]	; (800125c <fsm_automatic+0x170>)
 800116e:	681b      	ldr	r3, [r3, #0]
 8001170:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001174:	fb02 f303 	mul.w	r3, r2, r3
 8001178:	4618      	mov	r0, r3
 800117a:	f000 fb1b 	bl	80017b4 <setTimer2>
            }
            break;
 800117e:	e05b      	b.n	8001238 <fsm_automatic+0x14c>
        case RED_YELLOW:
            display7SEG(); // Hiển thị LED 7 đoạn cho trạng thái hiện tại
 8001180:	f7ff ff90 	bl	80010a4 <display7SEG>
            setRedAYellowB(); // Thiết lập đèn đỏ và vàng
 8001184:	f7ff f926 	bl	80003d4 <setRedAYellowB>
            if(timer_flag2 == 1){
 8001188:	4b33      	ldr	r3, [pc, #204]	; (8001258 <fsm_automatic+0x16c>)
 800118a:	681b      	ldr	r3, [r3, #0]
 800118c:	2b01      	cmp	r3, #1
 800118e:	d155      	bne.n	800123c <fsm_automatic+0x150>
                status = GREEN_RED; // Chuyển sang trạng thái đèn xanh - đỏ
 8001190:	4b2e      	ldr	r3, [pc, #184]	; (800124c <fsm_automatic+0x160>)
 8001192:	2208      	movs	r2, #8
 8001194:	601a      	str	r2, [r3, #0]
                setTimer6(TIME_RED*1000); // Đặt lại thời gian cho đèn đỏ
 8001196:	4b2e      	ldr	r3, [pc, #184]	; (8001250 <fsm_automatic+0x164>)
 8001198:	681b      	ldr	r3, [r3, #0]
 800119a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800119e:	fb02 f303 	mul.w	r3, r2, r3
 80011a2:	4618      	mov	r0, r3
 80011a4:	f000 fb54 	bl	8001850 <setTimer6>
                setTimer2(TIME_GREEN*1000); // Đặt lại thời gian cho đèn xanh
 80011a8:	4b2a      	ldr	r3, [pc, #168]	; (8001254 <fsm_automatic+0x168>)
 80011aa:	681b      	ldr	r3, [r3, #0]
 80011ac:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80011b0:	fb02 f303 	mul.w	r3, r2, r3
 80011b4:	4618      	mov	r0, r3
 80011b6:	f000 fafd 	bl	80017b4 <setTimer2>
            }
            break;
 80011ba:	e03f      	b.n	800123c <fsm_automatic+0x150>
        case GREEN_RED:
            display7SEG(); // Hiển thị LED 7 đoạn cho trạng thái hiện tại
 80011bc:	f7ff ff72 	bl	80010a4 <display7SEG>
            setGreenARedB(); // Thiết lập đèn xanh và đỏ
 80011c0:	f7ff f92c 	bl	800041c <setGreenARedB>
            if(timer_flag2 == 1){
 80011c4:	4b24      	ldr	r3, [pc, #144]	; (8001258 <fsm_automatic+0x16c>)
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	2b01      	cmp	r3, #1
 80011ca:	d139      	bne.n	8001240 <fsm_automatic+0x154>
                status = YELLOW_RED; // Chuyển sang trạng thái đèn vàng - đỏ
 80011cc:	4b1f      	ldr	r3, [pc, #124]	; (800124c <fsm_automatic+0x160>)
 80011ce:	2209      	movs	r2, #9
 80011d0:	601a      	str	r2, [r3, #0]
                setTimer6(TIME_RED*1000); // Đặt lại thời gian cho đèn đỏ
 80011d2:	4b1f      	ldr	r3, [pc, #124]	; (8001250 <fsm_automatic+0x164>)
 80011d4:	681b      	ldr	r3, [r3, #0]
 80011d6:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80011da:	fb02 f303 	mul.w	r3, r2, r3
 80011de:	4618      	mov	r0, r3
 80011e0:	f000 fb36 	bl	8001850 <setTimer6>
                setTimer2(TIME_YELLOW*1000); // Đặt lại thời gian cho đèn vàng
 80011e4:	4b1d      	ldr	r3, [pc, #116]	; (800125c <fsm_automatic+0x170>)
 80011e6:	681b      	ldr	r3, [r3, #0]
 80011e8:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80011ec:	fb02 f303 	mul.w	r3, r2, r3
 80011f0:	4618      	mov	r0, r3
 80011f2:	f000 fadf 	bl	80017b4 <setTimer2>
            }
            break;
 80011f6:	e023      	b.n	8001240 <fsm_automatic+0x154>
        case YELLOW_RED:
            display7SEG(); // Hiển thị LED 7 đoạn cho trạng thái hiện tại
 80011f8:	f7ff ff54 	bl	80010a4 <display7SEG>
            setYellowARedB(); // Thiết lập đèn vàng và đỏ
 80011fc:	f7ff f932 	bl	8000464 <setYellowARedB>
            if(timer_flag2 == 1){
 8001200:	4b15      	ldr	r3, [pc, #84]	; (8001258 <fsm_automatic+0x16c>)
 8001202:	681b      	ldr	r3, [r3, #0]
 8001204:	2b01      	cmp	r3, #1
 8001206:	d11d      	bne.n	8001244 <fsm_automatic+0x158>
                status = RED_GREEN; // Chuyển sang trạng thái đèn đỏ - xanh
 8001208:	4b10      	ldr	r3, [pc, #64]	; (800124c <fsm_automatic+0x160>)
 800120a:	2206      	movs	r2, #6
 800120c:	601a      	str	r2, [r3, #0]
                setTimer6(TIME_RED*1000); // Đặt lại thời gian cho đèn đỏ
 800120e:	4b10      	ldr	r3, [pc, #64]	; (8001250 <fsm_automatic+0x164>)
 8001210:	681b      	ldr	r3, [r3, #0]
 8001212:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001216:	fb02 f303 	mul.w	r3, r2, r3
 800121a:	4618      	mov	r0, r3
 800121c:	f000 fb18 	bl	8001850 <setTimer6>
                setTimer2(TIME_GREEN*1000); // Đặt lại thời gian cho đèn xanh
 8001220:	4b0c      	ldr	r3, [pc, #48]	; (8001254 <fsm_automatic+0x168>)
 8001222:	681b      	ldr	r3, [r3, #0]
 8001224:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001228:	fb02 f303 	mul.w	r3, r2, r3
 800122c:	4618      	mov	r0, r3
 800122e:	f000 fac1 	bl	80017b4 <setTimer2>
            }
            break;
 8001232:	e007      	b.n	8001244 <fsm_automatic+0x158>
        default:
            break;
 8001234:	bf00      	nop
 8001236:	e006      	b.n	8001246 <fsm_automatic+0x15a>
            break;
 8001238:	bf00      	nop
 800123a:	e004      	b.n	8001246 <fsm_automatic+0x15a>
            break;
 800123c:	bf00      	nop
 800123e:	e002      	b.n	8001246 <fsm_automatic+0x15a>
            break;
 8001240:	bf00      	nop
 8001242:	e000      	b.n	8001246 <fsm_automatic+0x15a>
            break;
 8001244:	bf00      	nop
    }
}
 8001246:	bf00      	nop
 8001248:	bd80      	pop	{r7, pc}
 800124a:	bf00      	nop
 800124c:	20000048 	.word	0x20000048
 8001250:	20000050 	.word	0x20000050
 8001254:	20000058 	.word	0x20000058
 8001258:	200000c8 	.word	0x200000c8
 800125c:	20000054 	.word	0x20000054

08001260 <modifyMode>:
 * Hàm  cập nhật hiển thị cho hệ thống LED 7 đoạn dựa trên giá trị `temp`
 * và thực hiện các tác vụ dựa trên giá trị của `num`.
 *
 * @param temp Giá trị hiện tại của chế độ.
 */
void modifyMode(int temp){
 8001260:	b580      	push	{r7, lr}
 8001262:	b082      	sub	sp, #8
 8001264:	af00      	add	r7, sp, #0
 8001266:	6078      	str	r0, [r7, #4]
    switch(num){
 8001268:	4b35      	ldr	r3, [pc, #212]	; (8001340 <modifyMode+0xe0>)
 800126a:	681b      	ldr	r3, [r3, #0]
 800126c:	2b02      	cmp	r3, #2
 800126e:	d030      	beq.n	80012d2 <modifyMode+0x72>
 8001270:	2b02      	cmp	r3, #2
 8001272:	dc5b      	bgt.n	800132c <modifyMode+0xcc>
 8001274:	2b00      	cmp	r3, #0
 8001276:	d002      	beq.n	800127e <modifyMode+0x1e>
 8001278:	2b01      	cmp	r3, #1
 800127a:	d007      	beq.n	800128c <modifyMode+0x2c>
                setTimer4(250); // Đặt thời gian cho bước tiếp theo
                num = 1; // Quay lại bước trước trong chế độ
            }
            break;
        default:
            break;
 800127c:	e056      	b.n	800132c <modifyMode+0xcc>
            num = 1; // Chuyển sang bước tiếp theo trong chế độ
 800127e:	4b30      	ldr	r3, [pc, #192]	; (8001340 <modifyMode+0xe0>)
 8001280:	2201      	movs	r2, #1
 8001282:	601a      	str	r2, [r3, #0]
            setTimer4(250); // Đặt thời gian cho bước tiếp theo
 8001284:	20fa      	movs	r0, #250	; 0xfa
 8001286:	f000 fac9 	bl	800181c <setTimer4>
            break;
 800128a:	e054      	b.n	8001336 <modifyMode+0xd6>
            update7SEG(0); // Cập nhật hiển thị LED 7 đoạn
 800128c:	2000      	movs	r0, #0
 800128e:	f7ff fc65 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(mode/10); // Hiển thị giá trị hàng chục của chế độ
 8001292:	4b2c      	ldr	r3, [pc, #176]	; (8001344 <modifyMode+0xe4>)
 8001294:	681b      	ldr	r3, [r3, #0]
 8001296:	4a2c      	ldr	r2, [pc, #176]	; (8001348 <modifyMode+0xe8>)
 8001298:	fb82 1203 	smull	r1, r2, r2, r3
 800129c:	1092      	asrs	r2, r2, #2
 800129e:	17db      	asrs	r3, r3, #31
 80012a0:	1ad3      	subs	r3, r2, r3
 80012a2:	4618      	mov	r0, r3
 80012a4:	f7ff f902 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(temp/10); // Hiển thị giá trị hàng chục của thời gian
 80012a8:	687b      	ldr	r3, [r7, #4]
 80012aa:	4a27      	ldr	r2, [pc, #156]	; (8001348 <modifyMode+0xe8>)
 80012ac:	fb82 1203 	smull	r1, r2, r2, r3
 80012b0:	1092      	asrs	r2, r2, #2
 80012b2:	17db      	asrs	r3, r3, #31
 80012b4:	1ad3      	subs	r3, r2, r3
 80012b6:	4618      	mov	r0, r3
 80012b8:	f7ff fa86 	bl	80007c8 <display7SEG_vertical>
            if(timer_flag4 == 1){
 80012bc:	4b23      	ldr	r3, [pc, #140]	; (800134c <modifyMode+0xec>)
 80012be:	681b      	ldr	r3, [r3, #0]
 80012c0:	2b01      	cmp	r3, #1
 80012c2:	d135      	bne.n	8001330 <modifyMode+0xd0>
                setTimer4(250); // Đặt thời gian cho bước tiếp theo
 80012c4:	20fa      	movs	r0, #250	; 0xfa
 80012c6:	f000 faa9 	bl	800181c <setTimer4>
                num = 2; // Chuyển sang bước tiếp theo trong chế độ
 80012ca:	4b1d      	ldr	r3, [pc, #116]	; (8001340 <modifyMode+0xe0>)
 80012cc:	2202      	movs	r2, #2
 80012ce:	601a      	str	r2, [r3, #0]
            break;
 80012d0:	e02e      	b.n	8001330 <modifyMode+0xd0>
            update7SEG(1); // Cập nhật hiển thị LED 7 đoạn
 80012d2:	2001      	movs	r0, #1
 80012d4:	f7ff fc42 	bl	8000b5c <update7SEG>
            display7SEG_horizontal(mode%10); // Hiển thị giá trị hàng đơn vị của chế độ
 80012d8:	4b1a      	ldr	r3, [pc, #104]	; (8001344 <modifyMode+0xe4>)
 80012da:	681a      	ldr	r2, [r3, #0]
 80012dc:	4b1a      	ldr	r3, [pc, #104]	; (8001348 <modifyMode+0xe8>)
 80012de:	fb83 1302 	smull	r1, r3, r3, r2
 80012e2:	1099      	asrs	r1, r3, #2
 80012e4:	17d3      	asrs	r3, r2, #31
 80012e6:	1ac9      	subs	r1, r1, r3
 80012e8:	460b      	mov	r3, r1
 80012ea:	009b      	lsls	r3, r3, #2
 80012ec:	440b      	add	r3, r1
 80012ee:	005b      	lsls	r3, r3, #1
 80012f0:	1ad1      	subs	r1, r2, r3
 80012f2:	4608      	mov	r0, r1
 80012f4:	f7ff f8da 	bl	80004ac <display7SEG_horizontal>
            display7SEG_vertical(temp%10); // Hiển thị giá trị hàng đơn vị của thời gian
 80012f8:	687a      	ldr	r2, [r7, #4]
 80012fa:	4b13      	ldr	r3, [pc, #76]	; (8001348 <modifyMode+0xe8>)
 80012fc:	fb83 1302 	smull	r1, r3, r3, r2
 8001300:	1099      	asrs	r1, r3, #2
 8001302:	17d3      	asrs	r3, r2, #31
 8001304:	1ac9      	subs	r1, r1, r3
 8001306:	460b      	mov	r3, r1
 8001308:	009b      	lsls	r3, r3, #2
 800130a:	440b      	add	r3, r1
 800130c:	005b      	lsls	r3, r3, #1
 800130e:	1ad1      	subs	r1, r2, r3
 8001310:	4608      	mov	r0, r1
 8001312:	f7ff fa59 	bl	80007c8 <display7SEG_vertical>
            if(timer_flag4 == 1){
 8001316:	4b0d      	ldr	r3, [pc, #52]	; (800134c <modifyMode+0xec>)
 8001318:	681b      	ldr	r3, [r3, #0]
 800131a:	2b01      	cmp	r3, #1
 800131c:	d10a      	bne.n	8001334 <modifyMode+0xd4>
                setTimer4(250); // Đặt thời gian cho bước tiếp theo
 800131e:	20fa      	movs	r0, #250	; 0xfa
 8001320:	f000 fa7c 	bl	800181c <setTimer4>
                num = 1; // Quay lại bước trước trong chế độ
 8001324:	4b06      	ldr	r3, [pc, #24]	; (8001340 <modifyMode+0xe0>)
 8001326:	2201      	movs	r2, #1
 8001328:	601a      	str	r2, [r3, #0]
            break;
 800132a:	e003      	b.n	8001334 <modifyMode+0xd4>
            break;
 800132c:	bf00      	nop
 800132e:	e002      	b.n	8001336 <modifyMode+0xd6>
            break;
 8001330:	bf00      	nop
 8001332:	e000      	b.n	8001336 <modifyMode+0xd6>
            break;
 8001334:	bf00      	nop
    }
}
 8001336:	bf00      	nop
 8001338:	3708      	adds	r7, #8
 800133a:	46bd      	mov	sp, r7
 800133c:	bd80      	pop	{r7, pc}
 800133e:	bf00      	nop
 8001340:	20000098 	.word	0x20000098
 8001344:	2000004c 	.word	0x2000004c
 8001348:	66666667 	.word	0x66666667
 800134c:	200000d8 	.word	0x200000d8

08001350 <fsm_manual>:
/**
 * @brief Điều khiển chế độ thủ công của hệ thống.
 * Hàm  thực hiện việc chuyển đổi và điều khiển hệ thống đèn 7 đoạn
 * dựa trên trạng thái hiện tại và các nút nhấn.
 */
void fsm_manual(){
 8001350:	b580      	push	{r7, lr}
 8001352:	af00      	add	r7, sp, #0
    if(timer_flag10 == 1){
 8001354:	4b7c      	ldr	r3, [pc, #496]	; (8001548 <fsm_manual+0x1f8>)
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	2b01      	cmp	r3, #1
 800135a:	d103      	bne.n	8001364 <fsm_manual+0x14>
        setTimer10(1000); // Đặt thời gian cho hoạt động thủ công
 800135c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001360:	f000 fa90 	bl	8001884 <setTimer10>
    }
    switch(mode){
 8001364:	4b79      	ldr	r3, [pc, #484]	; (800154c <fsm_manual+0x1fc>)
 8001366:	681b      	ldr	r3, [r3, #0]
 8001368:	3b01      	subs	r3, #1
 800136a:	2b03      	cmp	r3, #3
 800136c:	f200 80e0 	bhi.w	8001530 <fsm_manual+0x1e0>
 8001370:	a201      	add	r2, pc, #4	; (adr r2, 8001378 <fsm_manual+0x28>)
 8001372:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001376:	bf00      	nop
 8001378:	08001389 	.word	0x08001389
 800137c:	080013ab 	.word	0x080013ab
 8001380:	0800141f 	.word	0x0800141f
 8001384:	08001491 	.word	0x08001491
        case AUTOLIGHT:
            fsm_automatic(); // Chuyển sang chế độ tự động
 8001388:	f7ff feb0 	bl	80010ec <fsm_automatic>
            if(isButtonPressed(0) == 1){
 800138c:	2000      	movs	r0, #0
 800138e:	f7fe fedd 	bl	800014c <isButtonPressed>
 8001392:	4603      	mov	r3, r0
 8001394:	2b01      	cmp	r3, #1
 8001396:	f040 80cd 	bne.w	8001534 <fsm_manual+0x1e4>
                mode = RED_CHANGE; // Chuyển sang chế độ đèn đỏ
 800139a:	4b6c      	ldr	r3, [pc, #432]	; (800154c <fsm_manual+0x1fc>)
 800139c:	2202      	movs	r2, #2
 800139e:	601a      	str	r2, [r3, #0]
                setTimer3(500); // Đặt thời gian cho chế độ đèn đỏ
 80013a0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80013a4:	f000 fa20 	bl	80017e8 <setTimer3>
            }
            break;
 80013a8:	e0c4      	b.n	8001534 <fsm_manual+0x1e4>
        case RED_CHANGE:
            modifyMode(TIME_RED_tmp); // Thay đổi thời gian đèn đỏ
 80013aa:	4b69      	ldr	r3, [pc, #420]	; (8001550 <fsm_manual+0x200>)
 80013ac:	681b      	ldr	r3, [r3, #0]
 80013ae:	4618      	mov	r0, r3
 80013b0:	f7ff ff56 	bl	8001260 <modifyMode>
            if(timer_flag3 == 1){
 80013b4:	4b67      	ldr	r3, [pc, #412]	; (8001554 <fsm_manual+0x204>)
 80013b6:	681b      	ldr	r3, [r3, #0]
 80013b8:	2b01      	cmp	r3, #1
 80013ba:	d105      	bne.n	80013c8 <fsm_manual+0x78>
                toggleAllRed(); // Chuyển đổi tất cả đèn sang màu đỏ
 80013bc:	f7fe ff80 	bl	80002c0 <toggleAllRed>
                setTimer3(500); // Đặt lại thời gian cho chế độ đèn đỏ
 80013c0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80013c4:	f000 fa10 	bl	80017e8 <setTimer3>
            }
            if(isButtonPressed(0) == 1){
 80013c8:	2000      	movs	r0, #0
 80013ca:	f7fe febf 	bl	800014c <isButtonPressed>
 80013ce:	4603      	mov	r3, r0
 80013d0:	2b01      	cmp	r3, #1
 80013d2:	d106      	bne.n	80013e2 <fsm_manual+0x92>
                mode = YELLOW_CHANGE; // Chuyển sang chế độ đèn vàng
 80013d4:	4b5d      	ldr	r3, [pc, #372]	; (800154c <fsm_manual+0x1fc>)
 80013d6:	2203      	movs	r2, #3
 80013d8:	601a      	str	r2, [r3, #0]
                setTimer3(500); // Đặt thời gian cho chế độ đèn vàng
 80013da:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80013de:	f000 fa03 	bl	80017e8 <setTimer3>
            }
            if(isButtonPressed(1) == 1){
 80013e2:	2001      	movs	r0, #1
 80013e4:	f7fe feb2 	bl	800014c <isButtonPressed>
 80013e8:	4603      	mov	r3, r0
 80013ea:	2b01      	cmp	r3, #1
 80013ec:	d10b      	bne.n	8001406 <fsm_manual+0xb6>
                TIME_RED_tmp++; // Tăng thời gian đèn đỏ
 80013ee:	4b58      	ldr	r3, [pc, #352]	; (8001550 <fsm_manual+0x200>)
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	3301      	adds	r3, #1
 80013f4:	4a56      	ldr	r2, [pc, #344]	; (8001550 <fsm_manual+0x200>)
 80013f6:	6013      	str	r3, [r2, #0]
                if(TIME_RED_tmp > 99){
 80013f8:	4b55      	ldr	r3, [pc, #340]	; (8001550 <fsm_manual+0x200>)
 80013fa:	681b      	ldr	r3, [r3, #0]
 80013fc:	2b63      	cmp	r3, #99	; 0x63
 80013fe:	dd02      	ble.n	8001406 <fsm_manual+0xb6>
                    TIME_RED_tmp = 1; // Đặt lại thời gian đèn đỏ nếu quá lớn
 8001400:	4b53      	ldr	r3, [pc, #332]	; (8001550 <fsm_manual+0x200>)
 8001402:	2201      	movs	r2, #1
 8001404:	601a      	str	r2, [r3, #0]
                }
            }
            if(isButtonPressed(2) == 1){
 8001406:	2002      	movs	r0, #2
 8001408:	f7fe fea0 	bl	800014c <isButtonPressed>
 800140c:	4603      	mov	r3, r0
 800140e:	2b01      	cmp	r3, #1
 8001410:	f040 8092 	bne.w	8001538 <fsm_manual+0x1e8>
                TIME_RED = TIME_RED_tmp; // Cập nhật thời gian đèn đỏ
 8001414:	4b4e      	ldr	r3, [pc, #312]	; (8001550 <fsm_manual+0x200>)
 8001416:	681b      	ldr	r3, [r3, #0]
 8001418:	4a4f      	ldr	r2, [pc, #316]	; (8001558 <fsm_manual+0x208>)
 800141a:	6013      	str	r3, [r2, #0]
            }
            break;
 800141c:	e08c      	b.n	8001538 <fsm_manual+0x1e8>
        case YELLOW_CHANGE:
            modifyMode(TIME_YELLOW_tmp); // Thay đổi thời gian đèn vàng
 800141e:	4b4f      	ldr	r3, [pc, #316]	; (800155c <fsm_manual+0x20c>)
 8001420:	681b      	ldr	r3, [r3, #0]
 8001422:	4618      	mov	r0, r3
 8001424:	f7ff ff1c 	bl	8001260 <modifyMode>
            if(timer_flag3 == 1){
 8001428:	4b4a      	ldr	r3, [pc, #296]	; (8001554 <fsm_manual+0x204>)
 800142a:	681b      	ldr	r3, [r3, #0]
 800142c:	2b01      	cmp	r3, #1
 800142e:	d105      	bne.n	800143c <fsm_manual+0xec>
                toggleAllYellow(); // Chuyển đổi tất cả đèn sang màu vàng
 8001430:	f7fe ff8a 	bl	8000348 <toggleAllYellow>
                setTimer3(500); // Đặt lại thời gian cho chế độ đèn vàng
 8001434:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001438:	f000 f9d6 	bl	80017e8 <setTimer3>
            }
            if(isButtonPressed(0) == 1){
 800143c:	2000      	movs	r0, #0
 800143e:	f7fe fe85 	bl	800014c <isButtonPressed>
 8001442:	4603      	mov	r3, r0
 8001444:	2b01      	cmp	r3, #1
 8001446:	d106      	bne.n	8001456 <fsm_manual+0x106>
                mode = GREEN_CHANGE; // Chuyển sang chế độ đèn xanh
 8001448:	4b40      	ldr	r3, [pc, #256]	; (800154c <fsm_manual+0x1fc>)
 800144a:	2204      	movs	r2, #4
 800144c:	601a      	str	r2, [r3, #0]
                setTimer4(500); // Đặt thời gian cho chế độ đèn xanh
 800144e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8001452:	f000 f9e3 	bl	800181c <setTimer4>
            }
            if(isButtonPressed(1) == 1){
 8001456:	2001      	movs	r0, #1
 8001458:	f7fe fe78 	bl	800014c <isButtonPressed>
 800145c:	4603      	mov	r3, r0
 800145e:	2b01      	cmp	r3, #1
 8001460:	d10b      	bne.n	800147a <fsm_manual+0x12a>
                TIME_YELLOW_tmp++; // Tăng thời gian đèn vàng
 8001462:	4b3e      	ldr	r3, [pc, #248]	; (800155c <fsm_manual+0x20c>)
 8001464:	681b      	ldr	r3, [r3, #0]
 8001466:	3301      	adds	r3, #1
 8001468:	4a3c      	ldr	r2, [pc, #240]	; (800155c <fsm_manual+0x20c>)
 800146a:	6013      	str	r3, [r2, #0]
                if(TIME_YELLOW_tmp > 99){
 800146c:	4b3b      	ldr	r3, [pc, #236]	; (800155c <fsm_manual+0x20c>)
 800146e:	681b      	ldr	r3, [r3, #0]
 8001470:	2b63      	cmp	r3, #99	; 0x63
 8001472:	dd02      	ble.n	800147a <fsm_manual+0x12a>
                    TIME_YELLOW_tmp = 1; // Đặt lại thời gian đèn vàng nếu quá lớn
 8001474:	4b39      	ldr	r3, [pc, #228]	; (800155c <fsm_manual+0x20c>)
 8001476:	2201      	movs	r2, #1
 8001478:	601a      	str	r2, [r3, #0]
                }
            }
            if(isButtonPressed(2) == 1){
 800147a:	2002      	movs	r0, #2
 800147c:	f7fe fe66 	bl	800014c <isButtonPressed>
 8001480:	4603      	mov	r3, r0
 8001482:	2b01      	cmp	r3, #1
 8001484:	d15a      	bne.n	800153c <fsm_manual+0x1ec>
                TIME_YELLOW = TIME_YELLOW_tmp; // Cập nhật thời gian đèn vàng
 8001486:	4b35      	ldr	r3, [pc, #212]	; (800155c <fsm_manual+0x20c>)
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	4a35      	ldr	r2, [pc, #212]	; (8001560 <fsm_manual+0x210>)
 800148c:	6013      	str	r3, [r2, #0]
            }
            break;
 800148e:	e055      	b.n	800153c <fsm_manual+0x1ec>
        case GREEN_CHANGE:
            modifyMode(TIME_GREEN_tmp); // Thay đổi thời gian đèn xanh
 8001490:	4b34      	ldr	r3, [pc, #208]	; (8001564 <fsm_manual+0x214>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	4618      	mov	r0, r3
 8001496:	f7ff fee3 	bl	8001260 <modifyMode>
            if(timer_flag3 == 1){
 800149a:	4b2e      	ldr	r3, [pc, #184]	; (8001554 <fsm_manual+0x204>)
 800149c:	681b      	ldr	r3, [r3, #0]
 800149e:	2b01      	cmp	r3, #1
 80014a0:	d105      	bne.n	80014ae <fsm_manual+0x15e>
                toggleAllGreen(); // Chuyển đổi tất cả đèn sang màu xanh
 80014a2:	f7fe ff2f 	bl	8000304 <toggleAllGreen>
                setTimer3(500); // Đặt lại thời gian cho chế độ đèn xanh
 80014a6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80014aa:	f000 f99d 	bl	80017e8 <setTimer3>
            }
            if(isButtonPressed(0) == 1){
 80014ae:	2000      	movs	r0, #0
 80014b0:	f7fe fe4c 	bl	800014c <isButtonPressed>
 80014b4:	4603      	mov	r3, r0
 80014b6:	2b01      	cmp	r3, #1
 80014b8:	d102      	bne.n	80014c0 <fsm_manual+0x170>
                mode = AUTOLIGHT; // Quay lại chế độ tự động
 80014ba:	4b24      	ldr	r3, [pc, #144]	; (800154c <fsm_manual+0x1fc>)
 80014bc:	2201      	movs	r2, #1
 80014be:	601a      	str	r2, [r3, #0]
            }
            if(isButtonPressed(1) == 1){
 80014c0:	2001      	movs	r0, #1
 80014c2:	f7fe fe43 	bl	800014c <isButtonPressed>
 80014c6:	4603      	mov	r3, r0
 80014c8:	2b01      	cmp	r3, #1
 80014ca:	d10b      	bne.n	80014e4 <fsm_manual+0x194>
                TIME_GREEN_tmp++; // Tăng thời gian đèn xanh
 80014cc:	4b25      	ldr	r3, [pc, #148]	; (8001564 <fsm_manual+0x214>)
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	3301      	adds	r3, #1
 80014d2:	4a24      	ldr	r2, [pc, #144]	; (8001564 <fsm_manual+0x214>)
 80014d4:	6013      	str	r3, [r2, #0]
                if(TIME_GREEN_tmp > 99){
 80014d6:	4b23      	ldr	r3, [pc, #140]	; (8001564 <fsm_manual+0x214>)
 80014d8:	681b      	ldr	r3, [r3, #0]
 80014da:	2b63      	cmp	r3, #99	; 0x63
 80014dc:	dd02      	ble.n	80014e4 <fsm_manual+0x194>
                    TIME_GREEN_tmp = 1; // Đặt lại thời gian đèn xanh nếu quá lớn
 80014de:	4b21      	ldr	r3, [pc, #132]	; (8001564 <fsm_manual+0x214>)
 80014e0:	2201      	movs	r2, #1
 80014e2:	601a      	str	r2, [r3, #0]
                }
            }
            if(isButtonPressed(2) == 1){
 80014e4:	2002      	movs	r0, #2
 80014e6:	f7fe fe31 	bl	800014c <isButtonPressed>
 80014ea:	4603      	mov	r3, r0
 80014ec:	2b01      	cmp	r3, #1
 80014ee:	d127      	bne.n	8001540 <fsm_manual+0x1f0>
                TIME_GREEN = TIME_GREEN_tmp; // Cập nhật thời gian đèn xanh
 80014f0:	4b1c      	ldr	r3, [pc, #112]	; (8001564 <fsm_manual+0x214>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	4a1c      	ldr	r2, [pc, #112]	; (8001568 <fsm_manual+0x218>)
 80014f6:	6013      	str	r3, [r2, #0]
                TIME_RED_tmp = TIME_GREEN_tmp + TIME_YELLOW_tmp; // Cập nhật thời gian đèn đỏ dựa trên đèn xanh và vàng
 80014f8:	4b1a      	ldr	r3, [pc, #104]	; (8001564 <fsm_manual+0x214>)
 80014fa:	681a      	ldr	r2, [r3, #0]
 80014fc:	4b17      	ldr	r3, [pc, #92]	; (800155c <fsm_manual+0x20c>)
 80014fe:	681b      	ldr	r3, [r3, #0]
 8001500:	4413      	add	r3, r2
 8001502:	4a13      	ldr	r2, [pc, #76]	; (8001550 <fsm_manual+0x200>)
 8001504:	6013      	str	r3, [r2, #0]
                TIME_RED = TIME_RED_tmp;
 8001506:	4b12      	ldr	r3, [pc, #72]	; (8001550 <fsm_manual+0x200>)
 8001508:	681b      	ldr	r3, [r3, #0]
 800150a:	4a13      	ldr	r2, [pc, #76]	; (8001558 <fsm_manual+0x208>)
 800150c:	6013      	str	r3, [r2, #0]
                TIME_YELLOW = TIME_YELLOW_tmp;
 800150e:	4b13      	ldr	r3, [pc, #76]	; (800155c <fsm_manual+0x20c>)
 8001510:	681b      	ldr	r3, [r3, #0]
 8001512:	4a13      	ldr	r2, [pc, #76]	; (8001560 <fsm_manual+0x210>)
 8001514:	6013      	str	r3, [r2, #0]
                TIME_GREEN = TIME_GREEN_tmp;
 8001516:	4b13      	ldr	r3, [pc, #76]	; (8001564 <fsm_manual+0x214>)
 8001518:	681b      	ldr	r3, [r3, #0]
 800151a:	4a13      	ldr	r2, [pc, #76]	; (8001568 <fsm_manual+0x218>)
 800151c:	6013      	str	r3, [r2, #0]
                updateBuffer(); // Cập nhật lại buffer hiển thị
 800151e:	f7ff fb61 	bl	8000be4 <updateBuffer>
                status = MOD_INIT; // Khởi động lại hệ thống
 8001522:	4b12      	ldr	r3, [pc, #72]	; (800156c <fsm_manual+0x21c>)
 8001524:	220a      	movs	r2, #10
 8001526:	601a      	str	r2, [r3, #0]
                status_system = 0;
 8001528:	4b11      	ldr	r3, [pc, #68]	; (8001570 <fsm_manual+0x220>)
 800152a:	2200      	movs	r2, #0
 800152c:	601a      	str	r2, [r3, #0]
            }
            break;
 800152e:	e007      	b.n	8001540 <fsm_manual+0x1f0>
        default:
            break;
 8001530:	bf00      	nop
 8001532:	e006      	b.n	8001542 <fsm_manual+0x1f2>
            break;
 8001534:	bf00      	nop
 8001536:	e004      	b.n	8001542 <fsm_manual+0x1f2>
            break;
 8001538:	bf00      	nop
 800153a:	e002      	b.n	8001542 <fsm_manual+0x1f2>
            break;
 800153c:	bf00      	nop
 800153e:	e000      	b.n	8001542 <fsm_manual+0x1f2>
            break;
 8001540:	bf00      	nop
    }
}
 8001542:	bf00      	nop
 8001544:	bd80      	pop	{r7, pc}
 8001546:	bf00      	nop
 8001548:	20000108 	.word	0x20000108
 800154c:	2000004c 	.word	0x2000004c
 8001550:	2000009c 	.word	0x2000009c
 8001554:	200000d0 	.word	0x200000d0
 8001558:	20000050 	.word	0x20000050
 800155c:	200000a0 	.word	0x200000a0
 8001560:	20000054 	.word	0x20000054
 8001564:	200000a4 	.word	0x200000a4
 8001568:	20000058 	.word	0x20000058
 800156c:	20000048 	.word	0x20000048
 8001570:	20000094 	.word	0x20000094

08001574 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001574:	b580      	push	{r7, lr}
 8001576:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001578:	f000 fb20 	bl	8001bbc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800157c:	f000 f80e 	bl	800159c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001580:	f000 f894 	bl	80016ac <MX_GPIO_Init>
  MX_TIM2_Init();
 8001584:	f000 f846 	bl	8001614 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8001588:	4803      	ldr	r0, [pc, #12]	; (8001598 <main+0x24>)
 800158a:	f001 fa75 	bl	8002a78 <HAL_TIM_Base_Start_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  updateBuffer();
 800158e:	f7ff fb29 	bl	8000be4 <updateBuffer>
  while (1)
  {
	  fsm_manual();
 8001592:	f7ff fedd 	bl	8001350 <fsm_manual>
 8001596:	e7fc      	b.n	8001592 <main+0x1e>
 8001598:	20000110 	.word	0x20000110

0800159c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800159c:	b580      	push	{r7, lr}
 800159e:	b090      	sub	sp, #64	; 0x40
 80015a0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015a2:	f107 0318 	add.w	r3, r7, #24
 80015a6:	2228      	movs	r2, #40	; 0x28
 80015a8:	2100      	movs	r1, #0
 80015aa:	4618      	mov	r0, r3
 80015ac:	f001 fe14 	bl	80031d8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80015b0:	1d3b      	adds	r3, r7, #4
 80015b2:	2200      	movs	r2, #0
 80015b4:	601a      	str	r2, [r3, #0]
 80015b6:	605a      	str	r2, [r3, #4]
 80015b8:	609a      	str	r2, [r3, #8]
 80015ba:	60da      	str	r2, [r3, #12]
 80015bc:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80015be:	2302      	movs	r3, #2
 80015c0:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80015c2:	2301      	movs	r3, #1
 80015c4:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80015c6:	2310      	movs	r3, #16
 80015c8:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80015ca:	2300      	movs	r3, #0
 80015cc:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80015ce:	f107 0318 	add.w	r3, r7, #24
 80015d2:	4618      	mov	r0, r3
 80015d4:	f000 fe24 	bl	8002220 <HAL_RCC_OscConfig>
 80015d8:	4603      	mov	r3, r0
 80015da:	2b00      	cmp	r3, #0
 80015dc:	d001      	beq.n	80015e2 <SystemClock_Config+0x46>
  {
    Error_Handler();
 80015de:	f000 f8c9 	bl	8001774 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80015e2:	230f      	movs	r3, #15
 80015e4:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80015e6:	2300      	movs	r3, #0
 80015e8:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80015ea:	2300      	movs	r3, #0
 80015ec:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80015ee:	2300      	movs	r3, #0
 80015f0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80015f2:	2300      	movs	r3, #0
 80015f4:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80015f6:	1d3b      	adds	r3, r7, #4
 80015f8:	2100      	movs	r1, #0
 80015fa:	4618      	mov	r0, r3
 80015fc:	f001 f890 	bl	8002720 <HAL_RCC_ClockConfig>
 8001600:	4603      	mov	r3, r0
 8001602:	2b00      	cmp	r3, #0
 8001604:	d001      	beq.n	800160a <SystemClock_Config+0x6e>
  {
    Error_Handler();
 8001606:	f000 f8b5 	bl	8001774 <Error_Handler>
  }
}
 800160a:	bf00      	nop
 800160c:	3740      	adds	r7, #64	; 0x40
 800160e:	46bd      	mov	sp, r7
 8001610:	bd80      	pop	{r7, pc}
	...

08001614 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001614:	b580      	push	{r7, lr}
 8001616:	b086      	sub	sp, #24
 8001618:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800161a:	f107 0308 	add.w	r3, r7, #8
 800161e:	2200      	movs	r2, #0
 8001620:	601a      	str	r2, [r3, #0]
 8001622:	605a      	str	r2, [r3, #4]
 8001624:	609a      	str	r2, [r3, #8]
 8001626:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001628:	463b      	mov	r3, r7
 800162a:	2200      	movs	r2, #0
 800162c:	601a      	str	r2, [r3, #0]
 800162e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001630:	4b1d      	ldr	r3, [pc, #116]	; (80016a8 <MX_TIM2_Init+0x94>)
 8001632:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001636:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7999;
 8001638:	4b1b      	ldr	r3, [pc, #108]	; (80016a8 <MX_TIM2_Init+0x94>)
 800163a:	f641 723f 	movw	r2, #7999	; 0x1f3f
 800163e:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001640:	4b19      	ldr	r3, [pc, #100]	; (80016a8 <MX_TIM2_Init+0x94>)
 8001642:	2200      	movs	r2, #0
 8001644:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9;
 8001646:	4b18      	ldr	r3, [pc, #96]	; (80016a8 <MX_TIM2_Init+0x94>)
 8001648:	2209      	movs	r2, #9
 800164a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800164c:	4b16      	ldr	r3, [pc, #88]	; (80016a8 <MX_TIM2_Init+0x94>)
 800164e:	2200      	movs	r2, #0
 8001650:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001652:	4b15      	ldr	r3, [pc, #84]	; (80016a8 <MX_TIM2_Init+0x94>)
 8001654:	2200      	movs	r2, #0
 8001656:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001658:	4813      	ldr	r0, [pc, #76]	; (80016a8 <MX_TIM2_Init+0x94>)
 800165a:	f001 f9bd 	bl	80029d8 <HAL_TIM_Base_Init>
 800165e:	4603      	mov	r3, r0
 8001660:	2b00      	cmp	r3, #0
 8001662:	d001      	beq.n	8001668 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 8001664:	f000 f886 	bl	8001774 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001668:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800166c:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800166e:	f107 0308 	add.w	r3, r7, #8
 8001672:	4619      	mov	r1, r3
 8001674:	480c      	ldr	r0, [pc, #48]	; (80016a8 <MX_TIM2_Init+0x94>)
 8001676:	f001 fb3b 	bl	8002cf0 <HAL_TIM_ConfigClockSource>
 800167a:	4603      	mov	r3, r0
 800167c:	2b00      	cmp	r3, #0
 800167e:	d001      	beq.n	8001684 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001680:	f000 f878 	bl	8001774 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001684:	2300      	movs	r3, #0
 8001686:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001688:	2300      	movs	r3, #0
 800168a:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800168c:	463b      	mov	r3, r7
 800168e:	4619      	mov	r1, r3
 8001690:	4805      	ldr	r0, [pc, #20]	; (80016a8 <MX_TIM2_Init+0x94>)
 8001692:	f001 fd13 	bl	80030bc <HAL_TIMEx_MasterConfigSynchronization>
 8001696:	4603      	mov	r3, r0
 8001698:	2b00      	cmp	r3, #0
 800169a:	d001      	beq.n	80016a0 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 800169c:	f000 f86a 	bl	8001774 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80016a0:	bf00      	nop
 80016a2:	3718      	adds	r7, #24
 80016a4:	46bd      	mov	sp, r7
 80016a6:	bd80      	pop	{r7, pc}
 80016a8:	20000110 	.word	0x20000110

080016ac <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80016ac:	b580      	push	{r7, lr}
 80016ae:	b086      	sub	sp, #24
 80016b0:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016b2:	f107 0308 	add.w	r3, r7, #8
 80016b6:	2200      	movs	r2, #0
 80016b8:	601a      	str	r2, [r3, #0]
 80016ba:	605a      	str	r2, [r3, #4]
 80016bc:	609a      	str	r2, [r3, #8]
 80016be:	60da      	str	r2, [r3, #12]

	/* GPIO Ports Clock Enable */
		__HAL_RCC_GPIOA_CLK_ENABLE();
 80016c0:	4b23      	ldr	r3, [pc, #140]	; (8001750 <MX_GPIO_Init+0xa4>)
 80016c2:	699b      	ldr	r3, [r3, #24]
 80016c4:	4a22      	ldr	r2, [pc, #136]	; (8001750 <MX_GPIO_Init+0xa4>)
 80016c6:	f043 0304 	orr.w	r3, r3, #4
 80016ca:	6193      	str	r3, [r2, #24]
 80016cc:	4b20      	ldr	r3, [pc, #128]	; (8001750 <MX_GPIO_Init+0xa4>)
 80016ce:	699b      	ldr	r3, [r3, #24]
 80016d0:	f003 0304 	and.w	r3, r3, #4
 80016d4:	607b      	str	r3, [r7, #4]
 80016d6:	687b      	ldr	r3, [r7, #4]
		__HAL_RCC_GPIOB_CLK_ENABLE();
 80016d8:	4b1d      	ldr	r3, [pc, #116]	; (8001750 <MX_GPIO_Init+0xa4>)
 80016da:	699b      	ldr	r3, [r3, #24]
 80016dc:	4a1c      	ldr	r2, [pc, #112]	; (8001750 <MX_GPIO_Init+0xa4>)
 80016de:	f043 0308 	orr.w	r3, r3, #8
 80016e2:	6193      	str	r3, [r2, #24]
 80016e4:	4b1a      	ldr	r3, [pc, #104]	; (8001750 <MX_GPIO_Init+0xa4>)
 80016e6:	699b      	ldr	r3, [r3, #24]
 80016e8:	f003 0308 	and.w	r3, r3, #8
 80016ec:	603b      	str	r3, [r7, #0]
 80016ee:	683b      	ldr	r3, [r7, #0]

	GPIO_InitStruct.Pin = EN0|EN1|EN2|EN3|
 80016f0:	f640 73de 	movw	r3, #4062	; 0xfde
 80016f4:	60bb      	str	r3, [r7, #8]
			REDA|REDB|YELLOWA|YELLOWB|GREENA|GREENB;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016f6:	2301      	movs	r3, #1
 80016f8:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016fa:	2300      	movs	r3, #0
 80016fc:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016fe:	2302      	movs	r3, #2
 8001700:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001702:	f107 0308 	add.w	r3, r7, #8
 8001706:	4619      	mov	r1, r3
 8001708:	4812      	ldr	r0, [pc, #72]	; (8001754 <MX_GPIO_Init+0xa8>)
 800170a:	f000 fbc7 	bl	8001e9c <HAL_GPIO_Init>

	GPIO_InitStruct.Pin = BUT1|BUT2|BUT3;
 800170e:	f44f 4360 	mov.w	r3, #57344	; 0xe000
 8001712:	60bb      	str	r3, [r7, #8]
	GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001714:	2300      	movs	r3, #0
 8001716:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001718:	2301      	movs	r3, #1
 800171a:	613b      	str	r3, [r7, #16]
	HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800171c:	f107 0308 	add.w	r3, r7, #8
 8001720:	4619      	mov	r1, r3
 8001722:	480c      	ldr	r0, [pc, #48]	; (8001754 <MX_GPIO_Init+0xa8>)
 8001724:	f000 fbba 	bl	8001e9c <HAL_GPIO_Init>

	GPIO_InitStruct.Pin = SEG1_0|SEG1_1|SEG1_2|SEG1_3|SEG1_4|SEG1_5|SEG1_6|
 8001728:	f643 73ff 	movw	r3, #16383	; 0x3fff
 800172c:	60bb      	str	r3, [r7, #8]
			SEG2_0|SEG2_1|SEG2_2|SEG2_3|SEG2_4|SEG2_5|SEG2_6;
	GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800172e:	2301      	movs	r3, #1
 8001730:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001732:	2300      	movs	r3, #0
 8001734:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001736:	2302      	movs	r3, #2
 8001738:	617b      	str	r3, [r7, #20]
	HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800173a:	f107 0308 	add.w	r3, r7, #8
 800173e:	4619      	mov	r1, r3
 8001740:	4805      	ldr	r0, [pc, #20]	; (8001758 <MX_GPIO_Init+0xac>)
 8001742:	f000 fbab 	bl	8001e9c <HAL_GPIO_Init>
}
 8001746:	bf00      	nop
 8001748:	3718      	adds	r7, #24
 800174a:	46bd      	mov	sp, r7
 800174c:	bd80      	pop	{r7, pc}
 800174e:	bf00      	nop
 8001750:	40021000 	.word	0x40021000
 8001754:	40010800 	.word	0x40010800
 8001758:	40010c00 	.word	0x40010c00

0800175c <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800175c:	b580      	push	{r7, lr}
 800175e:	b082      	sub	sp, #8
 8001760:	af00      	add	r7, sp, #0
 8001762:	6078      	str	r0, [r7, #4]
	timerRun();
 8001764:	f000 f8a8 	bl	80018b8 <timerRun>
	getKeyInput();
 8001768:	f7fe fd1a 	bl	80001a0 <getKeyInput>
}
 800176c:	bf00      	nop
 800176e:	3708      	adds	r7, #8
 8001770:	46bd      	mov	sp, r7
 8001772:	bd80      	pop	{r7, pc}

08001774 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001774:	b480      	push	{r7}
 8001776:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001778:	b672      	cpsid	i
}
 800177a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800177c:	e7fe      	b.n	800177c <Error_Handler+0x8>
	...

08001780 <setTimer1>:
int timer_counter9 = 0;

int timer_flag10 = 0;
int timer_counter10 = 0;

void setTimer1(int duration){
 8001780:	b480      	push	{r7}
 8001782:	b083      	sub	sp, #12
 8001784:	af00      	add	r7, sp, #0
 8001786:	6078      	str	r0, [r7, #4]
	timer_flag1 = 0;
 8001788:	4b07      	ldr	r3, [pc, #28]	; (80017a8 <setTimer1+0x28>)
 800178a:	2200      	movs	r2, #0
 800178c:	601a      	str	r2, [r3, #0]
	timer_counter1 = duration / TICK;
 800178e:	4b07      	ldr	r3, [pc, #28]	; (80017ac <setTimer1+0x2c>)
 8001790:	681b      	ldr	r3, [r3, #0]
 8001792:	687a      	ldr	r2, [r7, #4]
 8001794:	fb92 f3f3 	sdiv	r3, r2, r3
 8001798:	4a05      	ldr	r2, [pc, #20]	; (80017b0 <setTimer1+0x30>)
 800179a:	6013      	str	r3, [r2, #0]
}
 800179c:	bf00      	nop
 800179e:	370c      	adds	r7, #12
 80017a0:	46bd      	mov	sp, r7
 80017a2:	bc80      	pop	{r7}
 80017a4:	4770      	bx	lr
 80017a6:	bf00      	nop
 80017a8:	200000c0 	.word	0x200000c0
 80017ac:	2000005c 	.word	0x2000005c
 80017b0:	200000c4 	.word	0x200000c4

080017b4 <setTimer2>:

void setTimer2(int duration){
 80017b4:	b480      	push	{r7}
 80017b6:	b083      	sub	sp, #12
 80017b8:	af00      	add	r7, sp, #0
 80017ba:	6078      	str	r0, [r7, #4]
	timer_flag2 = 0;
 80017bc:	4b07      	ldr	r3, [pc, #28]	; (80017dc <setTimer2+0x28>)
 80017be:	2200      	movs	r2, #0
 80017c0:	601a      	str	r2, [r3, #0]
	timer_counter2 = duration / TICK;
 80017c2:	4b07      	ldr	r3, [pc, #28]	; (80017e0 <setTimer2+0x2c>)
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	687a      	ldr	r2, [r7, #4]
 80017c8:	fb92 f3f3 	sdiv	r3, r2, r3
 80017cc:	4a05      	ldr	r2, [pc, #20]	; (80017e4 <setTimer2+0x30>)
 80017ce:	6013      	str	r3, [r2, #0]
}
 80017d0:	bf00      	nop
 80017d2:	370c      	adds	r7, #12
 80017d4:	46bd      	mov	sp, r7
 80017d6:	bc80      	pop	{r7}
 80017d8:	4770      	bx	lr
 80017da:	bf00      	nop
 80017dc:	200000c8 	.word	0x200000c8
 80017e0:	2000005c 	.word	0x2000005c
 80017e4:	200000cc 	.word	0x200000cc

080017e8 <setTimer3>:

void setTimer3(int duration){
 80017e8:	b480      	push	{r7}
 80017ea:	b083      	sub	sp, #12
 80017ec:	af00      	add	r7, sp, #0
 80017ee:	6078      	str	r0, [r7, #4]
	timer_flag3 = 0;
 80017f0:	4b07      	ldr	r3, [pc, #28]	; (8001810 <setTimer3+0x28>)
 80017f2:	2200      	movs	r2, #0
 80017f4:	601a      	str	r2, [r3, #0]
	timer_counter3 = duration / TICK;
 80017f6:	4b07      	ldr	r3, [pc, #28]	; (8001814 <setTimer3+0x2c>)
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	687a      	ldr	r2, [r7, #4]
 80017fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8001800:	4a05      	ldr	r2, [pc, #20]	; (8001818 <setTimer3+0x30>)
 8001802:	6013      	str	r3, [r2, #0]
}
 8001804:	bf00      	nop
 8001806:	370c      	adds	r7, #12
 8001808:	46bd      	mov	sp, r7
 800180a:	bc80      	pop	{r7}
 800180c:	4770      	bx	lr
 800180e:	bf00      	nop
 8001810:	200000d0 	.word	0x200000d0
 8001814:	2000005c 	.word	0x2000005c
 8001818:	200000d4 	.word	0x200000d4

0800181c <setTimer4>:

void setTimer4(int duration){
 800181c:	b480      	push	{r7}
 800181e:	b083      	sub	sp, #12
 8001820:	af00      	add	r7, sp, #0
 8001822:	6078      	str	r0, [r7, #4]
	timer_flag4 = 0;
 8001824:	4b07      	ldr	r3, [pc, #28]	; (8001844 <setTimer4+0x28>)
 8001826:	2200      	movs	r2, #0
 8001828:	601a      	str	r2, [r3, #0]
	timer_counter4 = duration / TICK;
 800182a:	4b07      	ldr	r3, [pc, #28]	; (8001848 <setTimer4+0x2c>)
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	687a      	ldr	r2, [r7, #4]
 8001830:	fb92 f3f3 	sdiv	r3, r2, r3
 8001834:	4a05      	ldr	r2, [pc, #20]	; (800184c <setTimer4+0x30>)
 8001836:	6013      	str	r3, [r2, #0]
}
 8001838:	bf00      	nop
 800183a:	370c      	adds	r7, #12
 800183c:	46bd      	mov	sp, r7
 800183e:	bc80      	pop	{r7}
 8001840:	4770      	bx	lr
 8001842:	bf00      	nop
 8001844:	200000d8 	.word	0x200000d8
 8001848:	2000005c 	.word	0x2000005c
 800184c:	200000dc 	.word	0x200000dc

08001850 <setTimer6>:
void setTimer5(int duration){
	timer_flag5 = 0;
	timer_counter5 = duration / TICK;
}

void setTimer6(int duration){
 8001850:	b480      	push	{r7}
 8001852:	b083      	sub	sp, #12
 8001854:	af00      	add	r7, sp, #0
 8001856:	6078      	str	r0, [r7, #4]
	timer_flag6 = 0;
 8001858:	4b07      	ldr	r3, [pc, #28]	; (8001878 <setTimer6+0x28>)
 800185a:	2200      	movs	r2, #0
 800185c:	601a      	str	r2, [r3, #0]
	timer_counter6 = duration / TICK;
 800185e:	4b07      	ldr	r3, [pc, #28]	; (800187c <setTimer6+0x2c>)
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	687a      	ldr	r2, [r7, #4]
 8001864:	fb92 f3f3 	sdiv	r3, r2, r3
 8001868:	4a05      	ldr	r2, [pc, #20]	; (8001880 <setTimer6+0x30>)
 800186a:	6013      	str	r3, [r2, #0]
}
 800186c:	bf00      	nop
 800186e:	370c      	adds	r7, #12
 8001870:	46bd      	mov	sp, r7
 8001872:	bc80      	pop	{r7}
 8001874:	4770      	bx	lr
 8001876:	bf00      	nop
 8001878:	200000e8 	.word	0x200000e8
 800187c:	2000005c 	.word	0x2000005c
 8001880:	200000ec 	.word	0x200000ec

08001884 <setTimer10>:
void setTimer9(int duration){
	timer_flag9 = 0;
	timer_counter9 = duration / TICK;
}

void setTimer10(int duration){
 8001884:	b480      	push	{r7}
 8001886:	b083      	sub	sp, #12
 8001888:	af00      	add	r7, sp, #0
 800188a:	6078      	str	r0, [r7, #4]
	timer_flag10 = 0;
 800188c:	4b07      	ldr	r3, [pc, #28]	; (80018ac <setTimer10+0x28>)
 800188e:	2200      	movs	r2, #0
 8001890:	601a      	str	r2, [r3, #0]
	timer_counter10 = duration / TICK;
 8001892:	4b07      	ldr	r3, [pc, #28]	; (80018b0 <setTimer10+0x2c>)
 8001894:	681b      	ldr	r3, [r3, #0]
 8001896:	687a      	ldr	r2, [r7, #4]
 8001898:	fb92 f3f3 	sdiv	r3, r2, r3
 800189c:	4a05      	ldr	r2, [pc, #20]	; (80018b4 <setTimer10+0x30>)
 800189e:	6013      	str	r3, [r2, #0]
}
 80018a0:	bf00      	nop
 80018a2:	370c      	adds	r7, #12
 80018a4:	46bd      	mov	sp, r7
 80018a6:	bc80      	pop	{r7}
 80018a8:	4770      	bx	lr
 80018aa:	bf00      	nop
 80018ac:	20000108 	.word	0x20000108
 80018b0:	2000005c 	.word	0x2000005c
 80018b4:	2000010c 	.word	0x2000010c

080018b8 <timerRun>:

void timerRun(){
 80018b8:	b480      	push	{r7}
 80018ba:	af00      	add	r7, sp, #0
		if(timer_counter1 > 0){
 80018bc:	4b51      	ldr	r3, [pc, #324]	; (8001a04 <timerRun+0x14c>)
 80018be:	681b      	ldr	r3, [r3, #0]
 80018c0:	2b00      	cmp	r3, #0
 80018c2:	dd0b      	ble.n	80018dc <timerRun+0x24>
			timer_counter1--;
 80018c4:	4b4f      	ldr	r3, [pc, #316]	; (8001a04 <timerRun+0x14c>)
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	3b01      	subs	r3, #1
 80018ca:	4a4e      	ldr	r2, [pc, #312]	; (8001a04 <timerRun+0x14c>)
 80018cc:	6013      	str	r3, [r2, #0]
		if(timer_counter1 <= 0){
 80018ce:	4b4d      	ldr	r3, [pc, #308]	; (8001a04 <timerRun+0x14c>)
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	2b00      	cmp	r3, #0
 80018d4:	dc02      	bgt.n	80018dc <timerRun+0x24>
			timer_flag1 = 1;
 80018d6:	4b4c      	ldr	r3, [pc, #304]	; (8001a08 <timerRun+0x150>)
 80018d8:	2201      	movs	r2, #1
 80018da:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter2 > 0){
 80018dc:	4b4b      	ldr	r3, [pc, #300]	; (8001a0c <timerRun+0x154>)
 80018de:	681b      	ldr	r3, [r3, #0]
 80018e0:	2b00      	cmp	r3, #0
 80018e2:	dd0b      	ble.n	80018fc <timerRun+0x44>
			timer_counter2--;
 80018e4:	4b49      	ldr	r3, [pc, #292]	; (8001a0c <timerRun+0x154>)
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	3b01      	subs	r3, #1
 80018ea:	4a48      	ldr	r2, [pc, #288]	; (8001a0c <timerRun+0x154>)
 80018ec:	6013      	str	r3, [r2, #0]
		if(timer_counter2 <= 0){
 80018ee:	4b47      	ldr	r3, [pc, #284]	; (8001a0c <timerRun+0x154>)
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	dc02      	bgt.n	80018fc <timerRun+0x44>
			timer_flag2 = 1;
 80018f6:	4b46      	ldr	r3, [pc, #280]	; (8001a10 <timerRun+0x158>)
 80018f8:	2201      	movs	r2, #1
 80018fa:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter3 > 0){
 80018fc:	4b45      	ldr	r3, [pc, #276]	; (8001a14 <timerRun+0x15c>)
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	2b00      	cmp	r3, #0
 8001902:	dd0b      	ble.n	800191c <timerRun+0x64>
			timer_counter3--;
 8001904:	4b43      	ldr	r3, [pc, #268]	; (8001a14 <timerRun+0x15c>)
 8001906:	681b      	ldr	r3, [r3, #0]
 8001908:	3b01      	subs	r3, #1
 800190a:	4a42      	ldr	r2, [pc, #264]	; (8001a14 <timerRun+0x15c>)
 800190c:	6013      	str	r3, [r2, #0]
		if(timer_counter3 <= 0){
 800190e:	4b41      	ldr	r3, [pc, #260]	; (8001a14 <timerRun+0x15c>)
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	2b00      	cmp	r3, #0
 8001914:	dc02      	bgt.n	800191c <timerRun+0x64>
			timer_flag3 = 1;
 8001916:	4b40      	ldr	r3, [pc, #256]	; (8001a18 <timerRun+0x160>)
 8001918:	2201      	movs	r2, #1
 800191a:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter4 > 0){
 800191c:	4b3f      	ldr	r3, [pc, #252]	; (8001a1c <timerRun+0x164>)
 800191e:	681b      	ldr	r3, [r3, #0]
 8001920:	2b00      	cmp	r3, #0
 8001922:	dd0b      	ble.n	800193c <timerRun+0x84>
			timer_counter4--;
 8001924:	4b3d      	ldr	r3, [pc, #244]	; (8001a1c <timerRun+0x164>)
 8001926:	681b      	ldr	r3, [r3, #0]
 8001928:	3b01      	subs	r3, #1
 800192a:	4a3c      	ldr	r2, [pc, #240]	; (8001a1c <timerRun+0x164>)
 800192c:	6013      	str	r3, [r2, #0]
		if(timer_counter4 <= 0){
 800192e:	4b3b      	ldr	r3, [pc, #236]	; (8001a1c <timerRun+0x164>)
 8001930:	681b      	ldr	r3, [r3, #0]
 8001932:	2b00      	cmp	r3, #0
 8001934:	dc02      	bgt.n	800193c <timerRun+0x84>
			timer_flag4 = 1;
 8001936:	4b3a      	ldr	r3, [pc, #232]	; (8001a20 <timerRun+0x168>)
 8001938:	2201      	movs	r2, #1
 800193a:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter5 > 0){
 800193c:	4b39      	ldr	r3, [pc, #228]	; (8001a24 <timerRun+0x16c>)
 800193e:	681b      	ldr	r3, [r3, #0]
 8001940:	2b00      	cmp	r3, #0
 8001942:	dd0b      	ble.n	800195c <timerRun+0xa4>
			timer_counter5--;
 8001944:	4b37      	ldr	r3, [pc, #220]	; (8001a24 <timerRun+0x16c>)
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	3b01      	subs	r3, #1
 800194a:	4a36      	ldr	r2, [pc, #216]	; (8001a24 <timerRun+0x16c>)
 800194c:	6013      	str	r3, [r2, #0]
		if(timer_counter5 <= 0){
 800194e:	4b35      	ldr	r3, [pc, #212]	; (8001a24 <timerRun+0x16c>)
 8001950:	681b      	ldr	r3, [r3, #0]
 8001952:	2b00      	cmp	r3, #0
 8001954:	dc02      	bgt.n	800195c <timerRun+0xa4>
			timer_flag5 = 1;
 8001956:	4b34      	ldr	r3, [pc, #208]	; (8001a28 <timerRun+0x170>)
 8001958:	2201      	movs	r2, #1
 800195a:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter6 > 0){
 800195c:	4b33      	ldr	r3, [pc, #204]	; (8001a2c <timerRun+0x174>)
 800195e:	681b      	ldr	r3, [r3, #0]
 8001960:	2b00      	cmp	r3, #0
 8001962:	dd0b      	ble.n	800197c <timerRun+0xc4>
			timer_counter6--;
 8001964:	4b31      	ldr	r3, [pc, #196]	; (8001a2c <timerRun+0x174>)
 8001966:	681b      	ldr	r3, [r3, #0]
 8001968:	3b01      	subs	r3, #1
 800196a:	4a30      	ldr	r2, [pc, #192]	; (8001a2c <timerRun+0x174>)
 800196c:	6013      	str	r3, [r2, #0]
		if(timer_counter6 <= 0){
 800196e:	4b2f      	ldr	r3, [pc, #188]	; (8001a2c <timerRun+0x174>)
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	2b00      	cmp	r3, #0
 8001974:	dc02      	bgt.n	800197c <timerRun+0xc4>
			timer_flag6 = 1;
 8001976:	4b2e      	ldr	r3, [pc, #184]	; (8001a30 <timerRun+0x178>)
 8001978:	2201      	movs	r2, #1
 800197a:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter7 > 0){
 800197c:	4b2d      	ldr	r3, [pc, #180]	; (8001a34 <timerRun+0x17c>)
 800197e:	681b      	ldr	r3, [r3, #0]
 8001980:	2b00      	cmp	r3, #0
 8001982:	dd0b      	ble.n	800199c <timerRun+0xe4>
			timer_counter7--;
 8001984:	4b2b      	ldr	r3, [pc, #172]	; (8001a34 <timerRun+0x17c>)
 8001986:	681b      	ldr	r3, [r3, #0]
 8001988:	3b01      	subs	r3, #1
 800198a:	4a2a      	ldr	r2, [pc, #168]	; (8001a34 <timerRun+0x17c>)
 800198c:	6013      	str	r3, [r2, #0]
		if(timer_counter7 <= 0){
 800198e:	4b29      	ldr	r3, [pc, #164]	; (8001a34 <timerRun+0x17c>)
 8001990:	681b      	ldr	r3, [r3, #0]
 8001992:	2b00      	cmp	r3, #0
 8001994:	dc02      	bgt.n	800199c <timerRun+0xe4>
			timer_flag7 = 1;
 8001996:	4b28      	ldr	r3, [pc, #160]	; (8001a38 <timerRun+0x180>)
 8001998:	2201      	movs	r2, #1
 800199a:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter8 > 0){
 800199c:	4b27      	ldr	r3, [pc, #156]	; (8001a3c <timerRun+0x184>)
 800199e:	681b      	ldr	r3, [r3, #0]
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	dd0b      	ble.n	80019bc <timerRun+0x104>
			timer_counter8--;
 80019a4:	4b25      	ldr	r3, [pc, #148]	; (8001a3c <timerRun+0x184>)
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	3b01      	subs	r3, #1
 80019aa:	4a24      	ldr	r2, [pc, #144]	; (8001a3c <timerRun+0x184>)
 80019ac:	6013      	str	r3, [r2, #0]
		if(timer_counter8 <= 0){
 80019ae:	4b23      	ldr	r3, [pc, #140]	; (8001a3c <timerRun+0x184>)
 80019b0:	681b      	ldr	r3, [r3, #0]
 80019b2:	2b00      	cmp	r3, #0
 80019b4:	dc02      	bgt.n	80019bc <timerRun+0x104>
			timer_flag8 = 1;
 80019b6:	4b22      	ldr	r3, [pc, #136]	; (8001a40 <timerRun+0x188>)
 80019b8:	2201      	movs	r2, #1
 80019ba:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter9 > 0){
 80019bc:	4b21      	ldr	r3, [pc, #132]	; (8001a44 <timerRun+0x18c>)
 80019be:	681b      	ldr	r3, [r3, #0]
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	dd0b      	ble.n	80019dc <timerRun+0x124>
			timer_counter9--;
 80019c4:	4b1f      	ldr	r3, [pc, #124]	; (8001a44 <timerRun+0x18c>)
 80019c6:	681b      	ldr	r3, [r3, #0]
 80019c8:	3b01      	subs	r3, #1
 80019ca:	4a1e      	ldr	r2, [pc, #120]	; (8001a44 <timerRun+0x18c>)
 80019cc:	6013      	str	r3, [r2, #0]
		if(timer_counter9 <= 0){
 80019ce:	4b1d      	ldr	r3, [pc, #116]	; (8001a44 <timerRun+0x18c>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	2b00      	cmp	r3, #0
 80019d4:	dc02      	bgt.n	80019dc <timerRun+0x124>
			timer_flag9 = 1;
 80019d6:	4b1c      	ldr	r3, [pc, #112]	; (8001a48 <timerRun+0x190>)
 80019d8:	2201      	movs	r2, #1
 80019da:	601a      	str	r2, [r3, #0]
			}
		}

		if(timer_counter10 > 0){
 80019dc:	4b1b      	ldr	r3, [pc, #108]	; (8001a4c <timerRun+0x194>)
 80019de:	681b      	ldr	r3, [r3, #0]
 80019e0:	2b00      	cmp	r3, #0
 80019e2:	dd0b      	ble.n	80019fc <timerRun+0x144>
			timer_counter10--;
 80019e4:	4b19      	ldr	r3, [pc, #100]	; (8001a4c <timerRun+0x194>)
 80019e6:	681b      	ldr	r3, [r3, #0]
 80019e8:	3b01      	subs	r3, #1
 80019ea:	4a18      	ldr	r2, [pc, #96]	; (8001a4c <timerRun+0x194>)
 80019ec:	6013      	str	r3, [r2, #0]
		if(timer_counter10 <= 0){
 80019ee:	4b17      	ldr	r3, [pc, #92]	; (8001a4c <timerRun+0x194>)
 80019f0:	681b      	ldr	r3, [r3, #0]
 80019f2:	2b00      	cmp	r3, #0
 80019f4:	dc02      	bgt.n	80019fc <timerRun+0x144>
			timer_flag10 = 1;
 80019f6:	4b16      	ldr	r3, [pc, #88]	; (8001a50 <timerRun+0x198>)
 80019f8:	2201      	movs	r2, #1
 80019fa:	601a      	str	r2, [r3, #0]
			}
		}
}
 80019fc:	bf00      	nop
 80019fe:	46bd      	mov	sp, r7
 8001a00:	bc80      	pop	{r7}
 8001a02:	4770      	bx	lr
 8001a04:	200000c4 	.word	0x200000c4
 8001a08:	200000c0 	.word	0x200000c0
 8001a0c:	200000cc 	.word	0x200000cc
 8001a10:	200000c8 	.word	0x200000c8
 8001a14:	200000d4 	.word	0x200000d4
 8001a18:	200000d0 	.word	0x200000d0
 8001a1c:	200000dc 	.word	0x200000dc
 8001a20:	200000d8 	.word	0x200000d8
 8001a24:	200000e4 	.word	0x200000e4
 8001a28:	200000e0 	.word	0x200000e0
 8001a2c:	200000ec 	.word	0x200000ec
 8001a30:	200000e8 	.word	0x200000e8
 8001a34:	200000f4 	.word	0x200000f4
 8001a38:	200000f0 	.word	0x200000f0
 8001a3c:	200000fc 	.word	0x200000fc
 8001a40:	200000f8 	.word	0x200000f8
 8001a44:	20000104 	.word	0x20000104
 8001a48:	20000100 	.word	0x20000100
 8001a4c:	2000010c 	.word	0x2000010c
 8001a50:	20000108 	.word	0x20000108

08001a54 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001a54:	b480      	push	{r7}
 8001a56:	b085      	sub	sp, #20
 8001a58:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001a5a:	4b15      	ldr	r3, [pc, #84]	; (8001ab0 <HAL_MspInit+0x5c>)
 8001a5c:	699b      	ldr	r3, [r3, #24]
 8001a5e:	4a14      	ldr	r2, [pc, #80]	; (8001ab0 <HAL_MspInit+0x5c>)
 8001a60:	f043 0301 	orr.w	r3, r3, #1
 8001a64:	6193      	str	r3, [r2, #24]
 8001a66:	4b12      	ldr	r3, [pc, #72]	; (8001ab0 <HAL_MspInit+0x5c>)
 8001a68:	699b      	ldr	r3, [r3, #24]
 8001a6a:	f003 0301 	and.w	r3, r3, #1
 8001a6e:	60bb      	str	r3, [r7, #8]
 8001a70:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a72:	4b0f      	ldr	r3, [pc, #60]	; (8001ab0 <HAL_MspInit+0x5c>)
 8001a74:	69db      	ldr	r3, [r3, #28]
 8001a76:	4a0e      	ldr	r2, [pc, #56]	; (8001ab0 <HAL_MspInit+0x5c>)
 8001a78:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001a7c:	61d3      	str	r3, [r2, #28]
 8001a7e:	4b0c      	ldr	r3, [pc, #48]	; (8001ab0 <HAL_MspInit+0x5c>)
 8001a80:	69db      	ldr	r3, [r3, #28]
 8001a82:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a86:	607b      	str	r3, [r7, #4]
 8001a88:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** DISABLE: JTAG-DP Disabled and SW-DP Disabled
  */
  __HAL_AFIO_REMAP_SWJ_DISABLE();
 8001a8a:	4b0a      	ldr	r3, [pc, #40]	; (8001ab4 <HAL_MspInit+0x60>)
 8001a8c:	685b      	ldr	r3, [r3, #4]
 8001a8e:	60fb      	str	r3, [r7, #12]
 8001a90:	68fb      	ldr	r3, [r7, #12]
 8001a92:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001a96:	60fb      	str	r3, [r7, #12]
 8001a98:	68fb      	ldr	r3, [r7, #12]
 8001a9a:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8001a9e:	60fb      	str	r3, [r7, #12]
 8001aa0:	4a04      	ldr	r2, [pc, #16]	; (8001ab4 <HAL_MspInit+0x60>)
 8001aa2:	68fb      	ldr	r3, [r7, #12]
 8001aa4:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001aa6:	bf00      	nop
 8001aa8:	3714      	adds	r7, #20
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	bc80      	pop	{r7}
 8001aae:	4770      	bx	lr
 8001ab0:	40021000 	.word	0x40021000
 8001ab4:	40010000 	.word	0x40010000

08001ab8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001ab8:	b580      	push	{r7, lr}
 8001aba:	b084      	sub	sp, #16
 8001abc:	af00      	add	r7, sp, #0
 8001abe:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001ac8:	d113      	bne.n	8001af2 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001aca:	4b0c      	ldr	r3, [pc, #48]	; (8001afc <HAL_TIM_Base_MspInit+0x44>)
 8001acc:	69db      	ldr	r3, [r3, #28]
 8001ace:	4a0b      	ldr	r2, [pc, #44]	; (8001afc <HAL_TIM_Base_MspInit+0x44>)
 8001ad0:	f043 0301 	orr.w	r3, r3, #1
 8001ad4:	61d3      	str	r3, [r2, #28]
 8001ad6:	4b09      	ldr	r3, [pc, #36]	; (8001afc <HAL_TIM_Base_MspInit+0x44>)
 8001ad8:	69db      	ldr	r3, [r3, #28]
 8001ada:	f003 0301 	and.w	r3, r3, #1
 8001ade:	60fb      	str	r3, [r7, #12]
 8001ae0:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	2100      	movs	r1, #0
 8001ae6:	201c      	movs	r0, #28
 8001ae8:	f000 f9a1 	bl	8001e2e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001aec:	201c      	movs	r0, #28
 8001aee:	f000 f9ba 	bl	8001e66 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8001af2:	bf00      	nop
 8001af4:	3710      	adds	r7, #16
 8001af6:	46bd      	mov	sp, r7
 8001af8:	bd80      	pop	{r7, pc}
 8001afa:	bf00      	nop
 8001afc:	40021000 	.word	0x40021000

08001b00 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001b00:	b480      	push	{r7}
 8001b02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001b04:	e7fe      	b.n	8001b04 <NMI_Handler+0x4>

08001b06 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001b06:	b480      	push	{r7}
 8001b08:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001b0a:	e7fe      	b.n	8001b0a <HardFault_Handler+0x4>

08001b0c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001b0c:	b480      	push	{r7}
 8001b0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001b10:	e7fe      	b.n	8001b10 <MemManage_Handler+0x4>

08001b12 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001b12:	b480      	push	{r7}
 8001b14:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001b16:	e7fe      	b.n	8001b16 <BusFault_Handler+0x4>

08001b18 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001b18:	b480      	push	{r7}
 8001b1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001b1c:	e7fe      	b.n	8001b1c <UsageFault_Handler+0x4>

08001b1e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001b1e:	b480      	push	{r7}
 8001b20:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001b22:	bf00      	nop
 8001b24:	46bd      	mov	sp, r7
 8001b26:	bc80      	pop	{r7}
 8001b28:	4770      	bx	lr

08001b2a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001b2a:	b480      	push	{r7}
 8001b2c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001b2e:	bf00      	nop
 8001b30:	46bd      	mov	sp, r7
 8001b32:	bc80      	pop	{r7}
 8001b34:	4770      	bx	lr

08001b36 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001b36:	b480      	push	{r7}
 8001b38:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001b3a:	bf00      	nop
 8001b3c:	46bd      	mov	sp, r7
 8001b3e:	bc80      	pop	{r7}
 8001b40:	4770      	bx	lr

08001b42 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001b42:	b580      	push	{r7, lr}
 8001b44:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001b46:	f000 f87f 	bl	8001c48 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001b4a:	bf00      	nop
 8001b4c:	bd80      	pop	{r7, pc}
	...

08001b50 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001b50:	b580      	push	{r7, lr}
 8001b52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001b54:	4802      	ldr	r0, [pc, #8]	; (8001b60 <TIM2_IRQHandler+0x10>)
 8001b56:	f000 ffdb 	bl	8002b10 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001b5a:	bf00      	nop
 8001b5c:	bd80      	pop	{r7, pc}
 8001b5e:	bf00      	nop
 8001b60:	20000110 	.word	0x20000110

08001b64 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001b64:	b480      	push	{r7}
 8001b66:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001b68:	bf00      	nop
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	bc80      	pop	{r7}
 8001b6e:	4770      	bx	lr

08001b70 <Reset_Handler>:
 8001b70:	f7ff fff8 	bl	8001b64 <SystemInit>
 8001b74:	480b      	ldr	r0, [pc, #44]	; (8001ba4 <LoopFillZerobss+0xe>)
 8001b76:	490c      	ldr	r1, [pc, #48]	; (8001ba8 <LoopFillZerobss+0x12>)
 8001b78:	4a0c      	ldr	r2, [pc, #48]	; (8001bac <LoopFillZerobss+0x16>)
 8001b7a:	2300      	movs	r3, #0
 8001b7c:	e002      	b.n	8001b84 <LoopCopyDataInit>

08001b7e <CopyDataInit>:
 8001b7e:	58d4      	ldr	r4, [r2, r3]
 8001b80:	50c4      	str	r4, [r0, r3]
 8001b82:	3304      	adds	r3, #4

08001b84 <LoopCopyDataInit>:
 8001b84:	18c4      	adds	r4, r0, r3
 8001b86:	428c      	cmp	r4, r1
 8001b88:	d3f9      	bcc.n	8001b7e <CopyDataInit>
 8001b8a:	4a09      	ldr	r2, [pc, #36]	; (8001bb0 <LoopFillZerobss+0x1a>)
 8001b8c:	4c09      	ldr	r4, [pc, #36]	; (8001bb4 <LoopFillZerobss+0x1e>)
 8001b8e:	2300      	movs	r3, #0
 8001b90:	e001      	b.n	8001b96 <LoopFillZerobss>

08001b92 <FillZerobss>:
 8001b92:	6013      	str	r3, [r2, #0]
 8001b94:	3204      	adds	r2, #4

08001b96 <LoopFillZerobss>:
 8001b96:	42a2      	cmp	r2, r4
 8001b98:	d3fb      	bcc.n	8001b92 <FillZerobss>
 8001b9a:	f001 faf9 	bl	8003190 <__libc_init_array>
 8001b9e:	f7ff fce9 	bl	8001574 <main>
 8001ba2:	4770      	bx	lr
 8001ba4:	20000000 	.word	0x20000000
 8001ba8:	2000006c 	.word	0x2000006c
 8001bac:	0800322c 	.word	0x0800322c
 8001bb0:	2000006c 	.word	0x2000006c
 8001bb4:	2000015c 	.word	0x2000015c

08001bb8 <ADC1_2_IRQHandler>:
 8001bb8:	e7fe      	b.n	8001bb8 <ADC1_2_IRQHandler>
	...

08001bbc <HAL_Init>:
 8001bbc:	b580      	push	{r7, lr}
 8001bbe:	af00      	add	r7, sp, #0
 8001bc0:	4b08      	ldr	r3, [pc, #32]	; (8001be4 <HAL_Init+0x28>)
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	4a07      	ldr	r2, [pc, #28]	; (8001be4 <HAL_Init+0x28>)
 8001bc6:	f043 0310 	orr.w	r3, r3, #16
 8001bca:	6013      	str	r3, [r2, #0]
 8001bcc:	2003      	movs	r0, #3
 8001bce:	f000 f923 	bl	8001e18 <HAL_NVIC_SetPriorityGrouping>
 8001bd2:	200f      	movs	r0, #15
 8001bd4:	f000 f808 	bl	8001be8 <HAL_InitTick>
 8001bd8:	f7ff ff3c 	bl	8001a54 <HAL_MspInit>
 8001bdc:	2300      	movs	r3, #0
 8001bde:	4618      	mov	r0, r3
 8001be0:	bd80      	pop	{r7, pc}
 8001be2:	bf00      	nop
 8001be4:	40022000 	.word	0x40022000

08001be8 <HAL_InitTick>:
 8001be8:	b580      	push	{r7, lr}
 8001bea:	b082      	sub	sp, #8
 8001bec:	af00      	add	r7, sp, #0
 8001bee:	6078      	str	r0, [r7, #4]
 8001bf0:	4b12      	ldr	r3, [pc, #72]	; (8001c3c <HAL_InitTick+0x54>)
 8001bf2:	681a      	ldr	r2, [r3, #0]
 8001bf4:	4b12      	ldr	r3, [pc, #72]	; (8001c40 <HAL_InitTick+0x58>)
 8001bf6:	781b      	ldrb	r3, [r3, #0]
 8001bf8:	4619      	mov	r1, r3
 8001bfa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001bfe:	fbb3 f3f1 	udiv	r3, r3, r1
 8001c02:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c06:	4618      	mov	r0, r3
 8001c08:	f000 f93b 	bl	8001e82 <HAL_SYSTICK_Config>
 8001c0c:	4603      	mov	r3, r0
 8001c0e:	2b00      	cmp	r3, #0
 8001c10:	d001      	beq.n	8001c16 <HAL_InitTick+0x2e>
 8001c12:	2301      	movs	r3, #1
 8001c14:	e00e      	b.n	8001c34 <HAL_InitTick+0x4c>
 8001c16:	687b      	ldr	r3, [r7, #4]
 8001c18:	2b0f      	cmp	r3, #15
 8001c1a:	d80a      	bhi.n	8001c32 <HAL_InitTick+0x4a>
 8001c1c:	2200      	movs	r2, #0
 8001c1e:	6879      	ldr	r1, [r7, #4]
 8001c20:	f04f 30ff 	mov.w	r0, #4294967295
 8001c24:	f000 f903 	bl	8001e2e <HAL_NVIC_SetPriority>
 8001c28:	4a06      	ldr	r2, [pc, #24]	; (8001c44 <HAL_InitTick+0x5c>)
 8001c2a:	687b      	ldr	r3, [r7, #4]
 8001c2c:	6013      	str	r3, [r2, #0]
 8001c2e:	2300      	movs	r3, #0
 8001c30:	e000      	b.n	8001c34 <HAL_InitTick+0x4c>
 8001c32:	2301      	movs	r3, #1
 8001c34:	4618      	mov	r0, r3
 8001c36:	3708      	adds	r7, #8
 8001c38:	46bd      	mov	sp, r7
 8001c3a:	bd80      	pop	{r7, pc}
 8001c3c:	20000060 	.word	0x20000060
 8001c40:	20000068 	.word	0x20000068
 8001c44:	20000064 	.word	0x20000064

08001c48 <HAL_IncTick>:
 8001c48:	b480      	push	{r7}
 8001c4a:	af00      	add	r7, sp, #0
 8001c4c:	4b05      	ldr	r3, [pc, #20]	; (8001c64 <HAL_IncTick+0x1c>)
 8001c4e:	781b      	ldrb	r3, [r3, #0]
 8001c50:	461a      	mov	r2, r3
 8001c52:	4b05      	ldr	r3, [pc, #20]	; (8001c68 <HAL_IncTick+0x20>)
 8001c54:	681b      	ldr	r3, [r3, #0]
 8001c56:	4413      	add	r3, r2
 8001c58:	4a03      	ldr	r2, [pc, #12]	; (8001c68 <HAL_IncTick+0x20>)
 8001c5a:	6013      	str	r3, [r2, #0]
 8001c5c:	bf00      	nop
 8001c5e:	46bd      	mov	sp, r7
 8001c60:	bc80      	pop	{r7}
 8001c62:	4770      	bx	lr
 8001c64:	20000068 	.word	0x20000068
 8001c68:	20000158 	.word	0x20000158

08001c6c <HAL_GetTick>:
 8001c6c:	b480      	push	{r7}
 8001c6e:	af00      	add	r7, sp, #0
 8001c70:	4b02      	ldr	r3, [pc, #8]	; (8001c7c <HAL_GetTick+0x10>)
 8001c72:	681b      	ldr	r3, [r3, #0]
 8001c74:	4618      	mov	r0, r3
 8001c76:	46bd      	mov	sp, r7
 8001c78:	bc80      	pop	{r7}
 8001c7a:	4770      	bx	lr
 8001c7c:	20000158 	.word	0x20000158

08001c80 <__NVIC_SetPriorityGrouping>:
 8001c80:	b480      	push	{r7}
 8001c82:	b085      	sub	sp, #20
 8001c84:	af00      	add	r7, sp, #0
 8001c86:	6078      	str	r0, [r7, #4]
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	f003 0307 	and.w	r3, r3, #7
 8001c8e:	60fb      	str	r3, [r7, #12]
 8001c90:	4b0c      	ldr	r3, [pc, #48]	; (8001cc4 <__NVIC_SetPriorityGrouping+0x44>)
 8001c92:	68db      	ldr	r3, [r3, #12]
 8001c94:	60bb      	str	r3, [r7, #8]
 8001c96:	68ba      	ldr	r2, [r7, #8]
 8001c98:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001c9c:	4013      	ands	r3, r2
 8001c9e:	60bb      	str	r3, [r7, #8]
 8001ca0:	68fb      	ldr	r3, [r7, #12]
 8001ca2:	021a      	lsls	r2, r3, #8
 8001ca4:	68bb      	ldr	r3, [r7, #8]
 8001ca6:	4313      	orrs	r3, r2
 8001ca8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001cac:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001cb0:	60bb      	str	r3, [r7, #8]
 8001cb2:	4a04      	ldr	r2, [pc, #16]	; (8001cc4 <__NVIC_SetPriorityGrouping+0x44>)
 8001cb4:	68bb      	ldr	r3, [r7, #8]
 8001cb6:	60d3      	str	r3, [r2, #12]
 8001cb8:	bf00      	nop
 8001cba:	3714      	adds	r7, #20
 8001cbc:	46bd      	mov	sp, r7
 8001cbe:	bc80      	pop	{r7}
 8001cc0:	4770      	bx	lr
 8001cc2:	bf00      	nop
 8001cc4:	e000ed00 	.word	0xe000ed00

08001cc8 <__NVIC_GetPriorityGrouping>:
 8001cc8:	b480      	push	{r7}
 8001cca:	af00      	add	r7, sp, #0
 8001ccc:	4b04      	ldr	r3, [pc, #16]	; (8001ce0 <__NVIC_GetPriorityGrouping+0x18>)
 8001cce:	68db      	ldr	r3, [r3, #12]
 8001cd0:	0a1b      	lsrs	r3, r3, #8
 8001cd2:	f003 0307 	and.w	r3, r3, #7
 8001cd6:	4618      	mov	r0, r3
 8001cd8:	46bd      	mov	sp, r7
 8001cda:	bc80      	pop	{r7}
 8001cdc:	4770      	bx	lr
 8001cde:	bf00      	nop
 8001ce0:	e000ed00 	.word	0xe000ed00

08001ce4 <__NVIC_EnableIRQ>:
 8001ce4:	b480      	push	{r7}
 8001ce6:	b083      	sub	sp, #12
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	4603      	mov	r3, r0
 8001cec:	71fb      	strb	r3, [r7, #7]
 8001cee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001cf2:	2b00      	cmp	r3, #0
 8001cf4:	db0b      	blt.n	8001d0e <__NVIC_EnableIRQ+0x2a>
 8001cf6:	79fb      	ldrb	r3, [r7, #7]
 8001cf8:	f003 021f 	and.w	r2, r3, #31
 8001cfc:	4906      	ldr	r1, [pc, #24]	; (8001d18 <__NVIC_EnableIRQ+0x34>)
 8001cfe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d02:	095b      	lsrs	r3, r3, #5
 8001d04:	2001      	movs	r0, #1
 8001d06:	fa00 f202 	lsl.w	r2, r0, r2
 8001d0a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001d0e:	bf00      	nop
 8001d10:	370c      	adds	r7, #12
 8001d12:	46bd      	mov	sp, r7
 8001d14:	bc80      	pop	{r7}
 8001d16:	4770      	bx	lr
 8001d18:	e000e100 	.word	0xe000e100

08001d1c <__NVIC_SetPriority>:
 8001d1c:	b480      	push	{r7}
 8001d1e:	b083      	sub	sp, #12
 8001d20:	af00      	add	r7, sp, #0
 8001d22:	4603      	mov	r3, r0
 8001d24:	6039      	str	r1, [r7, #0]
 8001d26:	71fb      	strb	r3, [r7, #7]
 8001d28:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	db0a      	blt.n	8001d46 <__NVIC_SetPriority+0x2a>
 8001d30:	683b      	ldr	r3, [r7, #0]
 8001d32:	b2da      	uxtb	r2, r3
 8001d34:	490c      	ldr	r1, [pc, #48]	; (8001d68 <__NVIC_SetPriority+0x4c>)
 8001d36:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d3a:	0112      	lsls	r2, r2, #4
 8001d3c:	b2d2      	uxtb	r2, r2
 8001d3e:	440b      	add	r3, r1
 8001d40:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001d44:	e00a      	b.n	8001d5c <__NVIC_SetPriority+0x40>
 8001d46:	683b      	ldr	r3, [r7, #0]
 8001d48:	b2da      	uxtb	r2, r3
 8001d4a:	4908      	ldr	r1, [pc, #32]	; (8001d6c <__NVIC_SetPriority+0x50>)
 8001d4c:	79fb      	ldrb	r3, [r7, #7]
 8001d4e:	f003 030f 	and.w	r3, r3, #15
 8001d52:	3b04      	subs	r3, #4
 8001d54:	0112      	lsls	r2, r2, #4
 8001d56:	b2d2      	uxtb	r2, r2
 8001d58:	440b      	add	r3, r1
 8001d5a:	761a      	strb	r2, [r3, #24]
 8001d5c:	bf00      	nop
 8001d5e:	370c      	adds	r7, #12
 8001d60:	46bd      	mov	sp, r7
 8001d62:	bc80      	pop	{r7}
 8001d64:	4770      	bx	lr
 8001d66:	bf00      	nop
 8001d68:	e000e100 	.word	0xe000e100
 8001d6c:	e000ed00 	.word	0xe000ed00

08001d70 <NVIC_EncodePriority>:
 8001d70:	b480      	push	{r7}
 8001d72:	b089      	sub	sp, #36	; 0x24
 8001d74:	af00      	add	r7, sp, #0
 8001d76:	60f8      	str	r0, [r7, #12]
 8001d78:	60b9      	str	r1, [r7, #8]
 8001d7a:	607a      	str	r2, [r7, #4]
 8001d7c:	68fb      	ldr	r3, [r7, #12]
 8001d7e:	f003 0307 	and.w	r3, r3, #7
 8001d82:	61fb      	str	r3, [r7, #28]
 8001d84:	69fb      	ldr	r3, [r7, #28]
 8001d86:	f1c3 0307 	rsb	r3, r3, #7
 8001d8a:	2b04      	cmp	r3, #4
 8001d8c:	bf28      	it	cs
 8001d8e:	2304      	movcs	r3, #4
 8001d90:	61bb      	str	r3, [r7, #24]
 8001d92:	69fb      	ldr	r3, [r7, #28]
 8001d94:	3304      	adds	r3, #4
 8001d96:	2b06      	cmp	r3, #6
 8001d98:	d902      	bls.n	8001da0 <NVIC_EncodePriority+0x30>
 8001d9a:	69fb      	ldr	r3, [r7, #28]
 8001d9c:	3b03      	subs	r3, #3
 8001d9e:	e000      	b.n	8001da2 <NVIC_EncodePriority+0x32>
 8001da0:	2300      	movs	r3, #0
 8001da2:	617b      	str	r3, [r7, #20]
 8001da4:	f04f 32ff 	mov.w	r2, #4294967295
 8001da8:	69bb      	ldr	r3, [r7, #24]
 8001daa:	fa02 f303 	lsl.w	r3, r2, r3
 8001dae:	43da      	mvns	r2, r3
 8001db0:	68bb      	ldr	r3, [r7, #8]
 8001db2:	401a      	ands	r2, r3
 8001db4:	697b      	ldr	r3, [r7, #20]
 8001db6:	409a      	lsls	r2, r3
 8001db8:	f04f 31ff 	mov.w	r1, #4294967295
 8001dbc:	697b      	ldr	r3, [r7, #20]
 8001dbe:	fa01 f303 	lsl.w	r3, r1, r3
 8001dc2:	43d9      	mvns	r1, r3
 8001dc4:	687b      	ldr	r3, [r7, #4]
 8001dc6:	400b      	ands	r3, r1
 8001dc8:	4313      	orrs	r3, r2
 8001dca:	4618      	mov	r0, r3
 8001dcc:	3724      	adds	r7, #36	; 0x24
 8001dce:	46bd      	mov	sp, r7
 8001dd0:	bc80      	pop	{r7}
 8001dd2:	4770      	bx	lr

08001dd4 <SysTick_Config>:
 8001dd4:	b580      	push	{r7, lr}
 8001dd6:	b082      	sub	sp, #8
 8001dd8:	af00      	add	r7, sp, #0
 8001dda:	6078      	str	r0, [r7, #4]
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	3b01      	subs	r3, #1
 8001de0:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001de4:	d301      	bcc.n	8001dea <SysTick_Config+0x16>
 8001de6:	2301      	movs	r3, #1
 8001de8:	e00f      	b.n	8001e0a <SysTick_Config+0x36>
 8001dea:	4a0a      	ldr	r2, [pc, #40]	; (8001e14 <SysTick_Config+0x40>)
 8001dec:	687b      	ldr	r3, [r7, #4]
 8001dee:	3b01      	subs	r3, #1
 8001df0:	6053      	str	r3, [r2, #4]
 8001df2:	210f      	movs	r1, #15
 8001df4:	f04f 30ff 	mov.w	r0, #4294967295
 8001df8:	f7ff ff90 	bl	8001d1c <__NVIC_SetPriority>
 8001dfc:	4b05      	ldr	r3, [pc, #20]	; (8001e14 <SysTick_Config+0x40>)
 8001dfe:	2200      	movs	r2, #0
 8001e00:	609a      	str	r2, [r3, #8]
 8001e02:	4b04      	ldr	r3, [pc, #16]	; (8001e14 <SysTick_Config+0x40>)
 8001e04:	2207      	movs	r2, #7
 8001e06:	601a      	str	r2, [r3, #0]
 8001e08:	2300      	movs	r3, #0
 8001e0a:	4618      	mov	r0, r3
 8001e0c:	3708      	adds	r7, #8
 8001e0e:	46bd      	mov	sp, r7
 8001e10:	bd80      	pop	{r7, pc}
 8001e12:	bf00      	nop
 8001e14:	e000e010 	.word	0xe000e010

08001e18 <HAL_NVIC_SetPriorityGrouping>:
 8001e18:	b580      	push	{r7, lr}
 8001e1a:	b082      	sub	sp, #8
 8001e1c:	af00      	add	r7, sp, #0
 8001e1e:	6078      	str	r0, [r7, #4]
 8001e20:	6878      	ldr	r0, [r7, #4]
 8001e22:	f7ff ff2d 	bl	8001c80 <__NVIC_SetPriorityGrouping>
 8001e26:	bf00      	nop
 8001e28:	3708      	adds	r7, #8
 8001e2a:	46bd      	mov	sp, r7
 8001e2c:	bd80      	pop	{r7, pc}

08001e2e <HAL_NVIC_SetPriority>:
 8001e2e:	b580      	push	{r7, lr}
 8001e30:	b086      	sub	sp, #24
 8001e32:	af00      	add	r7, sp, #0
 8001e34:	4603      	mov	r3, r0
 8001e36:	60b9      	str	r1, [r7, #8]
 8001e38:	607a      	str	r2, [r7, #4]
 8001e3a:	73fb      	strb	r3, [r7, #15]
 8001e3c:	2300      	movs	r3, #0
 8001e3e:	617b      	str	r3, [r7, #20]
 8001e40:	f7ff ff42 	bl	8001cc8 <__NVIC_GetPriorityGrouping>
 8001e44:	6178      	str	r0, [r7, #20]
 8001e46:	687a      	ldr	r2, [r7, #4]
 8001e48:	68b9      	ldr	r1, [r7, #8]
 8001e4a:	6978      	ldr	r0, [r7, #20]
 8001e4c:	f7ff ff90 	bl	8001d70 <NVIC_EncodePriority>
 8001e50:	4602      	mov	r2, r0
 8001e52:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001e56:	4611      	mov	r1, r2
 8001e58:	4618      	mov	r0, r3
 8001e5a:	f7ff ff5f 	bl	8001d1c <__NVIC_SetPriority>
 8001e5e:	bf00      	nop
 8001e60:	3718      	adds	r7, #24
 8001e62:	46bd      	mov	sp, r7
 8001e64:	bd80      	pop	{r7, pc}

08001e66 <HAL_NVIC_EnableIRQ>:
 8001e66:	b580      	push	{r7, lr}
 8001e68:	b082      	sub	sp, #8
 8001e6a:	af00      	add	r7, sp, #0
 8001e6c:	4603      	mov	r3, r0
 8001e6e:	71fb      	strb	r3, [r7, #7]
 8001e70:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001e74:	4618      	mov	r0, r3
 8001e76:	f7ff ff35 	bl	8001ce4 <__NVIC_EnableIRQ>
 8001e7a:	bf00      	nop
 8001e7c:	3708      	adds	r7, #8
 8001e7e:	46bd      	mov	sp, r7
 8001e80:	bd80      	pop	{r7, pc}

08001e82 <HAL_SYSTICK_Config>:
 8001e82:	b580      	push	{r7, lr}
 8001e84:	b082      	sub	sp, #8
 8001e86:	af00      	add	r7, sp, #0
 8001e88:	6078      	str	r0, [r7, #4]
 8001e8a:	6878      	ldr	r0, [r7, #4]
 8001e8c:	f7ff ffa2 	bl	8001dd4 <SysTick_Config>
 8001e90:	4603      	mov	r3, r0
 8001e92:	4618      	mov	r0, r3
 8001e94:	3708      	adds	r7, #8
 8001e96:	46bd      	mov	sp, r7
 8001e98:	bd80      	pop	{r7, pc}
	...

08001e9c <HAL_GPIO_Init>:
 8001e9c:	b480      	push	{r7}
 8001e9e:	b08b      	sub	sp, #44	; 0x2c
 8001ea0:	af00      	add	r7, sp, #0
 8001ea2:	6078      	str	r0, [r7, #4]
 8001ea4:	6039      	str	r1, [r7, #0]
 8001ea6:	2300      	movs	r3, #0
 8001ea8:	627b      	str	r3, [r7, #36]	; 0x24
 8001eaa:	2300      	movs	r3, #0
 8001eac:	623b      	str	r3, [r7, #32]
 8001eae:	e148      	b.n	8002142 <HAL_GPIO_Init+0x2a6>
 8001eb0:	2201      	movs	r2, #1
 8001eb2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001eb4:	fa02 f303 	lsl.w	r3, r2, r3
 8001eb8:	61fb      	str	r3, [r7, #28]
 8001eba:	683b      	ldr	r3, [r7, #0]
 8001ebc:	681b      	ldr	r3, [r3, #0]
 8001ebe:	69fa      	ldr	r2, [r7, #28]
 8001ec0:	4013      	ands	r3, r2
 8001ec2:	61bb      	str	r3, [r7, #24]
 8001ec4:	69ba      	ldr	r2, [r7, #24]
 8001ec6:	69fb      	ldr	r3, [r7, #28]
 8001ec8:	429a      	cmp	r2, r3
 8001eca:	f040 8137 	bne.w	800213c <HAL_GPIO_Init+0x2a0>
 8001ece:	683b      	ldr	r3, [r7, #0]
 8001ed0:	685b      	ldr	r3, [r3, #4]
 8001ed2:	4aa3      	ldr	r2, [pc, #652]	; (8002160 <HAL_GPIO_Init+0x2c4>)
 8001ed4:	4293      	cmp	r3, r2
 8001ed6:	d05e      	beq.n	8001f96 <HAL_GPIO_Init+0xfa>
 8001ed8:	4aa1      	ldr	r2, [pc, #644]	; (8002160 <HAL_GPIO_Init+0x2c4>)
 8001eda:	4293      	cmp	r3, r2
 8001edc:	d875      	bhi.n	8001fca <HAL_GPIO_Init+0x12e>
 8001ede:	4aa1      	ldr	r2, [pc, #644]	; (8002164 <HAL_GPIO_Init+0x2c8>)
 8001ee0:	4293      	cmp	r3, r2
 8001ee2:	d058      	beq.n	8001f96 <HAL_GPIO_Init+0xfa>
 8001ee4:	4a9f      	ldr	r2, [pc, #636]	; (8002164 <HAL_GPIO_Init+0x2c8>)
 8001ee6:	4293      	cmp	r3, r2
 8001ee8:	d86f      	bhi.n	8001fca <HAL_GPIO_Init+0x12e>
 8001eea:	4a9f      	ldr	r2, [pc, #636]	; (8002168 <HAL_GPIO_Init+0x2cc>)
 8001eec:	4293      	cmp	r3, r2
 8001eee:	d052      	beq.n	8001f96 <HAL_GPIO_Init+0xfa>
 8001ef0:	4a9d      	ldr	r2, [pc, #628]	; (8002168 <HAL_GPIO_Init+0x2cc>)
 8001ef2:	4293      	cmp	r3, r2
 8001ef4:	d869      	bhi.n	8001fca <HAL_GPIO_Init+0x12e>
 8001ef6:	4a9d      	ldr	r2, [pc, #628]	; (800216c <HAL_GPIO_Init+0x2d0>)
 8001ef8:	4293      	cmp	r3, r2
 8001efa:	d04c      	beq.n	8001f96 <HAL_GPIO_Init+0xfa>
 8001efc:	4a9b      	ldr	r2, [pc, #620]	; (800216c <HAL_GPIO_Init+0x2d0>)
 8001efe:	4293      	cmp	r3, r2
 8001f00:	d863      	bhi.n	8001fca <HAL_GPIO_Init+0x12e>
 8001f02:	4a9b      	ldr	r2, [pc, #620]	; (8002170 <HAL_GPIO_Init+0x2d4>)
 8001f04:	4293      	cmp	r3, r2
 8001f06:	d046      	beq.n	8001f96 <HAL_GPIO_Init+0xfa>
 8001f08:	4a99      	ldr	r2, [pc, #612]	; (8002170 <HAL_GPIO_Init+0x2d4>)
 8001f0a:	4293      	cmp	r3, r2
 8001f0c:	d85d      	bhi.n	8001fca <HAL_GPIO_Init+0x12e>
 8001f0e:	2b12      	cmp	r3, #18
 8001f10:	d82a      	bhi.n	8001f68 <HAL_GPIO_Init+0xcc>
 8001f12:	2b12      	cmp	r3, #18
 8001f14:	d859      	bhi.n	8001fca <HAL_GPIO_Init+0x12e>
 8001f16:	a201      	add	r2, pc, #4	; (adr r2, 8001f1c <HAL_GPIO_Init+0x80>)
 8001f18:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001f1c:	08001f97 	.word	0x08001f97
 8001f20:	08001f71 	.word	0x08001f71
 8001f24:	08001f83 	.word	0x08001f83
 8001f28:	08001fc5 	.word	0x08001fc5
 8001f2c:	08001fcb 	.word	0x08001fcb
 8001f30:	08001fcb 	.word	0x08001fcb
 8001f34:	08001fcb 	.word	0x08001fcb
 8001f38:	08001fcb 	.word	0x08001fcb
 8001f3c:	08001fcb 	.word	0x08001fcb
 8001f40:	08001fcb 	.word	0x08001fcb
 8001f44:	08001fcb 	.word	0x08001fcb
 8001f48:	08001fcb 	.word	0x08001fcb
 8001f4c:	08001fcb 	.word	0x08001fcb
 8001f50:	08001fcb 	.word	0x08001fcb
 8001f54:	08001fcb 	.word	0x08001fcb
 8001f58:	08001fcb 	.word	0x08001fcb
 8001f5c:	08001fcb 	.word	0x08001fcb
 8001f60:	08001f79 	.word	0x08001f79
 8001f64:	08001f8d 	.word	0x08001f8d
 8001f68:	4a82      	ldr	r2, [pc, #520]	; (8002174 <HAL_GPIO_Init+0x2d8>)
 8001f6a:	4293      	cmp	r3, r2
 8001f6c:	d013      	beq.n	8001f96 <HAL_GPIO_Init+0xfa>
 8001f6e:	e02c      	b.n	8001fca <HAL_GPIO_Init+0x12e>
 8001f70:	683b      	ldr	r3, [r7, #0]
 8001f72:	68db      	ldr	r3, [r3, #12]
 8001f74:	623b      	str	r3, [r7, #32]
 8001f76:	e029      	b.n	8001fcc <HAL_GPIO_Init+0x130>
 8001f78:	683b      	ldr	r3, [r7, #0]
 8001f7a:	68db      	ldr	r3, [r3, #12]
 8001f7c:	3304      	adds	r3, #4
 8001f7e:	623b      	str	r3, [r7, #32]
 8001f80:	e024      	b.n	8001fcc <HAL_GPIO_Init+0x130>
 8001f82:	683b      	ldr	r3, [r7, #0]
 8001f84:	68db      	ldr	r3, [r3, #12]
 8001f86:	3308      	adds	r3, #8
 8001f88:	623b      	str	r3, [r7, #32]
 8001f8a:	e01f      	b.n	8001fcc <HAL_GPIO_Init+0x130>
 8001f8c:	683b      	ldr	r3, [r7, #0]
 8001f8e:	68db      	ldr	r3, [r3, #12]
 8001f90:	330c      	adds	r3, #12
 8001f92:	623b      	str	r3, [r7, #32]
 8001f94:	e01a      	b.n	8001fcc <HAL_GPIO_Init+0x130>
 8001f96:	683b      	ldr	r3, [r7, #0]
 8001f98:	689b      	ldr	r3, [r3, #8]
 8001f9a:	2b00      	cmp	r3, #0
 8001f9c:	d102      	bne.n	8001fa4 <HAL_GPIO_Init+0x108>
 8001f9e:	2304      	movs	r3, #4
 8001fa0:	623b      	str	r3, [r7, #32]
 8001fa2:	e013      	b.n	8001fcc <HAL_GPIO_Init+0x130>
 8001fa4:	683b      	ldr	r3, [r7, #0]
 8001fa6:	689b      	ldr	r3, [r3, #8]
 8001fa8:	2b01      	cmp	r3, #1
 8001faa:	d105      	bne.n	8001fb8 <HAL_GPIO_Init+0x11c>
 8001fac:	2308      	movs	r3, #8
 8001fae:	623b      	str	r3, [r7, #32]
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	69fa      	ldr	r2, [r7, #28]
 8001fb4:	611a      	str	r2, [r3, #16]
 8001fb6:	e009      	b.n	8001fcc <HAL_GPIO_Init+0x130>
 8001fb8:	2308      	movs	r3, #8
 8001fba:	623b      	str	r3, [r7, #32]
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	69fa      	ldr	r2, [r7, #28]
 8001fc0:	615a      	str	r2, [r3, #20]
 8001fc2:	e003      	b.n	8001fcc <HAL_GPIO_Init+0x130>
 8001fc4:	2300      	movs	r3, #0
 8001fc6:	623b      	str	r3, [r7, #32]
 8001fc8:	e000      	b.n	8001fcc <HAL_GPIO_Init+0x130>
 8001fca:	bf00      	nop
 8001fcc:	69bb      	ldr	r3, [r7, #24]
 8001fce:	2bff      	cmp	r3, #255	; 0xff
 8001fd0:	d801      	bhi.n	8001fd6 <HAL_GPIO_Init+0x13a>
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	e001      	b.n	8001fda <HAL_GPIO_Init+0x13e>
 8001fd6:	687b      	ldr	r3, [r7, #4]
 8001fd8:	3304      	adds	r3, #4
 8001fda:	617b      	str	r3, [r7, #20]
 8001fdc:	69bb      	ldr	r3, [r7, #24]
 8001fde:	2bff      	cmp	r3, #255	; 0xff
 8001fe0:	d802      	bhi.n	8001fe8 <HAL_GPIO_Init+0x14c>
 8001fe2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fe4:	009b      	lsls	r3, r3, #2
 8001fe6:	e002      	b.n	8001fee <HAL_GPIO_Init+0x152>
 8001fe8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fea:	3b08      	subs	r3, #8
 8001fec:	009b      	lsls	r3, r3, #2
 8001fee:	613b      	str	r3, [r7, #16]
 8001ff0:	697b      	ldr	r3, [r7, #20]
 8001ff2:	681a      	ldr	r2, [r3, #0]
 8001ff4:	210f      	movs	r1, #15
 8001ff6:	693b      	ldr	r3, [r7, #16]
 8001ff8:	fa01 f303 	lsl.w	r3, r1, r3
 8001ffc:	43db      	mvns	r3, r3
 8001ffe:	401a      	ands	r2, r3
 8002000:	6a39      	ldr	r1, [r7, #32]
 8002002:	693b      	ldr	r3, [r7, #16]
 8002004:	fa01 f303 	lsl.w	r3, r1, r3
 8002008:	431a      	orrs	r2, r3
 800200a:	697b      	ldr	r3, [r7, #20]
 800200c:	601a      	str	r2, [r3, #0]
 800200e:	683b      	ldr	r3, [r7, #0]
 8002010:	685b      	ldr	r3, [r3, #4]
 8002012:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002016:	2b00      	cmp	r3, #0
 8002018:	f000 8090 	beq.w	800213c <HAL_GPIO_Init+0x2a0>
 800201c:	4b56      	ldr	r3, [pc, #344]	; (8002178 <HAL_GPIO_Init+0x2dc>)
 800201e:	699b      	ldr	r3, [r3, #24]
 8002020:	4a55      	ldr	r2, [pc, #340]	; (8002178 <HAL_GPIO_Init+0x2dc>)
 8002022:	f043 0301 	orr.w	r3, r3, #1
 8002026:	6193      	str	r3, [r2, #24]
 8002028:	4b53      	ldr	r3, [pc, #332]	; (8002178 <HAL_GPIO_Init+0x2dc>)
 800202a:	699b      	ldr	r3, [r3, #24]
 800202c:	f003 0301 	and.w	r3, r3, #1
 8002030:	60bb      	str	r3, [r7, #8]
 8002032:	68bb      	ldr	r3, [r7, #8]
 8002034:	4a51      	ldr	r2, [pc, #324]	; (800217c <HAL_GPIO_Init+0x2e0>)
 8002036:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002038:	089b      	lsrs	r3, r3, #2
 800203a:	3302      	adds	r3, #2
 800203c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002040:	60fb      	str	r3, [r7, #12]
 8002042:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002044:	f003 0303 	and.w	r3, r3, #3
 8002048:	009b      	lsls	r3, r3, #2
 800204a:	220f      	movs	r2, #15
 800204c:	fa02 f303 	lsl.w	r3, r2, r3
 8002050:	43db      	mvns	r3, r3
 8002052:	68fa      	ldr	r2, [r7, #12]
 8002054:	4013      	ands	r3, r2
 8002056:	60fb      	str	r3, [r7, #12]
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	4a49      	ldr	r2, [pc, #292]	; (8002180 <HAL_GPIO_Init+0x2e4>)
 800205c:	4293      	cmp	r3, r2
 800205e:	d00d      	beq.n	800207c <HAL_GPIO_Init+0x1e0>
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	4a48      	ldr	r2, [pc, #288]	; (8002184 <HAL_GPIO_Init+0x2e8>)
 8002064:	4293      	cmp	r3, r2
 8002066:	d007      	beq.n	8002078 <HAL_GPIO_Init+0x1dc>
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	4a47      	ldr	r2, [pc, #284]	; (8002188 <HAL_GPIO_Init+0x2ec>)
 800206c:	4293      	cmp	r3, r2
 800206e:	d101      	bne.n	8002074 <HAL_GPIO_Init+0x1d8>
 8002070:	2302      	movs	r3, #2
 8002072:	e004      	b.n	800207e <HAL_GPIO_Init+0x1e2>
 8002074:	2303      	movs	r3, #3
 8002076:	e002      	b.n	800207e <HAL_GPIO_Init+0x1e2>
 8002078:	2301      	movs	r3, #1
 800207a:	e000      	b.n	800207e <HAL_GPIO_Init+0x1e2>
 800207c:	2300      	movs	r3, #0
 800207e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002080:	f002 0203 	and.w	r2, r2, #3
 8002084:	0092      	lsls	r2, r2, #2
 8002086:	4093      	lsls	r3, r2
 8002088:	68fa      	ldr	r2, [r7, #12]
 800208a:	4313      	orrs	r3, r2
 800208c:	60fb      	str	r3, [r7, #12]
 800208e:	493b      	ldr	r1, [pc, #236]	; (800217c <HAL_GPIO_Init+0x2e0>)
 8002090:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002092:	089b      	lsrs	r3, r3, #2
 8002094:	3302      	adds	r3, #2
 8002096:	68fa      	ldr	r2, [r7, #12]
 8002098:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800209c:	683b      	ldr	r3, [r7, #0]
 800209e:	685b      	ldr	r3, [r3, #4]
 80020a0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d006      	beq.n	80020b6 <HAL_GPIO_Init+0x21a>
 80020a8:	4b38      	ldr	r3, [pc, #224]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020aa:	689a      	ldr	r2, [r3, #8]
 80020ac:	4937      	ldr	r1, [pc, #220]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020ae:	69bb      	ldr	r3, [r7, #24]
 80020b0:	4313      	orrs	r3, r2
 80020b2:	608b      	str	r3, [r1, #8]
 80020b4:	e006      	b.n	80020c4 <HAL_GPIO_Init+0x228>
 80020b6:	4b35      	ldr	r3, [pc, #212]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020b8:	689a      	ldr	r2, [r3, #8]
 80020ba:	69bb      	ldr	r3, [r7, #24]
 80020bc:	43db      	mvns	r3, r3
 80020be:	4933      	ldr	r1, [pc, #204]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020c0:	4013      	ands	r3, r2
 80020c2:	608b      	str	r3, [r1, #8]
 80020c4:	683b      	ldr	r3, [r7, #0]
 80020c6:	685b      	ldr	r3, [r3, #4]
 80020c8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d006      	beq.n	80020de <HAL_GPIO_Init+0x242>
 80020d0:	4b2e      	ldr	r3, [pc, #184]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020d2:	68da      	ldr	r2, [r3, #12]
 80020d4:	492d      	ldr	r1, [pc, #180]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020d6:	69bb      	ldr	r3, [r7, #24]
 80020d8:	4313      	orrs	r3, r2
 80020da:	60cb      	str	r3, [r1, #12]
 80020dc:	e006      	b.n	80020ec <HAL_GPIO_Init+0x250>
 80020de:	4b2b      	ldr	r3, [pc, #172]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020e0:	68da      	ldr	r2, [r3, #12]
 80020e2:	69bb      	ldr	r3, [r7, #24]
 80020e4:	43db      	mvns	r3, r3
 80020e6:	4929      	ldr	r1, [pc, #164]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020e8:	4013      	ands	r3, r2
 80020ea:	60cb      	str	r3, [r1, #12]
 80020ec:	683b      	ldr	r3, [r7, #0]
 80020ee:	685b      	ldr	r3, [r3, #4]
 80020f0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80020f4:	2b00      	cmp	r3, #0
 80020f6:	d006      	beq.n	8002106 <HAL_GPIO_Init+0x26a>
 80020f8:	4b24      	ldr	r3, [pc, #144]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020fa:	685a      	ldr	r2, [r3, #4]
 80020fc:	4923      	ldr	r1, [pc, #140]	; (800218c <HAL_GPIO_Init+0x2f0>)
 80020fe:	69bb      	ldr	r3, [r7, #24]
 8002100:	4313      	orrs	r3, r2
 8002102:	604b      	str	r3, [r1, #4]
 8002104:	e006      	b.n	8002114 <HAL_GPIO_Init+0x278>
 8002106:	4b21      	ldr	r3, [pc, #132]	; (800218c <HAL_GPIO_Init+0x2f0>)
 8002108:	685a      	ldr	r2, [r3, #4]
 800210a:	69bb      	ldr	r3, [r7, #24]
 800210c:	43db      	mvns	r3, r3
 800210e:	491f      	ldr	r1, [pc, #124]	; (800218c <HAL_GPIO_Init+0x2f0>)
 8002110:	4013      	ands	r3, r2
 8002112:	604b      	str	r3, [r1, #4]
 8002114:	683b      	ldr	r3, [r7, #0]
 8002116:	685b      	ldr	r3, [r3, #4]
 8002118:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800211c:	2b00      	cmp	r3, #0
 800211e:	d006      	beq.n	800212e <HAL_GPIO_Init+0x292>
 8002120:	4b1a      	ldr	r3, [pc, #104]	; (800218c <HAL_GPIO_Init+0x2f0>)
 8002122:	681a      	ldr	r2, [r3, #0]
 8002124:	4919      	ldr	r1, [pc, #100]	; (800218c <HAL_GPIO_Init+0x2f0>)
 8002126:	69bb      	ldr	r3, [r7, #24]
 8002128:	4313      	orrs	r3, r2
 800212a:	600b      	str	r3, [r1, #0]
 800212c:	e006      	b.n	800213c <HAL_GPIO_Init+0x2a0>
 800212e:	4b17      	ldr	r3, [pc, #92]	; (800218c <HAL_GPIO_Init+0x2f0>)
 8002130:	681a      	ldr	r2, [r3, #0]
 8002132:	69bb      	ldr	r3, [r7, #24]
 8002134:	43db      	mvns	r3, r3
 8002136:	4915      	ldr	r1, [pc, #84]	; (800218c <HAL_GPIO_Init+0x2f0>)
 8002138:	4013      	ands	r3, r2
 800213a:	600b      	str	r3, [r1, #0]
 800213c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800213e:	3301      	adds	r3, #1
 8002140:	627b      	str	r3, [r7, #36]	; 0x24
 8002142:	683b      	ldr	r3, [r7, #0]
 8002144:	681a      	ldr	r2, [r3, #0]
 8002146:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002148:	fa22 f303 	lsr.w	r3, r2, r3
 800214c:	2b00      	cmp	r3, #0
 800214e:	f47f aeaf 	bne.w	8001eb0 <HAL_GPIO_Init+0x14>
 8002152:	bf00      	nop
 8002154:	bf00      	nop
 8002156:	372c      	adds	r7, #44	; 0x2c
 8002158:	46bd      	mov	sp, r7
 800215a:	bc80      	pop	{r7}
 800215c:	4770      	bx	lr
 800215e:	bf00      	nop
 8002160:	10320000 	.word	0x10320000
 8002164:	10310000 	.word	0x10310000
 8002168:	10220000 	.word	0x10220000
 800216c:	10210000 	.word	0x10210000
 8002170:	10120000 	.word	0x10120000
 8002174:	10110000 	.word	0x10110000
 8002178:	40021000 	.word	0x40021000
 800217c:	40010000 	.word	0x40010000
 8002180:	40010800 	.word	0x40010800
 8002184:	40010c00 	.word	0x40010c00
 8002188:	40011000 	.word	0x40011000
 800218c:	40010400 	.word	0x40010400

08002190 <HAL_GPIO_ReadPin>:
 8002190:	b480      	push	{r7}
 8002192:	b085      	sub	sp, #20
 8002194:	af00      	add	r7, sp, #0
 8002196:	6078      	str	r0, [r7, #4]
 8002198:	460b      	mov	r3, r1
 800219a:	807b      	strh	r3, [r7, #2]
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	689a      	ldr	r2, [r3, #8]
 80021a0:	887b      	ldrh	r3, [r7, #2]
 80021a2:	4013      	ands	r3, r2
 80021a4:	2b00      	cmp	r3, #0
 80021a6:	d002      	beq.n	80021ae <HAL_GPIO_ReadPin+0x1e>
 80021a8:	2301      	movs	r3, #1
 80021aa:	73fb      	strb	r3, [r7, #15]
 80021ac:	e001      	b.n	80021b2 <HAL_GPIO_ReadPin+0x22>
 80021ae:	2300      	movs	r3, #0
 80021b0:	73fb      	strb	r3, [r7, #15]
 80021b2:	7bfb      	ldrb	r3, [r7, #15]
 80021b4:	4618      	mov	r0, r3
 80021b6:	3714      	adds	r7, #20
 80021b8:	46bd      	mov	sp, r7
 80021ba:	bc80      	pop	{r7}
 80021bc:	4770      	bx	lr

080021be <HAL_GPIO_WritePin>:
 80021be:	b480      	push	{r7}
 80021c0:	b083      	sub	sp, #12
 80021c2:	af00      	add	r7, sp, #0
 80021c4:	6078      	str	r0, [r7, #4]
 80021c6:	460b      	mov	r3, r1
 80021c8:	807b      	strh	r3, [r7, #2]
 80021ca:	4613      	mov	r3, r2
 80021cc:	707b      	strb	r3, [r7, #1]
 80021ce:	787b      	ldrb	r3, [r7, #1]
 80021d0:	2b00      	cmp	r3, #0
 80021d2:	d003      	beq.n	80021dc <HAL_GPIO_WritePin+0x1e>
 80021d4:	887a      	ldrh	r2, [r7, #2]
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	611a      	str	r2, [r3, #16]
 80021da:	e003      	b.n	80021e4 <HAL_GPIO_WritePin+0x26>
 80021dc:	887b      	ldrh	r3, [r7, #2]
 80021de:	041a      	lsls	r2, r3, #16
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	611a      	str	r2, [r3, #16]
 80021e4:	bf00      	nop
 80021e6:	370c      	adds	r7, #12
 80021e8:	46bd      	mov	sp, r7
 80021ea:	bc80      	pop	{r7}
 80021ec:	4770      	bx	lr

080021ee <HAL_GPIO_TogglePin>:
 80021ee:	b480      	push	{r7}
 80021f0:	b085      	sub	sp, #20
 80021f2:	af00      	add	r7, sp, #0
 80021f4:	6078      	str	r0, [r7, #4]
 80021f6:	460b      	mov	r3, r1
 80021f8:	807b      	strh	r3, [r7, #2]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	68db      	ldr	r3, [r3, #12]
 80021fe:	60fb      	str	r3, [r7, #12]
 8002200:	887a      	ldrh	r2, [r7, #2]
 8002202:	68fb      	ldr	r3, [r7, #12]
 8002204:	4013      	ands	r3, r2
 8002206:	041a      	lsls	r2, r3, #16
 8002208:	68fb      	ldr	r3, [r7, #12]
 800220a:	43d9      	mvns	r1, r3
 800220c:	887b      	ldrh	r3, [r7, #2]
 800220e:	400b      	ands	r3, r1
 8002210:	431a      	orrs	r2, r3
 8002212:	687b      	ldr	r3, [r7, #4]
 8002214:	611a      	str	r2, [r3, #16]
 8002216:	bf00      	nop
 8002218:	3714      	adds	r7, #20
 800221a:	46bd      	mov	sp, r7
 800221c:	bc80      	pop	{r7}
 800221e:	4770      	bx	lr

08002220 <HAL_RCC_OscConfig>:
 8002220:	b580      	push	{r7, lr}
 8002222:	b086      	sub	sp, #24
 8002224:	af00      	add	r7, sp, #0
 8002226:	6078      	str	r0, [r7, #4]
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	2b00      	cmp	r3, #0
 800222c:	d101      	bne.n	8002232 <HAL_RCC_OscConfig+0x12>
 800222e:	2301      	movs	r3, #1
 8002230:	e26c      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	f003 0301 	and.w	r3, r3, #1
 800223a:	2b00      	cmp	r3, #0
 800223c:	f000 8087 	beq.w	800234e <HAL_RCC_OscConfig+0x12e>
 8002240:	4b92      	ldr	r3, [pc, #584]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002242:	685b      	ldr	r3, [r3, #4]
 8002244:	f003 030c 	and.w	r3, r3, #12
 8002248:	2b04      	cmp	r3, #4
 800224a:	d00c      	beq.n	8002266 <HAL_RCC_OscConfig+0x46>
 800224c:	4b8f      	ldr	r3, [pc, #572]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 800224e:	685b      	ldr	r3, [r3, #4]
 8002250:	f003 030c 	and.w	r3, r3, #12
 8002254:	2b08      	cmp	r3, #8
 8002256:	d112      	bne.n	800227e <HAL_RCC_OscConfig+0x5e>
 8002258:	4b8c      	ldr	r3, [pc, #560]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 800225a:	685b      	ldr	r3, [r3, #4]
 800225c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002260:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002264:	d10b      	bne.n	800227e <HAL_RCC_OscConfig+0x5e>
 8002266:	4b89      	ldr	r3, [pc, #548]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002268:	681b      	ldr	r3, [r3, #0]
 800226a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800226e:	2b00      	cmp	r3, #0
 8002270:	d06c      	beq.n	800234c <HAL_RCC_OscConfig+0x12c>
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	685b      	ldr	r3, [r3, #4]
 8002276:	2b00      	cmp	r3, #0
 8002278:	d168      	bne.n	800234c <HAL_RCC_OscConfig+0x12c>
 800227a:	2301      	movs	r3, #1
 800227c:	e246      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	685b      	ldr	r3, [r3, #4]
 8002282:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002286:	d106      	bne.n	8002296 <HAL_RCC_OscConfig+0x76>
 8002288:	4b80      	ldr	r3, [pc, #512]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 800228a:	681b      	ldr	r3, [r3, #0]
 800228c:	4a7f      	ldr	r2, [pc, #508]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 800228e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002292:	6013      	str	r3, [r2, #0]
 8002294:	e02e      	b.n	80022f4 <HAL_RCC_OscConfig+0xd4>
 8002296:	687b      	ldr	r3, [r7, #4]
 8002298:	685b      	ldr	r3, [r3, #4]
 800229a:	2b00      	cmp	r3, #0
 800229c:	d10c      	bne.n	80022b8 <HAL_RCC_OscConfig+0x98>
 800229e:	4b7b      	ldr	r3, [pc, #492]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022a0:	681b      	ldr	r3, [r3, #0]
 80022a2:	4a7a      	ldr	r2, [pc, #488]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022a4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80022a8:	6013      	str	r3, [r2, #0]
 80022aa:	4b78      	ldr	r3, [pc, #480]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022ac:	681b      	ldr	r3, [r3, #0]
 80022ae:	4a77      	ldr	r2, [pc, #476]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022b0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80022b4:	6013      	str	r3, [r2, #0]
 80022b6:	e01d      	b.n	80022f4 <HAL_RCC_OscConfig+0xd4>
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	685b      	ldr	r3, [r3, #4]
 80022bc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80022c0:	d10c      	bne.n	80022dc <HAL_RCC_OscConfig+0xbc>
 80022c2:	4b72      	ldr	r3, [pc, #456]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022c4:	681b      	ldr	r3, [r3, #0]
 80022c6:	4a71      	ldr	r2, [pc, #452]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022c8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80022cc:	6013      	str	r3, [r2, #0]
 80022ce:	4b6f      	ldr	r3, [pc, #444]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	4a6e      	ldr	r2, [pc, #440]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022d4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80022d8:	6013      	str	r3, [r2, #0]
 80022da:	e00b      	b.n	80022f4 <HAL_RCC_OscConfig+0xd4>
 80022dc:	4b6b      	ldr	r3, [pc, #428]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022de:	681b      	ldr	r3, [r3, #0]
 80022e0:	4a6a      	ldr	r2, [pc, #424]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022e2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80022e6:	6013      	str	r3, [r2, #0]
 80022e8:	4b68      	ldr	r3, [pc, #416]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	4a67      	ldr	r2, [pc, #412]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80022ee:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80022f2:	6013      	str	r3, [r2, #0]
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	685b      	ldr	r3, [r3, #4]
 80022f8:	2b00      	cmp	r3, #0
 80022fa:	d013      	beq.n	8002324 <HAL_RCC_OscConfig+0x104>
 80022fc:	f7ff fcb6 	bl	8001c6c <HAL_GetTick>
 8002300:	6138      	str	r0, [r7, #16]
 8002302:	e008      	b.n	8002316 <HAL_RCC_OscConfig+0xf6>
 8002304:	f7ff fcb2 	bl	8001c6c <HAL_GetTick>
 8002308:	4602      	mov	r2, r0
 800230a:	693b      	ldr	r3, [r7, #16]
 800230c:	1ad3      	subs	r3, r2, r3
 800230e:	2b64      	cmp	r3, #100	; 0x64
 8002310:	d901      	bls.n	8002316 <HAL_RCC_OscConfig+0xf6>
 8002312:	2303      	movs	r3, #3
 8002314:	e1fa      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 8002316:	4b5d      	ldr	r3, [pc, #372]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800231e:	2b00      	cmp	r3, #0
 8002320:	d0f0      	beq.n	8002304 <HAL_RCC_OscConfig+0xe4>
 8002322:	e014      	b.n	800234e <HAL_RCC_OscConfig+0x12e>
 8002324:	f7ff fca2 	bl	8001c6c <HAL_GetTick>
 8002328:	6138      	str	r0, [r7, #16]
 800232a:	e008      	b.n	800233e <HAL_RCC_OscConfig+0x11e>
 800232c:	f7ff fc9e 	bl	8001c6c <HAL_GetTick>
 8002330:	4602      	mov	r2, r0
 8002332:	693b      	ldr	r3, [r7, #16]
 8002334:	1ad3      	subs	r3, r2, r3
 8002336:	2b64      	cmp	r3, #100	; 0x64
 8002338:	d901      	bls.n	800233e <HAL_RCC_OscConfig+0x11e>
 800233a:	2303      	movs	r3, #3
 800233c:	e1e6      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 800233e:	4b53      	ldr	r3, [pc, #332]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002346:	2b00      	cmp	r3, #0
 8002348:	d1f0      	bne.n	800232c <HAL_RCC_OscConfig+0x10c>
 800234a:	e000      	b.n	800234e <HAL_RCC_OscConfig+0x12e>
 800234c:	bf00      	nop
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	f003 0302 	and.w	r3, r3, #2
 8002356:	2b00      	cmp	r3, #0
 8002358:	d063      	beq.n	8002422 <HAL_RCC_OscConfig+0x202>
 800235a:	4b4c      	ldr	r3, [pc, #304]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 800235c:	685b      	ldr	r3, [r3, #4]
 800235e:	f003 030c 	and.w	r3, r3, #12
 8002362:	2b00      	cmp	r3, #0
 8002364:	d00b      	beq.n	800237e <HAL_RCC_OscConfig+0x15e>
 8002366:	4b49      	ldr	r3, [pc, #292]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002368:	685b      	ldr	r3, [r3, #4]
 800236a:	f003 030c 	and.w	r3, r3, #12
 800236e:	2b08      	cmp	r3, #8
 8002370:	d11c      	bne.n	80023ac <HAL_RCC_OscConfig+0x18c>
 8002372:	4b46      	ldr	r3, [pc, #280]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002374:	685b      	ldr	r3, [r3, #4]
 8002376:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800237a:	2b00      	cmp	r3, #0
 800237c:	d116      	bne.n	80023ac <HAL_RCC_OscConfig+0x18c>
 800237e:	4b43      	ldr	r3, [pc, #268]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	f003 0302 	and.w	r3, r3, #2
 8002386:	2b00      	cmp	r3, #0
 8002388:	d005      	beq.n	8002396 <HAL_RCC_OscConfig+0x176>
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	691b      	ldr	r3, [r3, #16]
 800238e:	2b01      	cmp	r3, #1
 8002390:	d001      	beq.n	8002396 <HAL_RCC_OscConfig+0x176>
 8002392:	2301      	movs	r3, #1
 8002394:	e1ba      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 8002396:	4b3d      	ldr	r3, [pc, #244]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	695b      	ldr	r3, [r3, #20]
 80023a2:	00db      	lsls	r3, r3, #3
 80023a4:	4939      	ldr	r1, [pc, #228]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80023a6:	4313      	orrs	r3, r2
 80023a8:	600b      	str	r3, [r1, #0]
 80023aa:	e03a      	b.n	8002422 <HAL_RCC_OscConfig+0x202>
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	691b      	ldr	r3, [r3, #16]
 80023b0:	2b00      	cmp	r3, #0
 80023b2:	d020      	beq.n	80023f6 <HAL_RCC_OscConfig+0x1d6>
 80023b4:	4b36      	ldr	r3, [pc, #216]	; (8002490 <HAL_RCC_OscConfig+0x270>)
 80023b6:	2201      	movs	r2, #1
 80023b8:	601a      	str	r2, [r3, #0]
 80023ba:	f7ff fc57 	bl	8001c6c <HAL_GetTick>
 80023be:	6138      	str	r0, [r7, #16]
 80023c0:	e008      	b.n	80023d4 <HAL_RCC_OscConfig+0x1b4>
 80023c2:	f7ff fc53 	bl	8001c6c <HAL_GetTick>
 80023c6:	4602      	mov	r2, r0
 80023c8:	693b      	ldr	r3, [r7, #16]
 80023ca:	1ad3      	subs	r3, r2, r3
 80023cc:	2b02      	cmp	r3, #2
 80023ce:	d901      	bls.n	80023d4 <HAL_RCC_OscConfig+0x1b4>
 80023d0:	2303      	movs	r3, #3
 80023d2:	e19b      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 80023d4:	4b2d      	ldr	r3, [pc, #180]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	f003 0302 	and.w	r3, r3, #2
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d0f0      	beq.n	80023c2 <HAL_RCC_OscConfig+0x1a2>
 80023e0:	4b2a      	ldr	r3, [pc, #168]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80023e2:	681b      	ldr	r3, [r3, #0]
 80023e4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80023e8:	687b      	ldr	r3, [r7, #4]
 80023ea:	695b      	ldr	r3, [r3, #20]
 80023ec:	00db      	lsls	r3, r3, #3
 80023ee:	4927      	ldr	r1, [pc, #156]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 80023f0:	4313      	orrs	r3, r2
 80023f2:	600b      	str	r3, [r1, #0]
 80023f4:	e015      	b.n	8002422 <HAL_RCC_OscConfig+0x202>
 80023f6:	4b26      	ldr	r3, [pc, #152]	; (8002490 <HAL_RCC_OscConfig+0x270>)
 80023f8:	2200      	movs	r2, #0
 80023fa:	601a      	str	r2, [r3, #0]
 80023fc:	f7ff fc36 	bl	8001c6c <HAL_GetTick>
 8002400:	6138      	str	r0, [r7, #16]
 8002402:	e008      	b.n	8002416 <HAL_RCC_OscConfig+0x1f6>
 8002404:	f7ff fc32 	bl	8001c6c <HAL_GetTick>
 8002408:	4602      	mov	r2, r0
 800240a:	693b      	ldr	r3, [r7, #16]
 800240c:	1ad3      	subs	r3, r2, r3
 800240e:	2b02      	cmp	r3, #2
 8002410:	d901      	bls.n	8002416 <HAL_RCC_OscConfig+0x1f6>
 8002412:	2303      	movs	r3, #3
 8002414:	e17a      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 8002416:	4b1d      	ldr	r3, [pc, #116]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	f003 0302 	and.w	r3, r3, #2
 800241e:	2b00      	cmp	r3, #0
 8002420:	d1f0      	bne.n	8002404 <HAL_RCC_OscConfig+0x1e4>
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	681b      	ldr	r3, [r3, #0]
 8002426:	f003 0308 	and.w	r3, r3, #8
 800242a:	2b00      	cmp	r3, #0
 800242c:	d03a      	beq.n	80024a4 <HAL_RCC_OscConfig+0x284>
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	699b      	ldr	r3, [r3, #24]
 8002432:	2b00      	cmp	r3, #0
 8002434:	d019      	beq.n	800246a <HAL_RCC_OscConfig+0x24a>
 8002436:	4b17      	ldr	r3, [pc, #92]	; (8002494 <HAL_RCC_OscConfig+0x274>)
 8002438:	2201      	movs	r2, #1
 800243a:	601a      	str	r2, [r3, #0]
 800243c:	f7ff fc16 	bl	8001c6c <HAL_GetTick>
 8002440:	6138      	str	r0, [r7, #16]
 8002442:	e008      	b.n	8002456 <HAL_RCC_OscConfig+0x236>
 8002444:	f7ff fc12 	bl	8001c6c <HAL_GetTick>
 8002448:	4602      	mov	r2, r0
 800244a:	693b      	ldr	r3, [r7, #16]
 800244c:	1ad3      	subs	r3, r2, r3
 800244e:	2b02      	cmp	r3, #2
 8002450:	d901      	bls.n	8002456 <HAL_RCC_OscConfig+0x236>
 8002452:	2303      	movs	r3, #3
 8002454:	e15a      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 8002456:	4b0d      	ldr	r3, [pc, #52]	; (800248c <HAL_RCC_OscConfig+0x26c>)
 8002458:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800245a:	f003 0302 	and.w	r3, r3, #2
 800245e:	2b00      	cmp	r3, #0
 8002460:	d0f0      	beq.n	8002444 <HAL_RCC_OscConfig+0x224>
 8002462:	2001      	movs	r0, #1
 8002464:	f000 fa9a 	bl	800299c <RCC_Delay>
 8002468:	e01c      	b.n	80024a4 <HAL_RCC_OscConfig+0x284>
 800246a:	4b0a      	ldr	r3, [pc, #40]	; (8002494 <HAL_RCC_OscConfig+0x274>)
 800246c:	2200      	movs	r2, #0
 800246e:	601a      	str	r2, [r3, #0]
 8002470:	f7ff fbfc 	bl	8001c6c <HAL_GetTick>
 8002474:	6138      	str	r0, [r7, #16]
 8002476:	e00f      	b.n	8002498 <HAL_RCC_OscConfig+0x278>
 8002478:	f7ff fbf8 	bl	8001c6c <HAL_GetTick>
 800247c:	4602      	mov	r2, r0
 800247e:	693b      	ldr	r3, [r7, #16]
 8002480:	1ad3      	subs	r3, r2, r3
 8002482:	2b02      	cmp	r3, #2
 8002484:	d908      	bls.n	8002498 <HAL_RCC_OscConfig+0x278>
 8002486:	2303      	movs	r3, #3
 8002488:	e140      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 800248a:	bf00      	nop
 800248c:	40021000 	.word	0x40021000
 8002490:	42420000 	.word	0x42420000
 8002494:	42420480 	.word	0x42420480
 8002498:	4b9e      	ldr	r3, [pc, #632]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800249a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800249c:	f003 0302 	and.w	r3, r3, #2
 80024a0:	2b00      	cmp	r3, #0
 80024a2:	d1e9      	bne.n	8002478 <HAL_RCC_OscConfig+0x258>
 80024a4:	687b      	ldr	r3, [r7, #4]
 80024a6:	681b      	ldr	r3, [r3, #0]
 80024a8:	f003 0304 	and.w	r3, r3, #4
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	f000 80a6 	beq.w	80025fe <HAL_RCC_OscConfig+0x3de>
 80024b2:	2300      	movs	r3, #0
 80024b4:	75fb      	strb	r3, [r7, #23]
 80024b6:	4b97      	ldr	r3, [pc, #604]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80024b8:	69db      	ldr	r3, [r3, #28]
 80024ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80024be:	2b00      	cmp	r3, #0
 80024c0:	d10d      	bne.n	80024de <HAL_RCC_OscConfig+0x2be>
 80024c2:	4b94      	ldr	r3, [pc, #592]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80024c4:	69db      	ldr	r3, [r3, #28]
 80024c6:	4a93      	ldr	r2, [pc, #588]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80024c8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80024cc:	61d3      	str	r3, [r2, #28]
 80024ce:	4b91      	ldr	r3, [pc, #580]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80024d0:	69db      	ldr	r3, [r3, #28]
 80024d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80024d6:	60bb      	str	r3, [r7, #8]
 80024d8:	68bb      	ldr	r3, [r7, #8]
 80024da:	2301      	movs	r3, #1
 80024dc:	75fb      	strb	r3, [r7, #23]
 80024de:	4b8e      	ldr	r3, [pc, #568]	; (8002718 <HAL_RCC_OscConfig+0x4f8>)
 80024e0:	681b      	ldr	r3, [r3, #0]
 80024e2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80024e6:	2b00      	cmp	r3, #0
 80024e8:	d118      	bne.n	800251c <HAL_RCC_OscConfig+0x2fc>
 80024ea:	4b8b      	ldr	r3, [pc, #556]	; (8002718 <HAL_RCC_OscConfig+0x4f8>)
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	4a8a      	ldr	r2, [pc, #552]	; (8002718 <HAL_RCC_OscConfig+0x4f8>)
 80024f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80024f4:	6013      	str	r3, [r2, #0]
 80024f6:	f7ff fbb9 	bl	8001c6c <HAL_GetTick>
 80024fa:	6138      	str	r0, [r7, #16]
 80024fc:	e008      	b.n	8002510 <HAL_RCC_OscConfig+0x2f0>
 80024fe:	f7ff fbb5 	bl	8001c6c <HAL_GetTick>
 8002502:	4602      	mov	r2, r0
 8002504:	693b      	ldr	r3, [r7, #16]
 8002506:	1ad3      	subs	r3, r2, r3
 8002508:	2b64      	cmp	r3, #100	; 0x64
 800250a:	d901      	bls.n	8002510 <HAL_RCC_OscConfig+0x2f0>
 800250c:	2303      	movs	r3, #3
 800250e:	e0fd      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 8002510:	4b81      	ldr	r3, [pc, #516]	; (8002718 <HAL_RCC_OscConfig+0x4f8>)
 8002512:	681b      	ldr	r3, [r3, #0]
 8002514:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002518:	2b00      	cmp	r3, #0
 800251a:	d0f0      	beq.n	80024fe <HAL_RCC_OscConfig+0x2de>
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	68db      	ldr	r3, [r3, #12]
 8002520:	2b01      	cmp	r3, #1
 8002522:	d106      	bne.n	8002532 <HAL_RCC_OscConfig+0x312>
 8002524:	4b7b      	ldr	r3, [pc, #492]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002526:	6a1b      	ldr	r3, [r3, #32]
 8002528:	4a7a      	ldr	r2, [pc, #488]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800252a:	f043 0301 	orr.w	r3, r3, #1
 800252e:	6213      	str	r3, [r2, #32]
 8002530:	e02d      	b.n	800258e <HAL_RCC_OscConfig+0x36e>
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	68db      	ldr	r3, [r3, #12]
 8002536:	2b00      	cmp	r3, #0
 8002538:	d10c      	bne.n	8002554 <HAL_RCC_OscConfig+0x334>
 800253a:	4b76      	ldr	r3, [pc, #472]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800253c:	6a1b      	ldr	r3, [r3, #32]
 800253e:	4a75      	ldr	r2, [pc, #468]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002540:	f023 0301 	bic.w	r3, r3, #1
 8002544:	6213      	str	r3, [r2, #32]
 8002546:	4b73      	ldr	r3, [pc, #460]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002548:	6a1b      	ldr	r3, [r3, #32]
 800254a:	4a72      	ldr	r2, [pc, #456]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800254c:	f023 0304 	bic.w	r3, r3, #4
 8002550:	6213      	str	r3, [r2, #32]
 8002552:	e01c      	b.n	800258e <HAL_RCC_OscConfig+0x36e>
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	68db      	ldr	r3, [r3, #12]
 8002558:	2b05      	cmp	r3, #5
 800255a:	d10c      	bne.n	8002576 <HAL_RCC_OscConfig+0x356>
 800255c:	4b6d      	ldr	r3, [pc, #436]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800255e:	6a1b      	ldr	r3, [r3, #32]
 8002560:	4a6c      	ldr	r2, [pc, #432]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002562:	f043 0304 	orr.w	r3, r3, #4
 8002566:	6213      	str	r3, [r2, #32]
 8002568:	4b6a      	ldr	r3, [pc, #424]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800256a:	6a1b      	ldr	r3, [r3, #32]
 800256c:	4a69      	ldr	r2, [pc, #420]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800256e:	f043 0301 	orr.w	r3, r3, #1
 8002572:	6213      	str	r3, [r2, #32]
 8002574:	e00b      	b.n	800258e <HAL_RCC_OscConfig+0x36e>
 8002576:	4b67      	ldr	r3, [pc, #412]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002578:	6a1b      	ldr	r3, [r3, #32]
 800257a:	4a66      	ldr	r2, [pc, #408]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800257c:	f023 0301 	bic.w	r3, r3, #1
 8002580:	6213      	str	r3, [r2, #32]
 8002582:	4b64      	ldr	r3, [pc, #400]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002584:	6a1b      	ldr	r3, [r3, #32]
 8002586:	4a63      	ldr	r2, [pc, #396]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002588:	f023 0304 	bic.w	r3, r3, #4
 800258c:	6213      	str	r3, [r2, #32]
 800258e:	687b      	ldr	r3, [r7, #4]
 8002590:	68db      	ldr	r3, [r3, #12]
 8002592:	2b00      	cmp	r3, #0
 8002594:	d015      	beq.n	80025c2 <HAL_RCC_OscConfig+0x3a2>
 8002596:	f7ff fb69 	bl	8001c6c <HAL_GetTick>
 800259a:	6138      	str	r0, [r7, #16]
 800259c:	e00a      	b.n	80025b4 <HAL_RCC_OscConfig+0x394>
 800259e:	f7ff fb65 	bl	8001c6c <HAL_GetTick>
 80025a2:	4602      	mov	r2, r0
 80025a4:	693b      	ldr	r3, [r7, #16]
 80025a6:	1ad3      	subs	r3, r2, r3
 80025a8:	f241 3288 	movw	r2, #5000	; 0x1388
 80025ac:	4293      	cmp	r3, r2
 80025ae:	d901      	bls.n	80025b4 <HAL_RCC_OscConfig+0x394>
 80025b0:	2303      	movs	r3, #3
 80025b2:	e0ab      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 80025b4:	4b57      	ldr	r3, [pc, #348]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80025b6:	6a1b      	ldr	r3, [r3, #32]
 80025b8:	f003 0302 	and.w	r3, r3, #2
 80025bc:	2b00      	cmp	r3, #0
 80025be:	d0ee      	beq.n	800259e <HAL_RCC_OscConfig+0x37e>
 80025c0:	e014      	b.n	80025ec <HAL_RCC_OscConfig+0x3cc>
 80025c2:	f7ff fb53 	bl	8001c6c <HAL_GetTick>
 80025c6:	6138      	str	r0, [r7, #16]
 80025c8:	e00a      	b.n	80025e0 <HAL_RCC_OscConfig+0x3c0>
 80025ca:	f7ff fb4f 	bl	8001c6c <HAL_GetTick>
 80025ce:	4602      	mov	r2, r0
 80025d0:	693b      	ldr	r3, [r7, #16]
 80025d2:	1ad3      	subs	r3, r2, r3
 80025d4:	f241 3288 	movw	r2, #5000	; 0x1388
 80025d8:	4293      	cmp	r3, r2
 80025da:	d901      	bls.n	80025e0 <HAL_RCC_OscConfig+0x3c0>
 80025dc:	2303      	movs	r3, #3
 80025de:	e095      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 80025e0:	4b4c      	ldr	r3, [pc, #304]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80025e2:	6a1b      	ldr	r3, [r3, #32]
 80025e4:	f003 0302 	and.w	r3, r3, #2
 80025e8:	2b00      	cmp	r3, #0
 80025ea:	d1ee      	bne.n	80025ca <HAL_RCC_OscConfig+0x3aa>
 80025ec:	7dfb      	ldrb	r3, [r7, #23]
 80025ee:	2b01      	cmp	r3, #1
 80025f0:	d105      	bne.n	80025fe <HAL_RCC_OscConfig+0x3de>
 80025f2:	4b48      	ldr	r3, [pc, #288]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80025f4:	69db      	ldr	r3, [r3, #28]
 80025f6:	4a47      	ldr	r2, [pc, #284]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80025f8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80025fc:	61d3      	str	r3, [r2, #28]
 80025fe:	687b      	ldr	r3, [r7, #4]
 8002600:	69db      	ldr	r3, [r3, #28]
 8002602:	2b00      	cmp	r3, #0
 8002604:	f000 8081 	beq.w	800270a <HAL_RCC_OscConfig+0x4ea>
 8002608:	4b42      	ldr	r3, [pc, #264]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800260a:	685b      	ldr	r3, [r3, #4]
 800260c:	f003 030c 	and.w	r3, r3, #12
 8002610:	2b08      	cmp	r3, #8
 8002612:	d061      	beq.n	80026d8 <HAL_RCC_OscConfig+0x4b8>
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	69db      	ldr	r3, [r3, #28]
 8002618:	2b02      	cmp	r3, #2
 800261a:	d146      	bne.n	80026aa <HAL_RCC_OscConfig+0x48a>
 800261c:	4b3f      	ldr	r3, [pc, #252]	; (800271c <HAL_RCC_OscConfig+0x4fc>)
 800261e:	2200      	movs	r2, #0
 8002620:	601a      	str	r2, [r3, #0]
 8002622:	f7ff fb23 	bl	8001c6c <HAL_GetTick>
 8002626:	6138      	str	r0, [r7, #16]
 8002628:	e008      	b.n	800263c <HAL_RCC_OscConfig+0x41c>
 800262a:	f7ff fb1f 	bl	8001c6c <HAL_GetTick>
 800262e:	4602      	mov	r2, r0
 8002630:	693b      	ldr	r3, [r7, #16]
 8002632:	1ad3      	subs	r3, r2, r3
 8002634:	2b02      	cmp	r3, #2
 8002636:	d901      	bls.n	800263c <HAL_RCC_OscConfig+0x41c>
 8002638:	2303      	movs	r3, #3
 800263a:	e067      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 800263c:	4b35      	ldr	r3, [pc, #212]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800263e:	681b      	ldr	r3, [r3, #0]
 8002640:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002644:	2b00      	cmp	r3, #0
 8002646:	d1f0      	bne.n	800262a <HAL_RCC_OscConfig+0x40a>
 8002648:	687b      	ldr	r3, [r7, #4]
 800264a:	6a1b      	ldr	r3, [r3, #32]
 800264c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002650:	d108      	bne.n	8002664 <HAL_RCC_OscConfig+0x444>
 8002652:	4b30      	ldr	r3, [pc, #192]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002654:	685b      	ldr	r3, [r3, #4]
 8002656:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	689b      	ldr	r3, [r3, #8]
 800265e:	492d      	ldr	r1, [pc, #180]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002660:	4313      	orrs	r3, r2
 8002662:	604b      	str	r3, [r1, #4]
 8002664:	4b2b      	ldr	r3, [pc, #172]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002666:	685b      	ldr	r3, [r3, #4]
 8002668:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	6a19      	ldr	r1, [r3, #32]
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002674:	430b      	orrs	r3, r1
 8002676:	4927      	ldr	r1, [pc, #156]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 8002678:	4313      	orrs	r3, r2
 800267a:	604b      	str	r3, [r1, #4]
 800267c:	4b27      	ldr	r3, [pc, #156]	; (800271c <HAL_RCC_OscConfig+0x4fc>)
 800267e:	2201      	movs	r2, #1
 8002680:	601a      	str	r2, [r3, #0]
 8002682:	f7ff faf3 	bl	8001c6c <HAL_GetTick>
 8002686:	6138      	str	r0, [r7, #16]
 8002688:	e008      	b.n	800269c <HAL_RCC_OscConfig+0x47c>
 800268a:	f7ff faef 	bl	8001c6c <HAL_GetTick>
 800268e:	4602      	mov	r2, r0
 8002690:	693b      	ldr	r3, [r7, #16]
 8002692:	1ad3      	subs	r3, r2, r3
 8002694:	2b02      	cmp	r3, #2
 8002696:	d901      	bls.n	800269c <HAL_RCC_OscConfig+0x47c>
 8002698:	2303      	movs	r3, #3
 800269a:	e037      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 800269c:	4b1d      	ldr	r3, [pc, #116]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 800269e:	681b      	ldr	r3, [r3, #0]
 80026a0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80026a4:	2b00      	cmp	r3, #0
 80026a6:	d0f0      	beq.n	800268a <HAL_RCC_OscConfig+0x46a>
 80026a8:	e02f      	b.n	800270a <HAL_RCC_OscConfig+0x4ea>
 80026aa:	4b1c      	ldr	r3, [pc, #112]	; (800271c <HAL_RCC_OscConfig+0x4fc>)
 80026ac:	2200      	movs	r2, #0
 80026ae:	601a      	str	r2, [r3, #0]
 80026b0:	f7ff fadc 	bl	8001c6c <HAL_GetTick>
 80026b4:	6138      	str	r0, [r7, #16]
 80026b6:	e008      	b.n	80026ca <HAL_RCC_OscConfig+0x4aa>
 80026b8:	f7ff fad8 	bl	8001c6c <HAL_GetTick>
 80026bc:	4602      	mov	r2, r0
 80026be:	693b      	ldr	r3, [r7, #16]
 80026c0:	1ad3      	subs	r3, r2, r3
 80026c2:	2b02      	cmp	r3, #2
 80026c4:	d901      	bls.n	80026ca <HAL_RCC_OscConfig+0x4aa>
 80026c6:	2303      	movs	r3, #3
 80026c8:	e020      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 80026ca:	4b12      	ldr	r3, [pc, #72]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80026cc:	681b      	ldr	r3, [r3, #0]
 80026ce:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80026d2:	2b00      	cmp	r3, #0
 80026d4:	d1f0      	bne.n	80026b8 <HAL_RCC_OscConfig+0x498>
 80026d6:	e018      	b.n	800270a <HAL_RCC_OscConfig+0x4ea>
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	69db      	ldr	r3, [r3, #28]
 80026dc:	2b01      	cmp	r3, #1
 80026de:	d101      	bne.n	80026e4 <HAL_RCC_OscConfig+0x4c4>
 80026e0:	2301      	movs	r3, #1
 80026e2:	e013      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 80026e4:	4b0b      	ldr	r3, [pc, #44]	; (8002714 <HAL_RCC_OscConfig+0x4f4>)
 80026e6:	685b      	ldr	r3, [r3, #4]
 80026e8:	60fb      	str	r3, [r7, #12]
 80026ea:	68fb      	ldr	r3, [r7, #12]
 80026ec:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	6a1b      	ldr	r3, [r3, #32]
 80026f4:	429a      	cmp	r2, r3
 80026f6:	d106      	bne.n	8002706 <HAL_RCC_OscConfig+0x4e6>
 80026f8:	68fb      	ldr	r3, [r7, #12]
 80026fa:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80026fe:	687b      	ldr	r3, [r7, #4]
 8002700:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002702:	429a      	cmp	r2, r3
 8002704:	d001      	beq.n	800270a <HAL_RCC_OscConfig+0x4ea>
 8002706:	2301      	movs	r3, #1
 8002708:	e000      	b.n	800270c <HAL_RCC_OscConfig+0x4ec>
 800270a:	2300      	movs	r3, #0
 800270c:	4618      	mov	r0, r3
 800270e:	3718      	adds	r7, #24
 8002710:	46bd      	mov	sp, r7
 8002712:	bd80      	pop	{r7, pc}
 8002714:	40021000 	.word	0x40021000
 8002718:	40007000 	.word	0x40007000
 800271c:	42420060 	.word	0x42420060

08002720 <HAL_RCC_ClockConfig>:
 8002720:	b580      	push	{r7, lr}
 8002722:	b084      	sub	sp, #16
 8002724:	af00      	add	r7, sp, #0
 8002726:	6078      	str	r0, [r7, #4]
 8002728:	6039      	str	r1, [r7, #0]
 800272a:	687b      	ldr	r3, [r7, #4]
 800272c:	2b00      	cmp	r3, #0
 800272e:	d101      	bne.n	8002734 <HAL_RCC_ClockConfig+0x14>
 8002730:	2301      	movs	r3, #1
 8002732:	e0d0      	b.n	80028d6 <HAL_RCC_ClockConfig+0x1b6>
 8002734:	4b6a      	ldr	r3, [pc, #424]	; (80028e0 <HAL_RCC_ClockConfig+0x1c0>)
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	f003 0307 	and.w	r3, r3, #7
 800273c:	683a      	ldr	r2, [r7, #0]
 800273e:	429a      	cmp	r2, r3
 8002740:	d910      	bls.n	8002764 <HAL_RCC_ClockConfig+0x44>
 8002742:	4b67      	ldr	r3, [pc, #412]	; (80028e0 <HAL_RCC_ClockConfig+0x1c0>)
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	f023 0207 	bic.w	r2, r3, #7
 800274a:	4965      	ldr	r1, [pc, #404]	; (80028e0 <HAL_RCC_ClockConfig+0x1c0>)
 800274c:	683b      	ldr	r3, [r7, #0]
 800274e:	4313      	orrs	r3, r2
 8002750:	600b      	str	r3, [r1, #0]
 8002752:	4b63      	ldr	r3, [pc, #396]	; (80028e0 <HAL_RCC_ClockConfig+0x1c0>)
 8002754:	681b      	ldr	r3, [r3, #0]
 8002756:	f003 0307 	and.w	r3, r3, #7
 800275a:	683a      	ldr	r2, [r7, #0]
 800275c:	429a      	cmp	r2, r3
 800275e:	d001      	beq.n	8002764 <HAL_RCC_ClockConfig+0x44>
 8002760:	2301      	movs	r3, #1
 8002762:	e0b8      	b.n	80028d6 <HAL_RCC_ClockConfig+0x1b6>
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	681b      	ldr	r3, [r3, #0]
 8002768:	f003 0302 	and.w	r3, r3, #2
 800276c:	2b00      	cmp	r3, #0
 800276e:	d020      	beq.n	80027b2 <HAL_RCC_ClockConfig+0x92>
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	681b      	ldr	r3, [r3, #0]
 8002774:	f003 0304 	and.w	r3, r3, #4
 8002778:	2b00      	cmp	r3, #0
 800277a:	d005      	beq.n	8002788 <HAL_RCC_ClockConfig+0x68>
 800277c:	4b59      	ldr	r3, [pc, #356]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 800277e:	685b      	ldr	r3, [r3, #4]
 8002780:	4a58      	ldr	r2, [pc, #352]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 8002782:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8002786:	6053      	str	r3, [r2, #4]
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	f003 0308 	and.w	r3, r3, #8
 8002790:	2b00      	cmp	r3, #0
 8002792:	d005      	beq.n	80027a0 <HAL_RCC_ClockConfig+0x80>
 8002794:	4b53      	ldr	r3, [pc, #332]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 8002796:	685b      	ldr	r3, [r3, #4]
 8002798:	4a52      	ldr	r2, [pc, #328]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 800279a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800279e:	6053      	str	r3, [r2, #4]
 80027a0:	4b50      	ldr	r3, [pc, #320]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 80027a2:	685b      	ldr	r3, [r3, #4]
 80027a4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	689b      	ldr	r3, [r3, #8]
 80027ac:	494d      	ldr	r1, [pc, #308]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 80027ae:	4313      	orrs	r3, r2
 80027b0:	604b      	str	r3, [r1, #4]
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	681b      	ldr	r3, [r3, #0]
 80027b6:	f003 0301 	and.w	r3, r3, #1
 80027ba:	2b00      	cmp	r3, #0
 80027bc:	d040      	beq.n	8002840 <HAL_RCC_ClockConfig+0x120>
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	685b      	ldr	r3, [r3, #4]
 80027c2:	2b01      	cmp	r3, #1
 80027c4:	d107      	bne.n	80027d6 <HAL_RCC_ClockConfig+0xb6>
 80027c6:	4b47      	ldr	r3, [pc, #284]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80027ce:	2b00      	cmp	r3, #0
 80027d0:	d115      	bne.n	80027fe <HAL_RCC_ClockConfig+0xde>
 80027d2:	2301      	movs	r3, #1
 80027d4:	e07f      	b.n	80028d6 <HAL_RCC_ClockConfig+0x1b6>
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	685b      	ldr	r3, [r3, #4]
 80027da:	2b02      	cmp	r3, #2
 80027dc:	d107      	bne.n	80027ee <HAL_RCC_ClockConfig+0xce>
 80027de:	4b41      	ldr	r3, [pc, #260]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 80027e0:	681b      	ldr	r3, [r3, #0]
 80027e2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80027e6:	2b00      	cmp	r3, #0
 80027e8:	d109      	bne.n	80027fe <HAL_RCC_ClockConfig+0xde>
 80027ea:	2301      	movs	r3, #1
 80027ec:	e073      	b.n	80028d6 <HAL_RCC_ClockConfig+0x1b6>
 80027ee:	4b3d      	ldr	r3, [pc, #244]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 80027f0:	681b      	ldr	r3, [r3, #0]
 80027f2:	f003 0302 	and.w	r3, r3, #2
 80027f6:	2b00      	cmp	r3, #0
 80027f8:	d101      	bne.n	80027fe <HAL_RCC_ClockConfig+0xde>
 80027fa:	2301      	movs	r3, #1
 80027fc:	e06b      	b.n	80028d6 <HAL_RCC_ClockConfig+0x1b6>
 80027fe:	4b39      	ldr	r3, [pc, #228]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 8002800:	685b      	ldr	r3, [r3, #4]
 8002802:	f023 0203 	bic.w	r2, r3, #3
 8002806:	687b      	ldr	r3, [r7, #4]
 8002808:	685b      	ldr	r3, [r3, #4]
 800280a:	4936      	ldr	r1, [pc, #216]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 800280c:	4313      	orrs	r3, r2
 800280e:	604b      	str	r3, [r1, #4]
 8002810:	f7ff fa2c 	bl	8001c6c <HAL_GetTick>
 8002814:	60f8      	str	r0, [r7, #12]
 8002816:	e00a      	b.n	800282e <HAL_RCC_ClockConfig+0x10e>
 8002818:	f7ff fa28 	bl	8001c6c <HAL_GetTick>
 800281c:	4602      	mov	r2, r0
 800281e:	68fb      	ldr	r3, [r7, #12]
 8002820:	1ad3      	subs	r3, r2, r3
 8002822:	f241 3288 	movw	r2, #5000	; 0x1388
 8002826:	4293      	cmp	r3, r2
 8002828:	d901      	bls.n	800282e <HAL_RCC_ClockConfig+0x10e>
 800282a:	2303      	movs	r3, #3
 800282c:	e053      	b.n	80028d6 <HAL_RCC_ClockConfig+0x1b6>
 800282e:	4b2d      	ldr	r3, [pc, #180]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 8002830:	685b      	ldr	r3, [r3, #4]
 8002832:	f003 020c 	and.w	r2, r3, #12
 8002836:	687b      	ldr	r3, [r7, #4]
 8002838:	685b      	ldr	r3, [r3, #4]
 800283a:	009b      	lsls	r3, r3, #2
 800283c:	429a      	cmp	r2, r3
 800283e:	d1eb      	bne.n	8002818 <HAL_RCC_ClockConfig+0xf8>
 8002840:	4b27      	ldr	r3, [pc, #156]	; (80028e0 <HAL_RCC_ClockConfig+0x1c0>)
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	f003 0307 	and.w	r3, r3, #7
 8002848:	683a      	ldr	r2, [r7, #0]
 800284a:	429a      	cmp	r2, r3
 800284c:	d210      	bcs.n	8002870 <HAL_RCC_ClockConfig+0x150>
 800284e:	4b24      	ldr	r3, [pc, #144]	; (80028e0 <HAL_RCC_ClockConfig+0x1c0>)
 8002850:	681b      	ldr	r3, [r3, #0]
 8002852:	f023 0207 	bic.w	r2, r3, #7
 8002856:	4922      	ldr	r1, [pc, #136]	; (80028e0 <HAL_RCC_ClockConfig+0x1c0>)
 8002858:	683b      	ldr	r3, [r7, #0]
 800285a:	4313      	orrs	r3, r2
 800285c:	600b      	str	r3, [r1, #0]
 800285e:	4b20      	ldr	r3, [pc, #128]	; (80028e0 <HAL_RCC_ClockConfig+0x1c0>)
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	f003 0307 	and.w	r3, r3, #7
 8002866:	683a      	ldr	r2, [r7, #0]
 8002868:	429a      	cmp	r2, r3
 800286a:	d001      	beq.n	8002870 <HAL_RCC_ClockConfig+0x150>
 800286c:	2301      	movs	r3, #1
 800286e:	e032      	b.n	80028d6 <HAL_RCC_ClockConfig+0x1b6>
 8002870:	687b      	ldr	r3, [r7, #4]
 8002872:	681b      	ldr	r3, [r3, #0]
 8002874:	f003 0304 	and.w	r3, r3, #4
 8002878:	2b00      	cmp	r3, #0
 800287a:	d008      	beq.n	800288e <HAL_RCC_ClockConfig+0x16e>
 800287c:	4b19      	ldr	r3, [pc, #100]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 800287e:	685b      	ldr	r3, [r3, #4]
 8002880:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	68db      	ldr	r3, [r3, #12]
 8002888:	4916      	ldr	r1, [pc, #88]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 800288a:	4313      	orrs	r3, r2
 800288c:	604b      	str	r3, [r1, #4]
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	f003 0308 	and.w	r3, r3, #8
 8002896:	2b00      	cmp	r3, #0
 8002898:	d009      	beq.n	80028ae <HAL_RCC_ClockConfig+0x18e>
 800289a:	4b12      	ldr	r3, [pc, #72]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 800289c:	685b      	ldr	r3, [r3, #4]
 800289e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	691b      	ldr	r3, [r3, #16]
 80028a6:	00db      	lsls	r3, r3, #3
 80028a8:	490e      	ldr	r1, [pc, #56]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 80028aa:	4313      	orrs	r3, r2
 80028ac:	604b      	str	r3, [r1, #4]
 80028ae:	f000 f821 	bl	80028f4 <HAL_RCC_GetSysClockFreq>
 80028b2:	4602      	mov	r2, r0
 80028b4:	4b0b      	ldr	r3, [pc, #44]	; (80028e4 <HAL_RCC_ClockConfig+0x1c4>)
 80028b6:	685b      	ldr	r3, [r3, #4]
 80028b8:	091b      	lsrs	r3, r3, #4
 80028ba:	f003 030f 	and.w	r3, r3, #15
 80028be:	490a      	ldr	r1, [pc, #40]	; (80028e8 <HAL_RCC_ClockConfig+0x1c8>)
 80028c0:	5ccb      	ldrb	r3, [r1, r3]
 80028c2:	fa22 f303 	lsr.w	r3, r2, r3
 80028c6:	4a09      	ldr	r2, [pc, #36]	; (80028ec <HAL_RCC_ClockConfig+0x1cc>)
 80028c8:	6013      	str	r3, [r2, #0]
 80028ca:	4b09      	ldr	r3, [pc, #36]	; (80028f0 <HAL_RCC_ClockConfig+0x1d0>)
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	4618      	mov	r0, r3
 80028d0:	f7ff f98a 	bl	8001be8 <HAL_InitTick>
 80028d4:	2300      	movs	r3, #0
 80028d6:	4618      	mov	r0, r3
 80028d8:	3710      	adds	r7, #16
 80028da:	46bd      	mov	sp, r7
 80028dc:	bd80      	pop	{r7, pc}
 80028de:	bf00      	nop
 80028e0:	40022000 	.word	0x40022000
 80028e4:	40021000 	.word	0x40021000
 80028e8:	08003200 	.word	0x08003200
 80028ec:	20000060 	.word	0x20000060
 80028f0:	20000064 	.word	0x20000064

080028f4 <HAL_RCC_GetSysClockFreq>:
 80028f4:	b480      	push	{r7}
 80028f6:	b087      	sub	sp, #28
 80028f8:	af00      	add	r7, sp, #0
 80028fa:	2300      	movs	r3, #0
 80028fc:	60fb      	str	r3, [r7, #12]
 80028fe:	2300      	movs	r3, #0
 8002900:	60bb      	str	r3, [r7, #8]
 8002902:	2300      	movs	r3, #0
 8002904:	617b      	str	r3, [r7, #20]
 8002906:	2300      	movs	r3, #0
 8002908:	607b      	str	r3, [r7, #4]
 800290a:	2300      	movs	r3, #0
 800290c:	613b      	str	r3, [r7, #16]
 800290e:	4b1e      	ldr	r3, [pc, #120]	; (8002988 <HAL_RCC_GetSysClockFreq+0x94>)
 8002910:	685b      	ldr	r3, [r3, #4]
 8002912:	60fb      	str	r3, [r7, #12]
 8002914:	68fb      	ldr	r3, [r7, #12]
 8002916:	f003 030c 	and.w	r3, r3, #12
 800291a:	2b04      	cmp	r3, #4
 800291c:	d002      	beq.n	8002924 <HAL_RCC_GetSysClockFreq+0x30>
 800291e:	2b08      	cmp	r3, #8
 8002920:	d003      	beq.n	800292a <HAL_RCC_GetSysClockFreq+0x36>
 8002922:	e027      	b.n	8002974 <HAL_RCC_GetSysClockFreq+0x80>
 8002924:	4b19      	ldr	r3, [pc, #100]	; (800298c <HAL_RCC_GetSysClockFreq+0x98>)
 8002926:	613b      	str	r3, [r7, #16]
 8002928:	e027      	b.n	800297a <HAL_RCC_GetSysClockFreq+0x86>
 800292a:	68fb      	ldr	r3, [r7, #12]
 800292c:	0c9b      	lsrs	r3, r3, #18
 800292e:	f003 030f 	and.w	r3, r3, #15
 8002932:	4a17      	ldr	r2, [pc, #92]	; (8002990 <HAL_RCC_GetSysClockFreq+0x9c>)
 8002934:	5cd3      	ldrb	r3, [r2, r3]
 8002936:	607b      	str	r3, [r7, #4]
 8002938:	68fb      	ldr	r3, [r7, #12]
 800293a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800293e:	2b00      	cmp	r3, #0
 8002940:	d010      	beq.n	8002964 <HAL_RCC_GetSysClockFreq+0x70>
 8002942:	4b11      	ldr	r3, [pc, #68]	; (8002988 <HAL_RCC_GetSysClockFreq+0x94>)
 8002944:	685b      	ldr	r3, [r3, #4]
 8002946:	0c5b      	lsrs	r3, r3, #17
 8002948:	f003 0301 	and.w	r3, r3, #1
 800294c:	4a11      	ldr	r2, [pc, #68]	; (8002994 <HAL_RCC_GetSysClockFreq+0xa0>)
 800294e:	5cd3      	ldrb	r3, [r2, r3]
 8002950:	60bb      	str	r3, [r7, #8]
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	4a0d      	ldr	r2, [pc, #52]	; (800298c <HAL_RCC_GetSysClockFreq+0x98>)
 8002956:	fb02 f203 	mul.w	r2, r2, r3
 800295a:	68bb      	ldr	r3, [r7, #8]
 800295c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002960:	617b      	str	r3, [r7, #20]
 8002962:	e004      	b.n	800296e <HAL_RCC_GetSysClockFreq+0x7a>
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	4a0c      	ldr	r2, [pc, #48]	; (8002998 <HAL_RCC_GetSysClockFreq+0xa4>)
 8002968:	fb02 f303 	mul.w	r3, r2, r3
 800296c:	617b      	str	r3, [r7, #20]
 800296e:	697b      	ldr	r3, [r7, #20]
 8002970:	613b      	str	r3, [r7, #16]
 8002972:	e002      	b.n	800297a <HAL_RCC_GetSysClockFreq+0x86>
 8002974:	4b05      	ldr	r3, [pc, #20]	; (800298c <HAL_RCC_GetSysClockFreq+0x98>)
 8002976:	613b      	str	r3, [r7, #16]
 8002978:	bf00      	nop
 800297a:	693b      	ldr	r3, [r7, #16]
 800297c:	4618      	mov	r0, r3
 800297e:	371c      	adds	r7, #28
 8002980:	46bd      	mov	sp, r7
 8002982:	bc80      	pop	{r7}
 8002984:	4770      	bx	lr
 8002986:	bf00      	nop
 8002988:	40021000 	.word	0x40021000
 800298c:	007a1200 	.word	0x007a1200
 8002990:	08003210 	.word	0x08003210
 8002994:	08003220 	.word	0x08003220
 8002998:	003d0900 	.word	0x003d0900

0800299c <RCC_Delay>:
 800299c:	b480      	push	{r7}
 800299e:	b085      	sub	sp, #20
 80029a0:	af00      	add	r7, sp, #0
 80029a2:	6078      	str	r0, [r7, #4]
 80029a4:	4b0a      	ldr	r3, [pc, #40]	; (80029d0 <RCC_Delay+0x34>)
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	4a0a      	ldr	r2, [pc, #40]	; (80029d4 <RCC_Delay+0x38>)
 80029aa:	fba2 2303 	umull	r2, r3, r2, r3
 80029ae:	0a5b      	lsrs	r3, r3, #9
 80029b0:	687a      	ldr	r2, [r7, #4]
 80029b2:	fb02 f303 	mul.w	r3, r2, r3
 80029b6:	60fb      	str	r3, [r7, #12]
 80029b8:	bf00      	nop
 80029ba:	68fb      	ldr	r3, [r7, #12]
 80029bc:	1e5a      	subs	r2, r3, #1
 80029be:	60fa      	str	r2, [r7, #12]
 80029c0:	2b00      	cmp	r3, #0
 80029c2:	d1f9      	bne.n	80029b8 <RCC_Delay+0x1c>
 80029c4:	bf00      	nop
 80029c6:	bf00      	nop
 80029c8:	3714      	adds	r7, #20
 80029ca:	46bd      	mov	sp, r7
 80029cc:	bc80      	pop	{r7}
 80029ce:	4770      	bx	lr
 80029d0:	20000060 	.word	0x20000060
 80029d4:	10624dd3 	.word	0x10624dd3

080029d8 <HAL_TIM_Base_Init>:
 80029d8:	b580      	push	{r7, lr}
 80029da:	b082      	sub	sp, #8
 80029dc:	af00      	add	r7, sp, #0
 80029de:	6078      	str	r0, [r7, #4]
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	2b00      	cmp	r3, #0
 80029e4:	d101      	bne.n	80029ea <HAL_TIM_Base_Init+0x12>
 80029e6:	2301      	movs	r3, #1
 80029e8:	e041      	b.n	8002a6e <HAL_TIM_Base_Init+0x96>
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80029f0:	b2db      	uxtb	r3, r3
 80029f2:	2b00      	cmp	r3, #0
 80029f4:	d106      	bne.n	8002a04 <HAL_TIM_Base_Init+0x2c>
 80029f6:	687b      	ldr	r3, [r7, #4]
 80029f8:	2200      	movs	r2, #0
 80029fa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80029fe:	6878      	ldr	r0, [r7, #4]
 8002a00:	f7ff f85a 	bl	8001ab8 <HAL_TIM_Base_MspInit>
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	2202      	movs	r2, #2
 8002a08:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681a      	ldr	r2, [r3, #0]
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	3304      	adds	r3, #4
 8002a14:	4619      	mov	r1, r3
 8002a16:	4610      	mov	r0, r2
 8002a18:	f000 fa56 	bl	8002ec8 <TIM_Base_SetConfig>
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	2201      	movs	r2, #1
 8002a20:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	2201      	movs	r2, #1
 8002a28:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	2201      	movs	r2, #1
 8002a30:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002a34:	687b      	ldr	r3, [r7, #4]
 8002a36:	2201      	movs	r2, #1
 8002a38:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	2201      	movs	r2, #1
 8002a40:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	2201      	movs	r2, #1
 8002a48:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	2201      	movs	r2, #1
 8002a50:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8002a54:	687b      	ldr	r3, [r7, #4]
 8002a56:	2201      	movs	r2, #1
 8002a58:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002a5c:	687b      	ldr	r3, [r7, #4]
 8002a5e:	2201      	movs	r2, #1
 8002a60:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	2201      	movs	r2, #1
 8002a68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a6c:	2300      	movs	r3, #0
 8002a6e:	4618      	mov	r0, r3
 8002a70:	3708      	adds	r7, #8
 8002a72:	46bd      	mov	sp, r7
 8002a74:	bd80      	pop	{r7, pc}
	...

08002a78 <HAL_TIM_Base_Start_IT>:
 8002a78:	b480      	push	{r7}
 8002a7a:	b085      	sub	sp, #20
 8002a7c:	af00      	add	r7, sp, #0
 8002a7e:	6078      	str	r0, [r7, #4]
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002a86:	b2db      	uxtb	r3, r3
 8002a88:	2b01      	cmp	r3, #1
 8002a8a:	d001      	beq.n	8002a90 <HAL_TIM_Base_Start_IT+0x18>
 8002a8c:	2301      	movs	r3, #1
 8002a8e:	e035      	b.n	8002afc <HAL_TIM_Base_Start_IT+0x84>
 8002a90:	687b      	ldr	r3, [r7, #4]
 8002a92:	2202      	movs	r2, #2
 8002a94:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a98:	687b      	ldr	r3, [r7, #4]
 8002a9a:	681b      	ldr	r3, [r3, #0]
 8002a9c:	68da      	ldr	r2, [r3, #12]
 8002a9e:	687b      	ldr	r3, [r7, #4]
 8002aa0:	681b      	ldr	r3, [r3, #0]
 8002aa2:	f042 0201 	orr.w	r2, r2, #1
 8002aa6:	60da      	str	r2, [r3, #12]
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	4a16      	ldr	r2, [pc, #88]	; (8002b08 <HAL_TIM_Base_Start_IT+0x90>)
 8002aae:	4293      	cmp	r3, r2
 8002ab0:	d009      	beq.n	8002ac6 <HAL_TIM_Base_Start_IT+0x4e>
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	681b      	ldr	r3, [r3, #0]
 8002ab6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002aba:	d004      	beq.n	8002ac6 <HAL_TIM_Base_Start_IT+0x4e>
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	681b      	ldr	r3, [r3, #0]
 8002ac0:	4a12      	ldr	r2, [pc, #72]	; (8002b0c <HAL_TIM_Base_Start_IT+0x94>)
 8002ac2:	4293      	cmp	r3, r2
 8002ac4:	d111      	bne.n	8002aea <HAL_TIM_Base_Start_IT+0x72>
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	689b      	ldr	r3, [r3, #8]
 8002acc:	f003 0307 	and.w	r3, r3, #7
 8002ad0:	60fb      	str	r3, [r7, #12]
 8002ad2:	68fb      	ldr	r3, [r7, #12]
 8002ad4:	2b06      	cmp	r3, #6
 8002ad6:	d010      	beq.n	8002afa <HAL_TIM_Base_Start_IT+0x82>
 8002ad8:	687b      	ldr	r3, [r7, #4]
 8002ada:	681b      	ldr	r3, [r3, #0]
 8002adc:	681a      	ldr	r2, [r3, #0]
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	681b      	ldr	r3, [r3, #0]
 8002ae2:	f042 0201 	orr.w	r2, r2, #1
 8002ae6:	601a      	str	r2, [r3, #0]
 8002ae8:	e007      	b.n	8002afa <HAL_TIM_Base_Start_IT+0x82>
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	681a      	ldr	r2, [r3, #0]
 8002af0:	687b      	ldr	r3, [r7, #4]
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	f042 0201 	orr.w	r2, r2, #1
 8002af8:	601a      	str	r2, [r3, #0]
 8002afa:	2300      	movs	r3, #0
 8002afc:	4618      	mov	r0, r3
 8002afe:	3714      	adds	r7, #20
 8002b00:	46bd      	mov	sp, r7
 8002b02:	bc80      	pop	{r7}
 8002b04:	4770      	bx	lr
 8002b06:	bf00      	nop
 8002b08:	40012c00 	.word	0x40012c00
 8002b0c:	40000400 	.word	0x40000400

08002b10 <HAL_TIM_IRQHandler>:
 8002b10:	b580      	push	{r7, lr}
 8002b12:	b084      	sub	sp, #16
 8002b14:	af00      	add	r7, sp, #0
 8002b16:	6078      	str	r0, [r7, #4]
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	68db      	ldr	r3, [r3, #12]
 8002b1e:	60fb      	str	r3, [r7, #12]
 8002b20:	687b      	ldr	r3, [r7, #4]
 8002b22:	681b      	ldr	r3, [r3, #0]
 8002b24:	691b      	ldr	r3, [r3, #16]
 8002b26:	60bb      	str	r3, [r7, #8]
 8002b28:	68bb      	ldr	r3, [r7, #8]
 8002b2a:	f003 0302 	and.w	r3, r3, #2
 8002b2e:	2b00      	cmp	r3, #0
 8002b30:	d020      	beq.n	8002b74 <HAL_TIM_IRQHandler+0x64>
 8002b32:	68fb      	ldr	r3, [r7, #12]
 8002b34:	f003 0302 	and.w	r3, r3, #2
 8002b38:	2b00      	cmp	r3, #0
 8002b3a:	d01b      	beq.n	8002b74 <HAL_TIM_IRQHandler+0x64>
 8002b3c:	687b      	ldr	r3, [r7, #4]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	f06f 0202 	mvn.w	r2, #2
 8002b44:	611a      	str	r2, [r3, #16]
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	2201      	movs	r2, #1
 8002b4a:	771a      	strb	r2, [r3, #28]
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	681b      	ldr	r3, [r3, #0]
 8002b50:	699b      	ldr	r3, [r3, #24]
 8002b52:	f003 0303 	and.w	r3, r3, #3
 8002b56:	2b00      	cmp	r3, #0
 8002b58:	d003      	beq.n	8002b62 <HAL_TIM_IRQHandler+0x52>
 8002b5a:	6878      	ldr	r0, [r7, #4]
 8002b5c:	f000 f998 	bl	8002e90 <HAL_TIM_IC_CaptureCallback>
 8002b60:	e005      	b.n	8002b6e <HAL_TIM_IRQHandler+0x5e>
 8002b62:	6878      	ldr	r0, [r7, #4]
 8002b64:	f000 f98b 	bl	8002e7e <HAL_TIM_OC_DelayElapsedCallback>
 8002b68:	6878      	ldr	r0, [r7, #4]
 8002b6a:	f000 f99a 	bl	8002ea2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002b6e:	687b      	ldr	r3, [r7, #4]
 8002b70:	2200      	movs	r2, #0
 8002b72:	771a      	strb	r2, [r3, #28]
 8002b74:	68bb      	ldr	r3, [r7, #8]
 8002b76:	f003 0304 	and.w	r3, r3, #4
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	d020      	beq.n	8002bc0 <HAL_TIM_IRQHandler+0xb0>
 8002b7e:	68fb      	ldr	r3, [r7, #12]
 8002b80:	f003 0304 	and.w	r3, r3, #4
 8002b84:	2b00      	cmp	r3, #0
 8002b86:	d01b      	beq.n	8002bc0 <HAL_TIM_IRQHandler+0xb0>
 8002b88:	687b      	ldr	r3, [r7, #4]
 8002b8a:	681b      	ldr	r3, [r3, #0]
 8002b8c:	f06f 0204 	mvn.w	r2, #4
 8002b90:	611a      	str	r2, [r3, #16]
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	2202      	movs	r2, #2
 8002b96:	771a      	strb	r2, [r3, #28]
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	699b      	ldr	r3, [r3, #24]
 8002b9e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002ba2:	2b00      	cmp	r3, #0
 8002ba4:	d003      	beq.n	8002bae <HAL_TIM_IRQHandler+0x9e>
 8002ba6:	6878      	ldr	r0, [r7, #4]
 8002ba8:	f000 f972 	bl	8002e90 <HAL_TIM_IC_CaptureCallback>
 8002bac:	e005      	b.n	8002bba <HAL_TIM_IRQHandler+0xaa>
 8002bae:	6878      	ldr	r0, [r7, #4]
 8002bb0:	f000 f965 	bl	8002e7e <HAL_TIM_OC_DelayElapsedCallback>
 8002bb4:	6878      	ldr	r0, [r7, #4]
 8002bb6:	f000 f974 	bl	8002ea2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	2200      	movs	r2, #0
 8002bbe:	771a      	strb	r2, [r3, #28]
 8002bc0:	68bb      	ldr	r3, [r7, #8]
 8002bc2:	f003 0308 	and.w	r3, r3, #8
 8002bc6:	2b00      	cmp	r3, #0
 8002bc8:	d020      	beq.n	8002c0c <HAL_TIM_IRQHandler+0xfc>
 8002bca:	68fb      	ldr	r3, [r7, #12]
 8002bcc:	f003 0308 	and.w	r3, r3, #8
 8002bd0:	2b00      	cmp	r3, #0
 8002bd2:	d01b      	beq.n	8002c0c <HAL_TIM_IRQHandler+0xfc>
 8002bd4:	687b      	ldr	r3, [r7, #4]
 8002bd6:	681b      	ldr	r3, [r3, #0]
 8002bd8:	f06f 0208 	mvn.w	r2, #8
 8002bdc:	611a      	str	r2, [r3, #16]
 8002bde:	687b      	ldr	r3, [r7, #4]
 8002be0:	2204      	movs	r2, #4
 8002be2:	771a      	strb	r2, [r3, #28]
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	69db      	ldr	r3, [r3, #28]
 8002bea:	f003 0303 	and.w	r3, r3, #3
 8002bee:	2b00      	cmp	r3, #0
 8002bf0:	d003      	beq.n	8002bfa <HAL_TIM_IRQHandler+0xea>
 8002bf2:	6878      	ldr	r0, [r7, #4]
 8002bf4:	f000 f94c 	bl	8002e90 <HAL_TIM_IC_CaptureCallback>
 8002bf8:	e005      	b.n	8002c06 <HAL_TIM_IRQHandler+0xf6>
 8002bfa:	6878      	ldr	r0, [r7, #4]
 8002bfc:	f000 f93f 	bl	8002e7e <HAL_TIM_OC_DelayElapsedCallback>
 8002c00:	6878      	ldr	r0, [r7, #4]
 8002c02:	f000 f94e 	bl	8002ea2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	2200      	movs	r2, #0
 8002c0a:	771a      	strb	r2, [r3, #28]
 8002c0c:	68bb      	ldr	r3, [r7, #8]
 8002c0e:	f003 0310 	and.w	r3, r3, #16
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d020      	beq.n	8002c58 <HAL_TIM_IRQHandler+0x148>
 8002c16:	68fb      	ldr	r3, [r7, #12]
 8002c18:	f003 0310 	and.w	r3, r3, #16
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	d01b      	beq.n	8002c58 <HAL_TIM_IRQHandler+0x148>
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	681b      	ldr	r3, [r3, #0]
 8002c24:	f06f 0210 	mvn.w	r2, #16
 8002c28:	611a      	str	r2, [r3, #16]
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	2208      	movs	r2, #8
 8002c2e:	771a      	strb	r2, [r3, #28]
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	681b      	ldr	r3, [r3, #0]
 8002c34:	69db      	ldr	r3, [r3, #28]
 8002c36:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8002c3a:	2b00      	cmp	r3, #0
 8002c3c:	d003      	beq.n	8002c46 <HAL_TIM_IRQHandler+0x136>
 8002c3e:	6878      	ldr	r0, [r7, #4]
 8002c40:	f000 f926 	bl	8002e90 <HAL_TIM_IC_CaptureCallback>
 8002c44:	e005      	b.n	8002c52 <HAL_TIM_IRQHandler+0x142>
 8002c46:	6878      	ldr	r0, [r7, #4]
 8002c48:	f000 f919 	bl	8002e7e <HAL_TIM_OC_DelayElapsedCallback>
 8002c4c:	6878      	ldr	r0, [r7, #4]
 8002c4e:	f000 f928 	bl	8002ea2 <HAL_TIM_PWM_PulseFinishedCallback>
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	2200      	movs	r2, #0
 8002c56:	771a      	strb	r2, [r3, #28]
 8002c58:	68bb      	ldr	r3, [r7, #8]
 8002c5a:	f003 0301 	and.w	r3, r3, #1
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	d00c      	beq.n	8002c7c <HAL_TIM_IRQHandler+0x16c>
 8002c62:	68fb      	ldr	r3, [r7, #12]
 8002c64:	f003 0301 	and.w	r3, r3, #1
 8002c68:	2b00      	cmp	r3, #0
 8002c6a:	d007      	beq.n	8002c7c <HAL_TIM_IRQHandler+0x16c>
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	f06f 0201 	mvn.w	r2, #1
 8002c74:	611a      	str	r2, [r3, #16]
 8002c76:	6878      	ldr	r0, [r7, #4]
 8002c78:	f7fe fd70 	bl	800175c <HAL_TIM_PeriodElapsedCallback>
 8002c7c:	68bb      	ldr	r3, [r7, #8]
 8002c7e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c82:	2b00      	cmp	r3, #0
 8002c84:	d00c      	beq.n	8002ca0 <HAL_TIM_IRQHandler+0x190>
 8002c86:	68fb      	ldr	r3, [r7, #12]
 8002c88:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c8c:	2b00      	cmp	r3, #0
 8002c8e:	d007      	beq.n	8002ca0 <HAL_TIM_IRQHandler+0x190>
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8002c98:	611a      	str	r2, [r3, #16]
 8002c9a:	6878      	ldr	r0, [r7, #4]
 8002c9c:	f000 fa6f 	bl	800317e <HAL_TIMEx_BreakCallback>
 8002ca0:	68bb      	ldr	r3, [r7, #8]
 8002ca2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002ca6:	2b00      	cmp	r3, #0
 8002ca8:	d00c      	beq.n	8002cc4 <HAL_TIM_IRQHandler+0x1b4>
 8002caa:	68fb      	ldr	r3, [r7, #12]
 8002cac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	d007      	beq.n	8002cc4 <HAL_TIM_IRQHandler+0x1b4>
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8002cbc:	611a      	str	r2, [r3, #16]
 8002cbe:	6878      	ldr	r0, [r7, #4]
 8002cc0:	f000 f8f8 	bl	8002eb4 <HAL_TIM_TriggerCallback>
 8002cc4:	68bb      	ldr	r3, [r7, #8]
 8002cc6:	f003 0320 	and.w	r3, r3, #32
 8002cca:	2b00      	cmp	r3, #0
 8002ccc:	d00c      	beq.n	8002ce8 <HAL_TIM_IRQHandler+0x1d8>
 8002cce:	68fb      	ldr	r3, [r7, #12]
 8002cd0:	f003 0320 	and.w	r3, r3, #32
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	d007      	beq.n	8002ce8 <HAL_TIM_IRQHandler+0x1d8>
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	f06f 0220 	mvn.w	r2, #32
 8002ce0:	611a      	str	r2, [r3, #16]
 8002ce2:	6878      	ldr	r0, [r7, #4]
 8002ce4:	f000 fa42 	bl	800316c <HAL_TIMEx_CommutCallback>
 8002ce8:	bf00      	nop
 8002cea:	3710      	adds	r7, #16
 8002cec:	46bd      	mov	sp, r7
 8002cee:	bd80      	pop	{r7, pc}

08002cf0 <HAL_TIM_ConfigClockSource>:
 8002cf0:	b580      	push	{r7, lr}
 8002cf2:	b084      	sub	sp, #16
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	6078      	str	r0, [r7, #4]
 8002cf8:	6039      	str	r1, [r7, #0]
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	73fb      	strb	r3, [r7, #15]
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002d04:	2b01      	cmp	r3, #1
 8002d06:	d101      	bne.n	8002d0c <HAL_TIM_ConfigClockSource+0x1c>
 8002d08:	2302      	movs	r3, #2
 8002d0a:	e0b4      	b.n	8002e76 <HAL_TIM_ConfigClockSource+0x186>
 8002d0c:	687b      	ldr	r3, [r7, #4]
 8002d0e:	2201      	movs	r2, #1
 8002d10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	2202      	movs	r2, #2
 8002d18:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d1c:	687b      	ldr	r3, [r7, #4]
 8002d1e:	681b      	ldr	r3, [r3, #0]
 8002d20:	689b      	ldr	r3, [r3, #8]
 8002d22:	60bb      	str	r3, [r7, #8]
 8002d24:	68bb      	ldr	r3, [r7, #8]
 8002d26:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8002d2a:	60bb      	str	r3, [r7, #8]
 8002d2c:	68bb      	ldr	r3, [r7, #8]
 8002d2e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8002d32:	60bb      	str	r3, [r7, #8]
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	681b      	ldr	r3, [r3, #0]
 8002d38:	68ba      	ldr	r2, [r7, #8]
 8002d3a:	609a      	str	r2, [r3, #8]
 8002d3c:	683b      	ldr	r3, [r7, #0]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d44:	d03e      	beq.n	8002dc4 <HAL_TIM_ConfigClockSource+0xd4>
 8002d46:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002d4a:	f200 8087 	bhi.w	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d4e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002d52:	f000 8086 	beq.w	8002e62 <HAL_TIM_ConfigClockSource+0x172>
 8002d56:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8002d5a:	d87f      	bhi.n	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d5c:	2b70      	cmp	r3, #112	; 0x70
 8002d5e:	d01a      	beq.n	8002d96 <HAL_TIM_ConfigClockSource+0xa6>
 8002d60:	2b70      	cmp	r3, #112	; 0x70
 8002d62:	d87b      	bhi.n	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d64:	2b60      	cmp	r3, #96	; 0x60
 8002d66:	d050      	beq.n	8002e0a <HAL_TIM_ConfigClockSource+0x11a>
 8002d68:	2b60      	cmp	r3, #96	; 0x60
 8002d6a:	d877      	bhi.n	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d6c:	2b50      	cmp	r3, #80	; 0x50
 8002d6e:	d03c      	beq.n	8002dea <HAL_TIM_ConfigClockSource+0xfa>
 8002d70:	2b50      	cmp	r3, #80	; 0x50
 8002d72:	d873      	bhi.n	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d74:	2b40      	cmp	r3, #64	; 0x40
 8002d76:	d058      	beq.n	8002e2a <HAL_TIM_ConfigClockSource+0x13a>
 8002d78:	2b40      	cmp	r3, #64	; 0x40
 8002d7a:	d86f      	bhi.n	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d7c:	2b30      	cmp	r3, #48	; 0x30
 8002d7e:	d064      	beq.n	8002e4a <HAL_TIM_ConfigClockSource+0x15a>
 8002d80:	2b30      	cmp	r3, #48	; 0x30
 8002d82:	d86b      	bhi.n	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d84:	2b20      	cmp	r3, #32
 8002d86:	d060      	beq.n	8002e4a <HAL_TIM_ConfigClockSource+0x15a>
 8002d88:	2b20      	cmp	r3, #32
 8002d8a:	d867      	bhi.n	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d8c:	2b00      	cmp	r3, #0
 8002d8e:	d05c      	beq.n	8002e4a <HAL_TIM_ConfigClockSource+0x15a>
 8002d90:	2b10      	cmp	r3, #16
 8002d92:	d05a      	beq.n	8002e4a <HAL_TIM_ConfigClockSource+0x15a>
 8002d94:	e062      	b.n	8002e5c <HAL_TIM_ConfigClockSource+0x16c>
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	6818      	ldr	r0, [r3, #0]
 8002d9a:	683b      	ldr	r3, [r7, #0]
 8002d9c:	6899      	ldr	r1, [r3, #8]
 8002d9e:	683b      	ldr	r3, [r7, #0]
 8002da0:	685a      	ldr	r2, [r3, #4]
 8002da2:	683b      	ldr	r3, [r7, #0]
 8002da4:	68db      	ldr	r3, [r3, #12]
 8002da6:	f000 f96a 	bl	800307e <TIM_ETR_SetConfig>
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	689b      	ldr	r3, [r3, #8]
 8002db0:	60bb      	str	r3, [r7, #8]
 8002db2:	68bb      	ldr	r3, [r7, #8]
 8002db4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8002db8:	60bb      	str	r3, [r7, #8]
 8002dba:	687b      	ldr	r3, [r7, #4]
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	68ba      	ldr	r2, [r7, #8]
 8002dc0:	609a      	str	r2, [r3, #8]
 8002dc2:	e04f      	b.n	8002e64 <HAL_TIM_ConfigClockSource+0x174>
 8002dc4:	687b      	ldr	r3, [r7, #4]
 8002dc6:	6818      	ldr	r0, [r3, #0]
 8002dc8:	683b      	ldr	r3, [r7, #0]
 8002dca:	6899      	ldr	r1, [r3, #8]
 8002dcc:	683b      	ldr	r3, [r7, #0]
 8002dce:	685a      	ldr	r2, [r3, #4]
 8002dd0:	683b      	ldr	r3, [r7, #0]
 8002dd2:	68db      	ldr	r3, [r3, #12]
 8002dd4:	f000 f953 	bl	800307e <TIM_ETR_SetConfig>
 8002dd8:	687b      	ldr	r3, [r7, #4]
 8002dda:	681b      	ldr	r3, [r3, #0]
 8002ddc:	689a      	ldr	r2, [r3, #8]
 8002dde:	687b      	ldr	r3, [r7, #4]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002de6:	609a      	str	r2, [r3, #8]
 8002de8:	e03c      	b.n	8002e64 <HAL_TIM_ConfigClockSource+0x174>
 8002dea:	687b      	ldr	r3, [r7, #4]
 8002dec:	6818      	ldr	r0, [r3, #0]
 8002dee:	683b      	ldr	r3, [r7, #0]
 8002df0:	6859      	ldr	r1, [r3, #4]
 8002df2:	683b      	ldr	r3, [r7, #0]
 8002df4:	68db      	ldr	r3, [r3, #12]
 8002df6:	461a      	mov	r2, r3
 8002df8:	f000 f8ca 	bl	8002f90 <TIM_TI1_ConfigInputStage>
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	2150      	movs	r1, #80	; 0x50
 8002e02:	4618      	mov	r0, r3
 8002e04:	f000 f921 	bl	800304a <TIM_ITRx_SetConfig>
 8002e08:	e02c      	b.n	8002e64 <HAL_TIM_ConfigClockSource+0x174>
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	6818      	ldr	r0, [r3, #0]
 8002e0e:	683b      	ldr	r3, [r7, #0]
 8002e10:	6859      	ldr	r1, [r3, #4]
 8002e12:	683b      	ldr	r3, [r7, #0]
 8002e14:	68db      	ldr	r3, [r3, #12]
 8002e16:	461a      	mov	r2, r3
 8002e18:	f000 f8e8 	bl	8002fec <TIM_TI2_ConfigInputStage>
 8002e1c:	687b      	ldr	r3, [r7, #4]
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	2160      	movs	r1, #96	; 0x60
 8002e22:	4618      	mov	r0, r3
 8002e24:	f000 f911 	bl	800304a <TIM_ITRx_SetConfig>
 8002e28:	e01c      	b.n	8002e64 <HAL_TIM_ConfigClockSource+0x174>
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	6818      	ldr	r0, [r3, #0]
 8002e2e:	683b      	ldr	r3, [r7, #0]
 8002e30:	6859      	ldr	r1, [r3, #4]
 8002e32:	683b      	ldr	r3, [r7, #0]
 8002e34:	68db      	ldr	r3, [r3, #12]
 8002e36:	461a      	mov	r2, r3
 8002e38:	f000 f8aa 	bl	8002f90 <TIM_TI1_ConfigInputStage>
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	2140      	movs	r1, #64	; 0x40
 8002e42:	4618      	mov	r0, r3
 8002e44:	f000 f901 	bl	800304a <TIM_ITRx_SetConfig>
 8002e48:	e00c      	b.n	8002e64 <HAL_TIM_ConfigClockSource+0x174>
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	681a      	ldr	r2, [r3, #0]
 8002e4e:	683b      	ldr	r3, [r7, #0]
 8002e50:	681b      	ldr	r3, [r3, #0]
 8002e52:	4619      	mov	r1, r3
 8002e54:	4610      	mov	r0, r2
 8002e56:	f000 f8f8 	bl	800304a <TIM_ITRx_SetConfig>
 8002e5a:	e003      	b.n	8002e64 <HAL_TIM_ConfigClockSource+0x174>
 8002e5c:	2301      	movs	r3, #1
 8002e5e:	73fb      	strb	r3, [r7, #15]
 8002e60:	e000      	b.n	8002e64 <HAL_TIM_ConfigClockSource+0x174>
 8002e62:	bf00      	nop
 8002e64:	687b      	ldr	r3, [r7, #4]
 8002e66:	2201      	movs	r2, #1
 8002e68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e6c:	687b      	ldr	r3, [r7, #4]
 8002e6e:	2200      	movs	r2, #0
 8002e70:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e74:	7bfb      	ldrb	r3, [r7, #15]
 8002e76:	4618      	mov	r0, r3
 8002e78:	3710      	adds	r7, #16
 8002e7a:	46bd      	mov	sp, r7
 8002e7c:	bd80      	pop	{r7, pc}

08002e7e <HAL_TIM_OC_DelayElapsedCallback>:
 8002e7e:	b480      	push	{r7}
 8002e80:	b083      	sub	sp, #12
 8002e82:	af00      	add	r7, sp, #0
 8002e84:	6078      	str	r0, [r7, #4]
 8002e86:	bf00      	nop
 8002e88:	370c      	adds	r7, #12
 8002e8a:	46bd      	mov	sp, r7
 8002e8c:	bc80      	pop	{r7}
 8002e8e:	4770      	bx	lr

08002e90 <HAL_TIM_IC_CaptureCallback>:
 8002e90:	b480      	push	{r7}
 8002e92:	b083      	sub	sp, #12
 8002e94:	af00      	add	r7, sp, #0
 8002e96:	6078      	str	r0, [r7, #4]
 8002e98:	bf00      	nop
 8002e9a:	370c      	adds	r7, #12
 8002e9c:	46bd      	mov	sp, r7
 8002e9e:	bc80      	pop	{r7}
 8002ea0:	4770      	bx	lr

08002ea2 <HAL_TIM_PWM_PulseFinishedCallback>:
 8002ea2:	b480      	push	{r7}
 8002ea4:	b083      	sub	sp, #12
 8002ea6:	af00      	add	r7, sp, #0
 8002ea8:	6078      	str	r0, [r7, #4]
 8002eaa:	bf00      	nop
 8002eac:	370c      	adds	r7, #12
 8002eae:	46bd      	mov	sp, r7
 8002eb0:	bc80      	pop	{r7}
 8002eb2:	4770      	bx	lr

08002eb4 <HAL_TIM_TriggerCallback>:
 8002eb4:	b480      	push	{r7}
 8002eb6:	b083      	sub	sp, #12
 8002eb8:	af00      	add	r7, sp, #0
 8002eba:	6078      	str	r0, [r7, #4]
 8002ebc:	bf00      	nop
 8002ebe:	370c      	adds	r7, #12
 8002ec0:	46bd      	mov	sp, r7
 8002ec2:	bc80      	pop	{r7}
 8002ec4:	4770      	bx	lr
	...

08002ec8 <TIM_Base_SetConfig>:
 8002ec8:	b480      	push	{r7}
 8002eca:	b085      	sub	sp, #20
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	6078      	str	r0, [r7, #4]
 8002ed0:	6039      	str	r1, [r7, #0]
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	681b      	ldr	r3, [r3, #0]
 8002ed6:	60fb      	str	r3, [r7, #12]
 8002ed8:	687b      	ldr	r3, [r7, #4]
 8002eda:	4a2b      	ldr	r2, [pc, #172]	; (8002f88 <TIM_Base_SetConfig+0xc0>)
 8002edc:	4293      	cmp	r3, r2
 8002ede:	d007      	beq.n	8002ef0 <TIM_Base_SetConfig+0x28>
 8002ee0:	687b      	ldr	r3, [r7, #4]
 8002ee2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002ee6:	d003      	beq.n	8002ef0 <TIM_Base_SetConfig+0x28>
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	4a28      	ldr	r2, [pc, #160]	; (8002f8c <TIM_Base_SetConfig+0xc4>)
 8002eec:	4293      	cmp	r3, r2
 8002eee:	d108      	bne.n	8002f02 <TIM_Base_SetConfig+0x3a>
 8002ef0:	68fb      	ldr	r3, [r7, #12]
 8002ef2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8002ef6:	60fb      	str	r3, [r7, #12]
 8002ef8:	683b      	ldr	r3, [r7, #0]
 8002efa:	685b      	ldr	r3, [r3, #4]
 8002efc:	68fa      	ldr	r2, [r7, #12]
 8002efe:	4313      	orrs	r3, r2
 8002f00:	60fb      	str	r3, [r7, #12]
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	4a20      	ldr	r2, [pc, #128]	; (8002f88 <TIM_Base_SetConfig+0xc0>)
 8002f06:	4293      	cmp	r3, r2
 8002f08:	d007      	beq.n	8002f1a <TIM_Base_SetConfig+0x52>
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002f10:	d003      	beq.n	8002f1a <TIM_Base_SetConfig+0x52>
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	4a1d      	ldr	r2, [pc, #116]	; (8002f8c <TIM_Base_SetConfig+0xc4>)
 8002f16:	4293      	cmp	r3, r2
 8002f18:	d108      	bne.n	8002f2c <TIM_Base_SetConfig+0x64>
 8002f1a:	68fb      	ldr	r3, [r7, #12]
 8002f1c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002f20:	60fb      	str	r3, [r7, #12]
 8002f22:	683b      	ldr	r3, [r7, #0]
 8002f24:	68db      	ldr	r3, [r3, #12]
 8002f26:	68fa      	ldr	r2, [r7, #12]
 8002f28:	4313      	orrs	r3, r2
 8002f2a:	60fb      	str	r3, [r7, #12]
 8002f2c:	68fb      	ldr	r3, [r7, #12]
 8002f2e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8002f32:	683b      	ldr	r3, [r7, #0]
 8002f34:	695b      	ldr	r3, [r3, #20]
 8002f36:	4313      	orrs	r3, r2
 8002f38:	60fb      	str	r3, [r7, #12]
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	68fa      	ldr	r2, [r7, #12]
 8002f3e:	601a      	str	r2, [r3, #0]
 8002f40:	683b      	ldr	r3, [r7, #0]
 8002f42:	689a      	ldr	r2, [r3, #8]
 8002f44:	687b      	ldr	r3, [r7, #4]
 8002f46:	62da      	str	r2, [r3, #44]	; 0x2c
 8002f48:	683b      	ldr	r3, [r7, #0]
 8002f4a:	681a      	ldr	r2, [r3, #0]
 8002f4c:	687b      	ldr	r3, [r7, #4]
 8002f4e:	629a      	str	r2, [r3, #40]	; 0x28
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	4a0d      	ldr	r2, [pc, #52]	; (8002f88 <TIM_Base_SetConfig+0xc0>)
 8002f54:	4293      	cmp	r3, r2
 8002f56:	d103      	bne.n	8002f60 <TIM_Base_SetConfig+0x98>
 8002f58:	683b      	ldr	r3, [r7, #0]
 8002f5a:	691a      	ldr	r2, [r3, #16]
 8002f5c:	687b      	ldr	r3, [r7, #4]
 8002f5e:	631a      	str	r2, [r3, #48]	; 0x30
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	2201      	movs	r2, #1
 8002f64:	615a      	str	r2, [r3, #20]
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	691b      	ldr	r3, [r3, #16]
 8002f6a:	f003 0301 	and.w	r3, r3, #1
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d005      	beq.n	8002f7e <TIM_Base_SetConfig+0xb6>
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	691b      	ldr	r3, [r3, #16]
 8002f76:	f023 0201 	bic.w	r2, r3, #1
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	611a      	str	r2, [r3, #16]
 8002f7e:	bf00      	nop
 8002f80:	3714      	adds	r7, #20
 8002f82:	46bd      	mov	sp, r7
 8002f84:	bc80      	pop	{r7}
 8002f86:	4770      	bx	lr
 8002f88:	40012c00 	.word	0x40012c00
 8002f8c:	40000400 	.word	0x40000400

08002f90 <TIM_TI1_ConfigInputStage>:
 8002f90:	b480      	push	{r7}
 8002f92:	b087      	sub	sp, #28
 8002f94:	af00      	add	r7, sp, #0
 8002f96:	60f8      	str	r0, [r7, #12]
 8002f98:	60b9      	str	r1, [r7, #8]
 8002f9a:	607a      	str	r2, [r7, #4]
 8002f9c:	68fb      	ldr	r3, [r7, #12]
 8002f9e:	6a1b      	ldr	r3, [r3, #32]
 8002fa0:	617b      	str	r3, [r7, #20]
 8002fa2:	68fb      	ldr	r3, [r7, #12]
 8002fa4:	6a1b      	ldr	r3, [r3, #32]
 8002fa6:	f023 0201 	bic.w	r2, r3, #1
 8002faa:	68fb      	ldr	r3, [r7, #12]
 8002fac:	621a      	str	r2, [r3, #32]
 8002fae:	68fb      	ldr	r3, [r7, #12]
 8002fb0:	699b      	ldr	r3, [r3, #24]
 8002fb2:	613b      	str	r3, [r7, #16]
 8002fb4:	693b      	ldr	r3, [r7, #16]
 8002fb6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8002fba:	613b      	str	r3, [r7, #16]
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	011b      	lsls	r3, r3, #4
 8002fc0:	693a      	ldr	r2, [r7, #16]
 8002fc2:	4313      	orrs	r3, r2
 8002fc4:	613b      	str	r3, [r7, #16]
 8002fc6:	697b      	ldr	r3, [r7, #20]
 8002fc8:	f023 030a 	bic.w	r3, r3, #10
 8002fcc:	617b      	str	r3, [r7, #20]
 8002fce:	697a      	ldr	r2, [r7, #20]
 8002fd0:	68bb      	ldr	r3, [r7, #8]
 8002fd2:	4313      	orrs	r3, r2
 8002fd4:	617b      	str	r3, [r7, #20]
 8002fd6:	68fb      	ldr	r3, [r7, #12]
 8002fd8:	693a      	ldr	r2, [r7, #16]
 8002fda:	619a      	str	r2, [r3, #24]
 8002fdc:	68fb      	ldr	r3, [r7, #12]
 8002fde:	697a      	ldr	r2, [r7, #20]
 8002fe0:	621a      	str	r2, [r3, #32]
 8002fe2:	bf00      	nop
 8002fe4:	371c      	adds	r7, #28
 8002fe6:	46bd      	mov	sp, r7
 8002fe8:	bc80      	pop	{r7}
 8002fea:	4770      	bx	lr

08002fec <TIM_TI2_ConfigInputStage>:
 8002fec:	b480      	push	{r7}
 8002fee:	b087      	sub	sp, #28
 8002ff0:	af00      	add	r7, sp, #0
 8002ff2:	60f8      	str	r0, [r7, #12]
 8002ff4:	60b9      	str	r1, [r7, #8]
 8002ff6:	607a      	str	r2, [r7, #4]
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	6a1b      	ldr	r3, [r3, #32]
 8002ffc:	617b      	str	r3, [r7, #20]
 8002ffe:	68fb      	ldr	r3, [r7, #12]
 8003000:	6a1b      	ldr	r3, [r3, #32]
 8003002:	f023 0210 	bic.w	r2, r3, #16
 8003006:	68fb      	ldr	r3, [r7, #12]
 8003008:	621a      	str	r2, [r3, #32]
 800300a:	68fb      	ldr	r3, [r7, #12]
 800300c:	699b      	ldr	r3, [r3, #24]
 800300e:	613b      	str	r3, [r7, #16]
 8003010:	693b      	ldr	r3, [r7, #16]
 8003012:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003016:	613b      	str	r3, [r7, #16]
 8003018:	687b      	ldr	r3, [r7, #4]
 800301a:	031b      	lsls	r3, r3, #12
 800301c:	693a      	ldr	r2, [r7, #16]
 800301e:	4313      	orrs	r3, r2
 8003020:	613b      	str	r3, [r7, #16]
 8003022:	697b      	ldr	r3, [r7, #20]
 8003024:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003028:	617b      	str	r3, [r7, #20]
 800302a:	68bb      	ldr	r3, [r7, #8]
 800302c:	011b      	lsls	r3, r3, #4
 800302e:	697a      	ldr	r2, [r7, #20]
 8003030:	4313      	orrs	r3, r2
 8003032:	617b      	str	r3, [r7, #20]
 8003034:	68fb      	ldr	r3, [r7, #12]
 8003036:	693a      	ldr	r2, [r7, #16]
 8003038:	619a      	str	r2, [r3, #24]
 800303a:	68fb      	ldr	r3, [r7, #12]
 800303c:	697a      	ldr	r2, [r7, #20]
 800303e:	621a      	str	r2, [r3, #32]
 8003040:	bf00      	nop
 8003042:	371c      	adds	r7, #28
 8003044:	46bd      	mov	sp, r7
 8003046:	bc80      	pop	{r7}
 8003048:	4770      	bx	lr

0800304a <TIM_ITRx_SetConfig>:
 800304a:	b480      	push	{r7}
 800304c:	b085      	sub	sp, #20
 800304e:	af00      	add	r7, sp, #0
 8003050:	6078      	str	r0, [r7, #4]
 8003052:	6039      	str	r1, [r7, #0]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	689b      	ldr	r3, [r3, #8]
 8003058:	60fb      	str	r3, [r7, #12]
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003060:	60fb      	str	r3, [r7, #12]
 8003062:	683a      	ldr	r2, [r7, #0]
 8003064:	68fb      	ldr	r3, [r7, #12]
 8003066:	4313      	orrs	r3, r2
 8003068:	f043 0307 	orr.w	r3, r3, #7
 800306c:	60fb      	str	r3, [r7, #12]
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	68fa      	ldr	r2, [r7, #12]
 8003072:	609a      	str	r2, [r3, #8]
 8003074:	bf00      	nop
 8003076:	3714      	adds	r7, #20
 8003078:	46bd      	mov	sp, r7
 800307a:	bc80      	pop	{r7}
 800307c:	4770      	bx	lr

0800307e <TIM_ETR_SetConfig>:
 800307e:	b480      	push	{r7}
 8003080:	b087      	sub	sp, #28
 8003082:	af00      	add	r7, sp, #0
 8003084:	60f8      	str	r0, [r7, #12]
 8003086:	60b9      	str	r1, [r7, #8]
 8003088:	607a      	str	r2, [r7, #4]
 800308a:	603b      	str	r3, [r7, #0]
 800308c:	68fb      	ldr	r3, [r7, #12]
 800308e:	689b      	ldr	r3, [r3, #8]
 8003090:	617b      	str	r3, [r7, #20]
 8003092:	697b      	ldr	r3, [r7, #20]
 8003094:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003098:	617b      	str	r3, [r7, #20]
 800309a:	683b      	ldr	r3, [r7, #0]
 800309c:	021a      	lsls	r2, r3, #8
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	431a      	orrs	r2, r3
 80030a2:	68bb      	ldr	r3, [r7, #8]
 80030a4:	4313      	orrs	r3, r2
 80030a6:	697a      	ldr	r2, [r7, #20]
 80030a8:	4313      	orrs	r3, r2
 80030aa:	617b      	str	r3, [r7, #20]
 80030ac:	68fb      	ldr	r3, [r7, #12]
 80030ae:	697a      	ldr	r2, [r7, #20]
 80030b0:	609a      	str	r2, [r3, #8]
 80030b2:	bf00      	nop
 80030b4:	371c      	adds	r7, #28
 80030b6:	46bd      	mov	sp, r7
 80030b8:	bc80      	pop	{r7}
 80030ba:	4770      	bx	lr

080030bc <HAL_TIMEx_MasterConfigSynchronization>:
 80030bc:	b480      	push	{r7}
 80030be:	b085      	sub	sp, #20
 80030c0:	af00      	add	r7, sp, #0
 80030c2:	6078      	str	r0, [r7, #4]
 80030c4:	6039      	str	r1, [r7, #0]
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80030cc:	2b01      	cmp	r3, #1
 80030ce:	d101      	bne.n	80030d4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80030d0:	2302      	movs	r3, #2
 80030d2:	e041      	b.n	8003158 <HAL_TIMEx_MasterConfigSynchronization+0x9c>
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	2201      	movs	r2, #1
 80030d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	2202      	movs	r2, #2
 80030e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	685b      	ldr	r3, [r3, #4]
 80030ea:	60fb      	str	r3, [r7, #12]
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	681b      	ldr	r3, [r3, #0]
 80030f0:	689b      	ldr	r3, [r3, #8]
 80030f2:	60bb      	str	r3, [r7, #8]
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80030fa:	60fb      	str	r3, [r7, #12]
 80030fc:	683b      	ldr	r3, [r7, #0]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	68fa      	ldr	r2, [r7, #12]
 8003102:	4313      	orrs	r3, r2
 8003104:	60fb      	str	r3, [r7, #12]
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	68fa      	ldr	r2, [r7, #12]
 800310c:	605a      	str	r2, [r3, #4]
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	681b      	ldr	r3, [r3, #0]
 8003112:	4a14      	ldr	r2, [pc, #80]	; (8003164 <HAL_TIMEx_MasterConfigSynchronization+0xa8>)
 8003114:	4293      	cmp	r3, r2
 8003116:	d009      	beq.n	800312c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003120:	d004      	beq.n	800312c <HAL_TIMEx_MasterConfigSynchronization+0x70>
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	4a10      	ldr	r2, [pc, #64]	; (8003168 <HAL_TIMEx_MasterConfigSynchronization+0xac>)
 8003128:	4293      	cmp	r3, r2
 800312a:	d10c      	bne.n	8003146 <HAL_TIMEx_MasterConfigSynchronization+0x8a>
 800312c:	68bb      	ldr	r3, [r7, #8]
 800312e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003132:	60bb      	str	r3, [r7, #8]
 8003134:	683b      	ldr	r3, [r7, #0]
 8003136:	685b      	ldr	r3, [r3, #4]
 8003138:	68ba      	ldr	r2, [r7, #8]
 800313a:	4313      	orrs	r3, r2
 800313c:	60bb      	str	r3, [r7, #8]
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	68ba      	ldr	r2, [r7, #8]
 8003144:	609a      	str	r2, [r3, #8]
 8003146:	687b      	ldr	r3, [r7, #4]
 8003148:	2201      	movs	r2, #1
 800314a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	2200      	movs	r2, #0
 8003152:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003156:	2300      	movs	r3, #0
 8003158:	4618      	mov	r0, r3
 800315a:	3714      	adds	r7, #20
 800315c:	46bd      	mov	sp, r7
 800315e:	bc80      	pop	{r7}
 8003160:	4770      	bx	lr
 8003162:	bf00      	nop
 8003164:	40012c00 	.word	0x40012c00
 8003168:	40000400 	.word	0x40000400

0800316c <HAL_TIMEx_CommutCallback>:
 800316c:	b480      	push	{r7}
 800316e:	b083      	sub	sp, #12
 8003170:	af00      	add	r7, sp, #0
 8003172:	6078      	str	r0, [r7, #4]
 8003174:	bf00      	nop
 8003176:	370c      	adds	r7, #12
 8003178:	46bd      	mov	sp, r7
 800317a:	bc80      	pop	{r7}
 800317c:	4770      	bx	lr

0800317e <HAL_TIMEx_BreakCallback>:
 800317e:	b480      	push	{r7}
 8003180:	b083      	sub	sp, #12
 8003182:	af00      	add	r7, sp, #0
 8003184:	6078      	str	r0, [r7, #4]
 8003186:	bf00      	nop
 8003188:	370c      	adds	r7, #12
 800318a:	46bd      	mov	sp, r7
 800318c:	bc80      	pop	{r7}
 800318e:	4770      	bx	lr

08003190 <__libc_init_array>:
 8003190:	b570      	push	{r4, r5, r6, lr}
 8003192:	2600      	movs	r6, #0
 8003194:	4d0c      	ldr	r5, [pc, #48]	; (80031c8 <__libc_init_array+0x38>)
 8003196:	4c0d      	ldr	r4, [pc, #52]	; (80031cc <__libc_init_array+0x3c>)
 8003198:	1b64      	subs	r4, r4, r5
 800319a:	10a4      	asrs	r4, r4, #2
 800319c:	42a6      	cmp	r6, r4
 800319e:	d109      	bne.n	80031b4 <__libc_init_array+0x24>
 80031a0:	f000 f822 	bl	80031e8 <_init>
 80031a4:	2600      	movs	r6, #0
 80031a6:	4d0a      	ldr	r5, [pc, #40]	; (80031d0 <__libc_init_array+0x40>)
 80031a8:	4c0a      	ldr	r4, [pc, #40]	; (80031d4 <__libc_init_array+0x44>)
 80031aa:	1b64      	subs	r4, r4, r5
 80031ac:	10a4      	asrs	r4, r4, #2
 80031ae:	42a6      	cmp	r6, r4
 80031b0:	d105      	bne.n	80031be <__libc_init_array+0x2e>
 80031b2:	bd70      	pop	{r4, r5, r6, pc}
 80031b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80031b8:	4798      	blx	r3
 80031ba:	3601      	adds	r6, #1
 80031bc:	e7ee      	b.n	800319c <__libc_init_array+0xc>
 80031be:	f855 3b04 	ldr.w	r3, [r5], #4
 80031c2:	4798      	blx	r3
 80031c4:	3601      	adds	r6, #1
 80031c6:	e7f2      	b.n	80031ae <__libc_init_array+0x1e>
 80031c8:	08003224 	.word	0x08003224
 80031cc:	08003224 	.word	0x08003224
 80031d0:	08003224 	.word	0x08003224
 80031d4:	08003228 	.word	0x08003228

080031d8 <memset>:
 80031d8:	4603      	mov	r3, r0
 80031da:	4402      	add	r2, r0
 80031dc:	4293      	cmp	r3, r2
 80031de:	d100      	bne.n	80031e2 <memset+0xa>
 80031e0:	4770      	bx	lr
 80031e2:	f803 1b01 	strb.w	r1, [r3], #1
 80031e6:	e7f9      	b.n	80031dc <memset+0x4>

080031e8 <_init>:
 80031e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031ea:	bf00      	nop
 80031ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80031ee:	bc08      	pop	{r3}
 80031f0:	469e      	mov	lr, r3
 80031f2:	4770      	bx	lr

080031f4 <_fini>:
 80031f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031f6:	bf00      	nop
 80031f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80031fa:	bc08      	pop	{r3}
 80031fc:	469e      	mov	lr, r3
 80031fe:	4770      	bx	lr
